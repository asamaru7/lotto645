var getPhotoEditorInstance = function () {
	return window.PhotoEditorApp || webpackJsonp([0], {
		0: function (t, e, i) {
			t.exports = i(1)
		}, 1: function (t, e, i) {
			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			var o, a, s = i(2), r = (n(s), i(70)), l = n(r), _ = i(71), d = n(_), u = i(75), p = n(u), c = i(256),
				h = n(c), f = i(260), T = n(f), g = i(261), m = n(g), E = i(263), C = n(E), S = i(265), I = n(S),
				L = i(266), A = n(L), b = i(268), y = n(b), v = i(269), O = n(v), x = i(270), R = n(x), P = i(271),
				k = n(P), B = i(272), D = n(B), N = i(275), $ = n(N), M = i(276), G = n(M), w = i(277), U = n(w),
				F = i(278), z = n(F), W = i(279), V = n(W), H = i(107), K = n(H), j = i(108), X = n(j), Z = i(124),
				Y = n(Z), q = i(257), J = n(q), Q = i(140), tt = n(Q), et = i(113), it = n(et), nt = function () {
					function t() {
						return (0, l["default"])(this, t), t.instance || (t.instance = this), t.instance
					}

					return t.prototype.init = function (t) {
						var e = {}, i = void 0;
						"string" == typeof t && (t = this._convertOptionString(t)), this._controller = new p["default"], this._controller.setup(t), i = this._controller.options.functions, this._renderTemplate(), this._controller.setViews(e), this._controller.init(), e.common = new h["default"](this._controller), e.commonUploader = new z["default"](this._controller), e.commonEditor = new T["default"](this._controller), e.editorList = new m["default"](this._controller), e.uploaderList = new C["default"](this._controller), e.control = new I["default"](this._controller), e.progress = new V["default"](this._controller), i.useFilter && (e.filterControl = new A["default"](this._controller)), i.useResize && (e.resizeControl = new y["default"](this._controller)), i.useCrop && (e.cropControl = new O["default"](this._controller)), i.useAdjust && (e.adjustControl = new R["default"](this._controller)), i.useMosaic && (e.mosaicControl = new k["default"](this._controller)), i.useSignature && (e.signatureControl = new D["default"](this._controller)), i.useSticker && (e.stickerControl = new $["default"](this._controller)), i.useText && (e.textControl = new G["default"](this._controller)), i.usePhotoFrame && (e.frameControl = new U["default"](this._controller))
					}, t.prototype._renderTemplate = function () {
						(0, it["default"])(Y["default"].PHOTOEDITOR_WRAP).length || (0, it["default"])(this._controller.options.container).append(J["default"].html)
					}, t.prototype.setup = function (t) {
						this._controller.setup(t)
					}, t.prototype._convertOptionString = function (t) {
						var e = X["default"].queryStringToObject(t), i = X["default"].getObjectFromUrlQueryString(),
							n = e.tabList ? e.tabList.split("|") : ["Base", "Edit"];
						e.pin && e.pin.length > 0 && (e.useSignature = !1), "Edit" !== e.selectedTab || i.copyurl || (e.selectedTab = "Base", n.indexOf("Base") === -1 && n.unshift("Base"));
						var o = {
							filterPath: e.filterPath || K["default"].defaultOptions.filterPath,
							setting: {
								env: e.env,
								userId: e.userId,
								serviceName: e.serviceName,
								apiDomain: X["default"].addURLProtocol(e.baseDomain)
							},
							functions: {
								useFilter: "undefined" == typeof e.useFilter || e.useFilter,
								useCrop: "undefined" == typeof e.useCrop || e.useCrop,
								useResize: "undefined" == typeof e.useResize || e.useResize,
								useAdjust: "undefined" == typeof e.useAdjust || e.useAdjust,
								useMosaic: "undefined" == typeof e.useMosaic || e.useMosaic,
								useSignature: "undefined" == typeof e.useSignature || e.useSignature,
								useSticker: "undefined" == typeof e.useSticker || e.useSticker,
								useText: "undefined" == typeof e.useText || e.useText,
								usePhotoFrame: "undefined" == typeof e.usePhotoFrame || e.usePhotoFrame
							},
							sessionKey: e.sessionKey,
							resizePreset: e.imageWidthList ? e.imageWidthList.split("|").map(function (t) {
								return Number(t)
							}) : void 0,
							resizeCustom: !0,
							resizeDefault: "undefined" != typeof e.defaultWidth && "-1" !== e.defaultWidth && "reedit" !== i.mode ? Number(e.defaultWidth) : void 0,
							signature: {defaultText: "undefined" != typeof e.signatureDefaultText ? e.signatureDefaultText : "http://blog.naver.com/" + e.userId},
							photos: i.copyurl ? [{url: i.copyurl}] : void 0,
							allowedImageTypes: e.allowedImageTypes ? e.allowedImageTypes.split("|") : ["jpg", "gif", "png", "bmp"],
							allowedImageExtensions: e.allowedImageExtensions ? e.allowedImageExtensions.split("|") : ["jpg", "jpeg", "gif", "png", "bmp", "heif", "heic"],
							cloudSaveApi: e.ndriveSaveApi,
							maxTotalSize: "undefined" != typeof e.maxTotalSize ? Number(e.maxTotalSize) : void 0,
							maxFileSize: "undefined" != typeof e.maxFileSize ? Number(e.maxFileSize) : void 0,
							maxFileCount: "undefined" != typeof e.maxFileCount ? Number(e.maxFileCount) : void 0,
							serverTimeOut: "undefined" != typeof e.serverTimeOut ? 1e3 * Number(e.serverTimeOut) : void 0,
							retryCount: "undefined" != typeof e.retryCount ? Number(e.retryCount) : void 0,
							selectedTab: e.selectedTab,
							tabList: n,
							addType: e.addType ? e.addType.split("|") : ["Local", "NPhoto"],
							useGap: e.useGap,
							useEditFlag: e.useEditFlag,
							checkHarmEnabled: e.checkHarmEnabled,
							pin: e.pin,
							encodedCustomQuery: e.encodedCustomQuery && "string" == typeof e.encodedCustomQuery ? decodeURIComponent(e.encodedCustomQuery) : void 0,
							customKey: e.customKey,
							customKeyVersion: e.customKeyVersion,
							snsPhotoEnabled: e.snsPhotoEnabled,
							editImageIndexes: e.editImageIndexes && e.editImageIndexes.length ? e.editImageIndexes.split("|").map(function (t) {
								return Number(t)
							}) : void 0,
							ndriveNewCnt: "undefined" != typeof e.ndriveNewCnt ? Number(e.ndriveNewCnt) : void 0,
							snsNewCnt: "undefined" != typeof e.snsNewCnt ? Number(e.snsNewCnt) : void 0,
							flashSupport: e.flashSupport,
							popupUploaderStickerType: e.popupUploaderStickerType,
							useSingleImageFitScreen: e.useSingleImageFitScreen,
							sideMenuPosition: e.sideMenuPosition,
							grafolioApiDomain: e.grafolioApiDomain,
							grafolioBaseDomain: e.grafolioBaseDomain,
							grafolioMarketUrl: e.grafolioMarketUrl,
							cors: e.cors,
							done: this._onDone.bind(this)
						};
						o.tabList.indexOf("Edit") === -1 && o.tabList.push("Edit"), o.useSingleImageFitScreen && 1 !== o.maxFileCount && (o.useSingleImageFitScreen = !1);
						for (var a in o) o.hasOwnProperty(a) && "undefined" == typeof o[a] && delete o[a];
						return void 0, o
					}, t.prototype._onDone = function (t) {
						var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null;
						void 0, tt["default"].sendAllPhotoToWrapper(t, e)
					}, t.prototype.open = function (t) {
						var e = this;
						if (!this.opened) {
							var i = X["default"].getIEVersion();
							this.setup(t), 10 === i ? setTimeout(function () {
								return e._controller.open()
							}, 0) : this._controller.open()
						}
					}, t.prototype.close = function () {
						this._controller.close()
					}, t.prototype.changeLanguage = function (t) {
						this._controller.changeLanguage(t)
					}, t.prototype.updatePhotos = function (t) {
						this._controller.updatePhotos(t)
					}, t.prototype.addPhotosByUrlsEncoded = function (t) {
						t = t.map(function (t) {
							return {url: decodeURIComponent(t)}
						}), this._controller.addPhotos("url", t)
					}, t.prototype.uploadFailed = function (t) {
						this._controller.uploadFailed(t)
					}, (0, d["default"])(t, [{
						key: "editor", get: function () {
							return this._controller._editor
						}
					}, {
						key: "config", get: function () {
							return K["default"]
						}
					}, {
						key: "utils", get: function () {
							return X["default"]
						}
					}, {
						key: "opened", get: function () {
							return Boolean(this._controller.opened)
						}
					}]), t
				}();
			window ? window.PhotoEditorApp = nt : (o = nt, a = "function" == typeof o ? o.call(e, i, e, t) : o, !(void 0 !== a && (t.exports = a)))
		}, 75: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(2), a = n(o), s = i(76), r = n(s), l = i(79), _ = n(l), d = i(70), u = n(d), p = i(71), c = n(p),
				h = i(96), f = n(h), T = i(97), g = n(T), m = i(105), E = n(m), C = i(106), S = n(C), I = i(115),
				L = n(I), A = i(107), b = n(A), y = i(108), v = n(y), O = i(120), x = n(O), R = i(121), P = n(R),
				k = i(122), B = n(k), D = i(123), N = n(D), $ = i(114), M = n($), G = i(124), w = n(G), U = i(125),
				F = n(U), z = i(127), W = n(z), V = i(140), H = n(V), K = i(141), j = n(K), X = i(142), Z = n(X),
				Y = i(113), q = n(Y);
			i(254);
			var J = i(255), Q = n(J), tt = function (t) {
				function e() {
					(0, u["default"])(this, e);
					var i = (0, f["default"])(this, t.call(this));
					return i._options = q["default"].extend(!0, {}, b["default"].defaultOptions), i._views = {}, i
				}

				return (0, g["default"])(e, t), e.prototype.init = function () {
					var t = this;
					this._canvas = document.querySelector(w["default"].CANVAS), this._editor = null, this._latelyMouseDownEvent = null, this._storage = new W["default"](this._options.setting.userId || $SE_CONFIG.USER_INFO.id, this._options.setting.serviceName), this._grafolio = new L["default"](this._options, this._options.popupUploaderStickerType), this._neoIdAuth = new P["default"](H["default"].getNeoIdAuth()), this._photoinfraRequest = new j["default"](this), this._modal = new N["default"](this._storage), this._state = {
						photos: [],
						opened: !1,
						prevPhoto: null,
						currentPhoto: null,
						selectedTab: this._options.selectedTab,
						selectedControl: null,
						selectedCropType: M["default"].CONTROL.CROP.FREE,
						selectedPhotoKeyInUploader: null,
						selectedBatchResize: this._options.resizeDefault,
						isHolded: !1,
						canvasReady: !1,
						filterReady: !1,
						hasThumbnail: !1,
						isCheckedHasThumbnail: !1,
						onceTooltip: {},
						viewport: {},
						save: {},
						isCheckedPhotoGap: !1,
						isImageLoadCanceled: !1
					}, this._waitAsyncPool = [], q["default"].ajaxSetup({
						error: function (e) {
							t.abort(), "abort" !== e.statusText && t.alertErrorMessage()
						}
					})
				}, e.prototype.setViews = function (t) {
					this._views = t
				}, e.prototype.setEditor = function () {
					this.setDimmed(), this.createEditor(), this.activateEditor()
				}, e.prototype.createEditor = function () {
					this._editor = new Z["default"](this._getEditorOptions(), this._canvas, (!1), this._options.backgroundColor)
				}, e.prototype.setEditorColorTables = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t = this;
						return r["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									if (this._state.filterReady) {
										e.next = 4;
										break
									}
									return e.next = 3, this._editor.setFilterColorTables(b["default"].filters.map(function (e) {
										return t._options.filterPath + e.path
									}));
								case 3:
									this._state.filterReady = !0;
								case 4:
								case"end":
									return e.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype._getEditorOptions = function () {
					var t = (0, q["default"])(this._canvas), e = {
						resize: {preset: this.options.resizePreset},
						filter: {colorTableURLs: [], defaultValue: 1},
						crop: {offsetX: parseInt(t.offset().left, 10), offsetY: parseInt(t.offset().top, 10)},
						autoRotateSize: 1600,
						editingFilterAsyncMode: !1,
						signature: {
							lineWidth: 1,
							lineColor: 16775936,
							w: 10,
							h: 10,
							exitBtnImageURL: this._options.filterPath + "sign_close.png",
							exitBtnMouseoverImageURL: this._options.filterPath + "sign_close_hover.png"
						},
						useControls: [],
						sticker: {horizontalGap: 10, verticalGap: 5, useSnap: !0, snapAngle: 5},
						photoFrame: {imgPath: this._options.filterPath + "frame.png"},
						crossOrigin: this._options.cors ? "Anonymous" : null
					};
					v["default"].isSafari() && (e.crossOrigin = null);
					var i = {
						useFilter: "filter",
						useCrop: "crop",
						useResize: "resize",
						useAdjust: "adjust",
						useMosaic: "mosaic",
						useSignature: "signature",
						useSticker: "sticker",
						useText: "text",
						usePhotoFrame: "photoFrame"
					};
					for (var n in i) this.options.functions[n] && e.useControls.push(i[n]);
					return e
				}, e.prototype.activateEditor = function () {
					this._editor.on("ready", this._onReadyEditor.bind(this)), this._editor.on("imageReady", this._onCanvasImageReady.bind(this)), this._editor.on("imageLoadFail", this._onCanvasImageLoadFail.bind(this)), this._editor.on("bitmapDataUpdate", this._onUpdateBitmapdata.bind(this)), this._editor.on("viewportMotionComplete", this._onViewportMotionComplete.bind(this)), this._editor.on("imageProcessingComplete", this._onProcessComplete.bind(this)), this._editor.on("imageProcessing", this._onProcessing.bind(this)), this._editor.on("editImageComplete", this._onEditComplete.bind(this)), this._editor.on("phaseChange", this._onPhaseChange.bind(this)), this._editor.on("OUT_OF_MEMORY", this._onOutOfMemory.bind(this)), this._editor.on("historyChanged", this._onChangeHistory.bind(this))
				}, e.prototype.activate = function () {
					(0, q["default"])(window).on("resize.pe", this._onResizeWindow.bind(this));
					for (var t in this._views) this._views[t].activate()
				}, e.prototype.deactivate = function () {
					(0, q["default"])(window).off("resize.pe");
					for (var t in this._views) this._views[t].deactivate();
					this.removeAllListeners()
				}, e.prototype.waitAsyncResponseEvent = function (t) {
					return this._waitAsyncPool.indexOf(t) !== -1 ? 1 : (this._waitAsyncPool.push(t), 0)
				}, e.prototype.isWaitingAsyncResponseEvent = function () {
					return !!this._waitAsyncPool.length
				}, e.prototype.removeAsyncReponseEvent = function (t) {
					if (t && this._waitAsyncPool.length) {
						var e = this._waitAsyncPool.indexOf(t);
						e !== -1 && this._waitAsyncPool.splice(e, 1)
					} else this._waitAsyncPool = []
				}, e.prototype._onCanvasImageReady = function () {
					this._state.canvasReady = !0, this.resetControls(!0), this.unsetHold(), this.unsetDimmed(), this.emit("canvasReady"), this._checkHasThumbnail()
				}, e.prototype._onCanvasImageLoadFail = function (t) {
					var e = this, i = this._state.prevPhoto, n = this._state.currentPhoto;
					this.unsetDimmed(), this.unsetHold(), this._state.selectedTab === M["default"].TAB_LIST.BASE && !this._state.opened || v["default"].isAjaxAborted() || this._state.isImageLoadCanceled || this.alert(B["default"].getMessage("txt_image_load_fail"), null, function () {
						i && i.key !== n.key ? (e.setHold(), e.changeCurrentPhoto(i)) : (e.abort(), e.cancelEditing(!1))
					})
				}, e.prototype._onUpdateBitmapdata = function (t) {
					this.emit("changeBitmapdata", t), this.removeAsyncReponseEvent(t.type), this.checkFitToViewport()
				}, e.prototype._onViewportMotionComplete = function (t) {
					this.checkFitToViewport()
				}, e.prototype._onCanvasRotateChange = function (t) {
					this.emit("rotateChange", t)
				}, e.prototype.setup = function (t) {
					var e = this;
					t && void 0 !== ("undefined" == typeof t ? "undefined" : (0, a["default"])(t)) && (t.photos && (this._options.photos = null), this._options = q["default"].extend(!0, this._options, t), this._options.photos = v["default"].objectToArray(this._options.photos), this._options.resizePreset = t.resizePreset || this._options.resizePreset, F["default"].setOptions({serviceCode: this._options.setting.serviceName}), this._options.resizePreset.map(function (t, i) {
						t > b["default"].maxImageSize && e._options.resizePreset.splice(i, 1)
					}))
				}, e.prototype.open = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t = this;
						return r["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									if (v["default"].isFunction(this._options.beforeOpen) && this._options.beforeOpen(), this.activate(), this.changeLanguage(this._options.setting.lang), this._resetStates(), this._editor) {
										e.next = 9;
										break
									}
									return e.next = 7, x["default"].action(M["default"].CALLBACK_TYPES.SET_EDITOR, function () {
										return t.setEditor()
									});
								case 7:
									return e.next = 9, this.setEditorColorTables();
								case 9:
									this.emit("open"), this.changeTab(this._options.selectedTab), this._initPhotos(), H["default"].noticeUploaderLoaded(), v["default"].isFunction(this._options.afterOpen) && this._options.afterOpen();
								case 14:
								case"end":
									return e.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype._resetStates = function () {
					this._state.photos = [], this._state.opened = !0, this._state.prevPhoto = null, this._state.isCheckedHasThumbnail = !1;
					for (var t in this._state.onceTooltip) this._state.onceTooltip[t] = !1;
					x["default"].clear()
				}, e.prototype._getPhotoInfraErrorMessage = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "", e = void 0, i = void 0;
					return t instanceof Error ? i = t.message : (e = "image_upload_error_" + t.toLowerCase(), i = B["default"].getMessage(e) || B["default"].getMessage(t) || B["default"].getMessage("txt_alert_error")), "KEY_EXPIRED" === t && this.alertSessionExpired(), i
				}, e.prototype.alertSessionExpired = function () {
					this.abort(), this.alert(B["default"].getMessage("txt_notice_session_expire_tit"), B["default"].getMessage("txt_notice_session_expire_desc"), function () {
						H["default"].closeUploader()
					})
				}, e.prototype.alertCMYKUploaded = function () {
					var t = this;
					if (!this._state.onceTooltip.cmykUploaded) {
						this._state.onceTooltip.cmykUploaded = !0;
						var e = q["default"].Deferred();
						return this._modal.store(), this.alert(B["default"].getMessage("txt_notice_uploaded_cmyk_tit"), B["default"].getMessage("txt_notice_uploaded_cmyk_desc"), function () {
							t._modal.restore(), e.resolve()
						}), e
					}
				}, e.prototype.alertBMPUploaded = function () {
					var t = this;
					if (!this._state.onceTooltip.bmpUploaded) {
						this._state.onceTooltip.bmpUploaded = !0;
						var e = q["default"].Deferred();
						return this._modal.store(), this.alert(B["default"].getMessage("txt_notice_uploaded_bmp_tit"), B["default"].getMessage("txt_notice_uploaded_bmp_desc"), function () {
							t._modal.restore(), e.resolve()
						}), e
					}
				}, e.prototype._onReadyEditor = function () {
					var t = this, e = this._editor.options.controlsMap;
					this.options.functions.useCrop && (this._editor.crop.on("rotateStart", function (e) {
						t.emit("changeCropAngleStart", e)
					}), this._editor.crop.on("rotate", function (e) {
						t.emit("changeCropAngle", e)
					}), this._editor.crop.on("uiChange", function (e) {
						t.emit("changeCropArea", e)
					}), this._editor.crop.on("uiMoveStart", function (e) {
						t.emit("changeCropAreaStart", e)
					}), this._editor.crop.on("uiMove", function (e) {
						t.emit("changeCropArea", e)
					}), this._editor.crop.on("uiMoveEnd", function (e) {
						t.emit("changeCropAreaEnd", e)
					}), this._editor.crop.on("changeAspectRatio", function (e) {
						t.emit("changeAspectRatio", e)
					}), this._editor.crop.on("aspectRatioMotionStart", function (e) {
						t.emit("aspectRatioMotionStart", e)
					}), this._editor.crop.on(e.crop.CROP_START, this._onReadyCropStart.bind(this)), this._editor.crop.on(e.crop.CROP_END, this._onReadyCropEnd.bind(this))), this.options.functions.useSignature && (this._editor.signature.on(e.signature.UPDATE_W_TOOLTIP, function (e) {
						t.emit("updateSignatureWidthTooltip", e)
					}), this._editor.signature.on(e.signature.ADD_W_TOOLTIP, function (e) {
						t.emit("addSignatureWidthTooltip", e)
					}), this._editor.signature.on(e.signature.REMOVE_W_TOOLTIP, function (e) {
						t.emit("removeSignatureWidthTooltip", e)
					}), this._editor.signature.on(e.signature.UPDATE_H_TOOLTIP, function (e) {
						t.emit("updateSignatureHeightTooltip", e)
					}), this._editor.signature.on(e.signature.ADD_H_TOOLTIP, function (e) {
						t.emit("addSignatureHeightTooltip", e)
					}), this._editor.signature.on(e.signature.REMOVE_H_TOOLTIP, function (e) {
						t.emit("removeSignatureHeightTooltip", e)
					}), this._editor.signature.on(e.signature.EXIT_BUTTON_CLICK, function (e) {
						t.emit("exitSignature", e)
					}), this._editor.signature.on(e.signature.IMAGE_SIGN_READY, function (e) {
						t.emit("imageSignReady", e)
					})), this.options.functions.useSticker && (this._editor.sticker.on(e.sticker.DELETED, function (e) {
						t.emit("deleteSticker", e)
					}), this._editor.sticker.on(e.sticker.SELECTED, function (e) {
						t.emit("selectSticker", e)
					}), this._editor.sticker.on(e.sticker.DESELECTED, function (e) {
						t.emit("deselectSticker", e)
					})), this.options.functions.useText && (this._editor.text.on(e.text.DELETED, function (e) {
						t.emit("deleteText", e)
					}), this._editor.text.on(e.text.SELECT, function (e) {
						t.emit("selectText", e)
					}), this._editor.text.on(e.text.DESELECT_TEXT, function (e) {
						t.emit("deselectText", e)
					}), this._editor.text.on(e.text.ACTIVE_INPUT, function (e) {
						t.emit("activeInput", e)
					})), this.unsetDimmed(), this.unsetHold(), x["default"].callback(M["default"].CALLBACK_TYPES.SET_EDITOR)
				}, e.prototype._initPhotos = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									return t = this._options.photos, t && t.length && t.forEach(function (t, e) {
										!t.url && t.domain && t.path && (t.url = t.domain + t.path)
									}), i.next = 4, this.addPhotos("url", t, !0);
								case 4:
									e = i.sent, e || this._setBatchResizeApplyByDefaultOption(), this._state.selectedTab === M["default"].TAB_LIST.EDIT && this._initCurrentPhoto();
								case 7:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype._setBatchResizeApplyByDefaultOption = function (t) {
					var e = this._state.selectedBatchResize || this._options.resizeDefault;
					e && this.setBatchResizeApply(e, t)
				}, e.prototype._initCurrentPhoto = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e, n;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (t = void 0, e = this._state.selectedPhotoKeyInUploader, n = this._options.initKey, this._state.prevPhoto = null, "undefined" != typeof e && null !== e ? t = this.getPhotoByKey(e) : "undefined" != typeof n && null !== n && (t = this.getPhotoByKey(n)), t || (t = this.getPhotosArray()[0]), !t) {
										i.next = 10;
										break
									}
									return this.setHold(), i.next = 10, this.changeCurrentPhoto(t);
								case 10:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype._checkHasThumbnail = function () {
					var t = this, e = this._options.functions, i = this.getCurrentPhoto(), n = this.getPhotosArray();
					this._state.hasThumbnail = !1, n.forEach(function (e) {
						t._state.hasThumbnail || Math.max(e.width, e.height) > b["default"].maxImageSize && (t._state.hasThumbnail = !0)
					}), !this._state.isCheckedHasThumbnail && this._options.usePhotoinfraThumbnailType && e.useResize && i.isEditable && (this._state.hasThumbnail && (this.changeControl(M["default"].CONTROLS.RESIZE), this.resizeViewport(!0), this.showTooltipOnce("resize", B["default"].getMessage("txt_notice_has_thumbnail"))), this._state.isCheckedHasThumbnail = !0)
				}, e.prototype.updatePhotos = function () {
					var t = this, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
						i = this._state.photos, n = [], o = [];
					this._state.opened && (e = v["default"].objectToArray(e), e.forEach(function (e) {
						var a = i.filter(function (t) {
							return t.index === e.index
						}), s = a[0];
						s ? (s.update(e), n.push(s)) : (s = new S["default"](e), i.push(s), o.push(s), t.options.checkHarmEnabled && t._photoinfraRequest.checkHarm(s), t._setBatchResizeApplyByDefaultOption([s]))
					}), this.emit("updatePhotos", {photosAdded: o, photosUpdated: n}))
				}, e.prototype.isHolded = function () {
					return this._state.isHolded
				}, e.prototype.setHold = function () {
					this._state.isHolded || (this._state.isHolded = !0, this.emit("setHold"))
				}, e.prototype.unsetHold = function () {
					!this.isUploading() && this._state.isHolded && (void 0, this._state.isHolded = !1, this.emit("unsetHold"))
				}, e.prototype.setDimmed = function () {
					this.emit("setDimmed")
				}, e.prototype.unsetDimmed = function () {
					this.emit("unsetDimmed")
				}, e.prototype.abort = function () {
					this.isUploading() && this.finishUpload(), this.unsetDimmed(), this.unsetHold(), this.removeAsyncReponseEvent()
				}, e.prototype.startUpload = function (t) {
					this._state.isUploading = !0, t.list && t.list.length && this.emit("startUpload", {
						mode: t.mode,
						list: t.list
					})
				}, e.prototype.finishUploadByError = function () {
					this.isUploading() && (this._state.isUploading = !1, this.emit("finishUploadByError"))
				}, e.prototype.finishUpload = function () {
					this.isUploading() && (this._state.isUploading = !1, this.emit("finishUpload"))
				}, e.prototype.isUploading = function () {
					return this._state.isUploading
				}, e.prototype.uploadFailed = function (t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "";
					this.isUploading() && (this._state.isUploadFailed = !0, this.emit("uploadFail", {
						fileName: t,
						message: e
					}))
				}, e.prototype.uploadSuccess = function () {
					this.emit("uploadSuccess")
				}, e.prototype.alertErrorMessage = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "txt_alert_error";
					this.alert(B["default"].getMessage(t))
				}, e.prototype.alert = function (t, e, i) {
					this.emit("alert", t, e, i)
				}, e.prototype._asyncConfirm = function (t, e) {
					var i = q["default"].Deferred();
					return this.emit("confirm", t, e, function () {
						return i.resolve(!0)
					}, function () {
						return i.resolve(!1)
					}), i
				}, e.prototype.changeCurrentPhoto = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						return r["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									return this._state.currentPhoto = t, t.isEditable || this.changeControl(null), this.emit("changeCurrentPhoto"), this.setEditorEntrySize(t.entrySize), e.prev = 4, e.next = 7, this.setEditorImage(t);
								case 7:
									e.next = 13;
									break;
								case 9:
									e.prev = 9, e.t0 = e["catch"](4), v["default"].debug(e.t0), this._onCanvasImageLoadFail(e.t0);
								case 13:
								case"end":
									return e.stop()
							}
						}, i, this, [[4, 9]])
					}));
					return t
				}(), e.prototype.getInitValues = function (t) {
					var e = {
						filter: {index: -1, value: 0},
						frame: 0,
						crop: M["default"].CONTROL.CROP.FREE,
						resize: M["default"].CONTROL.RESIZE.ORIGINAL,
						adjust: {autoAdjust: !1, brightness: 0, saturation: 1, sharpen: 0, kelvin: 0, contrast: 1},
						signature: M["default"].CONTROL.SIGNATURE.NONE
					};
					return q["default"].isEmptyObject(t) || (t.filter && t.filter.index > -1 && (e.filter.index = t.filter.index, e.filter.value = t.filter.values[t.filter.index]), t.resize && t.resize.width && (e.resize = t.resize.width), t.adjust && t.adjust.modified && (e.adjust.autolevel = t.adjust.autolevel, e.adjust.brightness = t.adjust.brightness, e.adjust.saturation = t.adjust.saturation, e.adjust.sharpen = t.adjust.sharpen, e.adjust.kelvin = t.adjust.kelvin, e.adjust.contrast = t.adjust.contrast), t.signature && t.signature.signature && (e.signature = t.signature.signature), t.photoFrame && t.photoFrame.index && (e.frame = t.photoFrame.index), e.crop = this._getCurrentCropTypeFromSnapshot(t)), this._state.selectedCropType = e.crop, e
				}, e.prototype._getCurrentCropTypeFromSnapshot = function (t) {
					return t.crop && t.crop.cropVO && t.crop.cropVO.aspectRatioVO && t.crop.cropVO.aspectRatioVO.aspectRatioWidth ? t.crop.cropVO.aspectRatioVO.aspectRatioWidth + ":" + t.crop.cropVO.aspectRatioVO.aspectRatioHeight : M["default"].CONTROL.CROP.FREE
				}, e.prototype._asyncGetPhotoImageURL = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (e = t.domain + t.path, n = v["default"].getIEVersion(), this._options.usePhotoinfraThumbnailType && Math.max(t.width, t.height) > b["default"].maxImageSize && (e = t.domain + t.pathResized), !this._options.cors) {
										i.next = 14;
										break
									}
									if (10 !== n) {
										i.next = 10;
										break
									}
									return i.next = 7, v["default"].urlToBlob(e);
								case 7:
									i.t0 = i.sent, i.next = 13;
									break;
								case 10:
									return i.next = 12, v["default"].urlToBase64(e);
								case 12:
									i.t0 = i.sent;
								case 13:
									e = i.t0;
								case 14:
									return i.abrupt("return", e);
								case 15:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype.setEditorImage = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									return e = t.getSnapshotFromBatchOption(), n = void 0, i.prev = 2, i.next = 5, this._photoinfraRequest.getPhotoInfo(t.index);
								case 5:
									i.next = 13;
									break;
								case 7:
									throw i.prev = 7, i.t0 = i["catch"](2), v["default"].debug(i.t0), this._getPhotoInfraErrorMessage(i.t0), i.t0;
								case 13:
									return i.next = 15, this._asyncGetPhotoImageURL(t);
								case 15:
									n = i.sent, this._state.canvasReady = !1, this._state.isImageLoadCanceled = !1, this._editor.setImageByURL(n, e);
								case 19:
								case"end":
									return i.stop()
							}
						}, i, this, [[2, 7]])
					}));
					return t
				}(), e.prototype.setEditorEntrySize = function (t) {
					this._editor.resize && (this._editor.resize.entrySize = parseInt(t, 10))
				}, e.prototype.changeLanguage = function (t) {
					B["default"].setLang(t), this._options.setting.lang = t, this.emit("changeLanguage", t)
				}, e.prototype._asyncConfirmCropSave = function () {
					function t(t, i) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t, e) {
						var n, o;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (n = this.currentControl === M["default"].CONTROLS.CROP) {
										i.next = 3;
										break
									}
									return i.abrupt("return");
								case 3:
									if (!this._isCropNewChanged()) {
										i.next = 13;
										break
									}
									return o = B["default"].getMessage(t), i.next = 7, this._asyncConfirm(o);
								case 7:
									if (!i.sent) {
										i.next = 11;
										break
									}
									return this._saveCropForced(e), i.next = 11, v["default"].asyncDelay(300);
								case 11:
									i.next = 17;
									break;
								case 13:
									if (!this._isCropChanged()) {
										i.next = 17;
										break
									}
									return this._saveCropForced(e), i.next = 17, v["default"].asyncDelay(300);
								case 17:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype._asyncUploadCurrentSignatureText = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (t = this._editor.snapshot(), !t || !t.signature || t.signature.signature !== M["default"].CONTROL.SIGNATURE.TEXT) {
										i.next = 6;
										break
									}
									return e = t.signature.displayObject.toDataURL(), i.next = 5, this._photoinfraRequest.uploadSignatureImage(e, "image/png", "text");
								case 5:
									return i.abrupt("return", i.sent);
								case 6:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype._asyncConfirmCheckHarm = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (!this.options.checkHarmEnabled || !this._hasHarmful()) {
										i.next = 5;
										break
									}
									return t = B["default"].getMessage("txt_confirm_hram_tit"), e = B["default"].getMessage("txt_confirm_hram_desc"), i.next = 4, this._asyncConfirm(t, e);
								case 4:
									return i.abrupt("return", i.sent);
								case 5:
									return i.abrupt("return", !0);
								case 6:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype.selectControl = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (e = this.getCurrentPhoto(), e && !this.isHolded() && !this.isWaitingAsyncResponseEvent()) {
										i.next = 3;
										break
									}
									return i.abrupt("return");
								case 3:
									return i.next = 5, this._asyncConfirmCropSave("txt_confirm_crop_tit", !0);
								case 5:
									this.hideToastMessage(), this.changeControl(t), this.resizeViewport(!0);
								case 8:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype.changeControl = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n = this;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (e = this.currentControl, !t || !this.isHolded() || this.isUploading()) {
										i.next = 3;
										break
									}
									return i.abrupt("return");
								case 3:
									if (!this.isWaitingAsyncResponseEvent()) {
										i.next = 5;
										break
									}
									return i.abrupt("return");
								case 5:
									if (t !== M["default"].CONTROLS.FILTER || this._state.filterReady) {
										i.next = 7;
										break
									}
									return i.abrupt("return");
								case 7:
									if (e !== M["default"].CONTROLS.CROP || t === M["default"].CONTROLS.CROP) {
										i.next = 13;
										break
									}
									return i.next = 10, x["default"].action(M["default"].CALLBACK_TYPES.CROP_END, function () {
										return n.setEditorPhase(t)
									});
								case 10:
									return this.emit("changeControl", this.currentControl), this.resizeViewport(!0), i.abrupt("return");
								case 13:
									this.emit("changeControl", t), this.setEditorPhase(t), t === M["default"].CONTROLS.CROP && this.emit("changeCrop", this._state.selectedCropType);
								case 16:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype.setEditorPhase = function (t) {
					this._state.selectedControl = t, this._editor.phase = t || "main"
				}, e.prototype._onPhaseChange = function (t) {
					this.changeControl(t.phase), this.resizeViewport(!0)
				}, e.prototype._onOutOfMemory = function (t) {
					this.finishUpload(), this.unsetDimmed(), this.unsetHold(), this.alert(B["default"].getMessage("txt_alert_out_of_memory")), this._editor.clear(), this.changeCurrentPhoto(this.getCurrentPhoto())
				}, e.prototype._onChangeHistory = function (t) {
					var e = t.undoable, i = t.redoable;
					this.checkModified(), this.emit("changeHistory", {undoable: e, redoable: i})
				}, e.prototype._onReadyCropStart = function (t) {
					this.checkCropRotation(), this.checkCropEditable(), this.checkCropMinimum()
				}, e.prototype._onReadyCropEnd = function (t) {
					x["default"].callback(M["default"].CALLBACK_TYPES.CROP_END), this.removeAsyncReponseEvent("cropEnd")
				}, e.prototype.close = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						return r["default"].wrap(function (t) {
							for (; ;) switch (t.prev = t.next) {
								case 0:
									return this.abort(), H["default"].closeUploader(), v["default"].isFunction(this._options.beforeClose) && this._options.beforeClose(), t.next = 5, this.changeControl();
								case 5:
									this._state.opened = !1, this.emit("close"), this.deactivate(), this._editor.clear(), v["default"].isFunction(this._options.afterClose) && this._options.afterClose();
								case 10:
								case"end":
									return t.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype._onProcessComplete = function (t) {
					var e = this._state.save.photo, i = this._editor.snapshot();
					e.setSnapshot(i), this.isUploading() && x["default"].callback(M["default"].CALLBACK_TYPES.SAVE_FOR_UPLOAD, t)
				}, e.prototype._onProcessing = function (t) {
					this.setHold()
				}, e.prototype._onEditComplete = function (t) {
					this.unsetHold()
				}, e.prototype._hasChangedOrSorted = function () {
					return this._hasChanged() || this._hasSorted()
				}, e.prototype._hasChanged = function () {
					var t = this._state.photos, e = !1;
					return t.forEach(function (t) {
						t.hasSnapshotForClientSideProcess() && (e = !0)
					}), !!e
				}, e.prototype._isCropChanged = function () {
					var t = this.currentControl,
						e = !(!this._editor || !this._editor.crop) && this._editor.crop.isChanged;
					return Boolean(t === M["default"].CONTROLS.CROP && e)
				}, e.prototype._isCropNewChanged = function () {
					var t = this.currentControl,
						e = !(!this._editor || !this._editor.crop) && this._editor.crop.isNewChanged;
					return Boolean(t === M["default"].CONTROLS.CROP && e)
				}, e.prototype._getPhotosWillUpdate = function () {
					var t = this._state.photos, e = [];
					return t.forEach(function (t) {
						t.isRequireUpdate() && e.push(t)
					}), e
				}, e.prototype._hasSorted = function () {
					var t = this._state.photos, e = !1, i = 0;
					return t.forEach(function (t) {
						t.sortIndex !== i && (e = !0), i++
					}), !!e
				}, e.prototype._hasAnimationGIF = function (t) {
					return t = t || this.getPhotosArray(), t.some(function (t) {
						return Boolean(t.animationGIF)
					})
				}, e.prototype._hasVr360 = function (t) {
					return t = t || this.getPhotosArray(), t.some(function (t) {
						return Boolean(t.vr360)
					})
				}, e.prototype._hasHarmful = function (t) {
					return t = t || this.getPhotosArray(), t.some(function (t) {
						return Boolean(t.isHarmful)
					})
				}, e.prototype.selectPhoto = function (t) {
					this.getCurrentPhoto();
					this.isHolded() || (this.setHold(), this.changePhoto(t))
				}, e.prototype.beforeChangePhoto = function () {
					var t = this.getCurrentPhoto();
					this.emit("beforeChangeCurrentPhoto", {prevPhoto: t})
				}, e.prototype.getThumbnailDataURL = function (t, e) {
					return this._editor.toDataURL(t, e)
				}, e.prototype.changePhoto = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (e = this.getCurrentPhoto(), n = this.getPhotoByKey(t), n && n.isReady) {
										i.next = 4;
										break
									}
									return i.abrupt("return");
								case 4:
									if (!this.hasPhoto(e)) {
										i.next = 10;
										break
									}
									return i.next = 7, this._asyncUploadCurrentSignatureText();
								case 7:
									this.saveCurrentPhotoSnapshot(), this.beforeChangePhoto(), this._state.prevPhoto = e;
								case 10:
									return i.next = 12, this.changeCurrentPhoto(n);
								case 12:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype.isCropEditable = function () {
					return this._editor.crop.isEditable
				}, e.prototype.isCropMinimum = function () {
					return this._editor.crop.isMinimum
				}, e.prototype.checkCropEditable = function () {
					var t = this.isCropEditable();
					t || this.showTooltipOnce("crop", B["default"].getMessage("txt_notice_crop_minimum")), this.emit("checkCropEditable", t)
				}, e.prototype.checkCropMinimum = function () {
					this.emit("checkCropMinimum", this.isCropMinimum())
				}, e.prototype.checkCropModified = function () {
					this._editor.crop && this.emit("checkCropModified", this._editor.crop.isChanged)
				}, e.prototype.checkCropRotation = function () {
					this._editor.crop && this.emit("checkCropRotation", this._editor.crop.rotation)
				}, e.prototype.checkAdjustModified = function () {
					this._editor.adjust && this.emit("checkAdjustModified", this._editor.adjust.modified)
				}, e.prototype.isBitmapModified = function () {
					var t = !1;
					return this._editor.filter && this._editor.filter.modified && (t = !0), this._editor.adjust && this._editor.adjust.modified && (t = !0), this._editor.mosaic && this._editor.mosaic.modified && (t = !0), t
				}, e.prototype.checkModified = function () {
					var t = this.modified, e = this.getCurrentPhoto();
					this._state.canvasReady && !this.isUploading() && (e.modified = t), this.emit("checkModified", t)
				}, e.prototype.getPhotoByKey = function (t) {
					var e = this._state.photos.filter(function (e) {
						return e.key === t
					});
					return e ? e[0] : null
				}, e.prototype.getCurrentPhoto = function () {
					return this._state.currentPhoto
				}, e.prototype.hasPhoto = function (t) {
					return this._state.photos.indexOf(t) !== -1
				}, e.prototype.hasPhotoKey = function (t) {
					var e = !1;
					return this._state.photos.forEach(function (i) {
						i.key === t && (e = !0)
					}), e
				}, e.prototype.cancelEditing = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e, n, o = !(arguments.length > 0 && void 0 !== arguments[0]) || arguments[0];
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (t = this.getCurrentPhoto(), !o || !(this.modified || this._hasChanged() || this._isCropChanged())) {
										i.next = 7;
										break
									}
									return e = B["default"].getMessage("txt_confirm_close_tit"), n = B["default"].getMessage("txt_confirm_close_desc"), i.next = 5, this._asyncConfirm(e, n);
								case 5:
									if (i.sent) {
										i.next = 7;
										break
									}
									return i.abrupt("return");
								case 7:
									v["default"].abortAjax(), this._state.isImageLoadCanceled = !0, this._editor.unload(), this.options.tabList.indexOf(M["default"].TAB_LIST.BASE) === -1 ? this.close() : (this.changeControl(), this._editor.clear(), this._restoreOriginalPhotos(), this.changeTabToBase());
								case 11:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype.getPhotosArray = function () {
					var t = this._state.photos;
					return t.sort(function (t, e) {
						return Number(t.sortIndex) - Number(e.sortIndex)
					})
				}, e.prototype.reversePhotos = function () {
					var t = this.getPhotosArray().reverse();
					t.forEach(function (t, e) {
						t.sortIndex = e
					})
				}, e.prototype.getPhotosArrayToJSON = function () {
					var t = this.getPhotosArray(), e = [];
					return t.forEach(function (t) {
						e.push(t.toJSON())
					}), e
				}, e.prototype.finishEditing = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t;
						return r["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									if (t = this.getCurrentPhoto(), !this.isHolded()) {
										e.next = 3;
										break
									}
									return e.abrupt("return");
								case 3:
									if (!this.hasPhoto(t)) {
										e.next = 9;
										break
									}
									return e.next = 6, this._asyncConfirmCropSave("txt_confirm_save_crop_tit", !0);
								case 6:
									return e.next = 8, this._asyncUploadCurrentSignatureText();
								case 8:
									this.saveCurrentPhotoSnapshot();
								case 9:
									if (this.changeControl(), !this.isOnlyEditingMode) {
										e.next = 19;
										break
									}
									return e.next = 13, this._validationGrafolioStickers(!0);
								case 13:
									if (e.sent) {
										e.next = 15;
										break
									}
									return e.abrupt("return");
								case 15:
									return e.next = 17, this.finishUploader();
								case 17:
									e.next = 21;
									break;
								case 19:
									this._editor.clear(), this.changeTabToBase();
								case 21:
								case"end":
									return e.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype.finishUploader = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e = this;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (t = this.getPhotosArray(), i.t0 = !this.isOnlyEditingMode, !i.t0) {
										i.next = 6;
										break
									}
									return i.next = 5, this._validationGrafolioStickers();
								case 5:
									i.t0 = !i.sent;
								case 6:
									if (!i.t0) {
										i.next = 8;
										break
									}
									return i.abrupt("return");
								case 8:
									if (t.length) {
										i.next = 11;
										break
									}
									return this.alert(B["default"].getMessage("txt_notice_no_images_tit"), B["default"].getMessage("txt_notice_no_images_desc")), i.abrupt("return");
								case 11:
									return i.next = 13, this._asyncConfirmCheckHarm();
								case 13:
									if (!i.sent) {
										i.next = 15;
										break
									}
									this._photoinfraRequest.getSessionKey(function () {
										e._saveAndDone()
									}, function () {
										e.alertErrorMessage()
									});
								case 15:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), e.prototype._saveCropForced = function (t) {
					this._editor.crop.crop(), this._state.selectedCropType = this._getCurrentCropTypeFromSnapshot(this._editor.snapshot()), t && this.setEditorPhase("main"), this.checkModified()
				},e.prototype._saveAndDone = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t;
						return r["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									return t = this.getPhotosArray(), this.setHold(), this.setDimmed(), this._state.isUploadFailed = !1, e.prev = 4, this.startUpload({
										mode: "update",
										list: this._getPhotosWillUpdate()
									}), e.next = 8, this._asyncUpdatePhotos();
								case 8:
									if (!this._state.isUploadFailed) {
										e.next = 10;
										break
									}
									throw new Error;
								case 10:
									e.next = 19;
									break;
								case 12:
									return e.prev = 12, e.t0 = e["catch"](4), v["default"].debug(e.t0), this.finishUploadByError(), this.unsetHold(), this.unsetDimmed(), e.abrupt("return");
								case 19:
									return e.prev = 19, this.startUpload({
										mode: "modifyAll",
										list: t
									}), e.next = 23, this._asyncModifyAllPhotos();
								case 23:
									return H["default"].startSendPhotoToWrapper(), this.startUpload({
										mode: "save",
										list: t
									}), e.next = 27, this._asyncSavePhotos();
								case 27:
									if (!this._state.isUploadFailed) {
										e.next = 29;
										break
									}
									throw new Error;
								case 29:
									e.next = 38;
									break;
								case 31:
									return e.prev = 31, e.t1 = e["catch"](19), v["default"].debug(e.t1), this.finishUploadByError(), this.unsetHold(), this.unsetDimmed(), e.abrupt("return");
								case 38:
									this._doneAndClose();
								case 39:
								case"end":
									return e.stop()
							}
						}, i, this, [[4, 12], [19, 31]])
					}));
					return t
				}(),e.prototype.saveCurrentPhotoSnapshot = function () {
					var t = this.getCurrentPhoto(), e = this._editor.snapshot();
					if ((this.modified || e.resize.resizedWidth) && t.isEditable) {
						t.setSnapshot(e);
						var i = t.cropWidth || t.width, n = t.cropHeight || t.height,
							o = v["default"].getThumbnailImageSizeForCover(i, n, 400, 400), a = o[0], s = o[1];
						t.thumbnailSrc = this.getThumbnailDataURL(a, s), t.thumbnailCropped = this._editor.getCroppedDataURL(a, s), t.thumbnailLargeSrc = this._options.useSingleImageFitScreen ? this.getThumbnailDataURL(i, n) : null
					} else t.setSnapshot({}), t.thumbnailSrc = t.domain + t.originalThumbnail, t.thumbnailCropped = null, t.thumbnailLargeSrc = null
				},e.prototype._asyncUpdateCurrentPhoto = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t;
						return r["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									return t = this.getCurrentPhoto(), e.next = 3, this._asyncUpdatePhoto(t, !1);
								case 3:
								case"end":
									return e.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype._asyncUpdatePhotos = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e, n;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									t = this.getPhotosArray(), e = t.length, n = void 0, n = 0;
								case 4:
									if (!(n < e)) {
										i.next = 13;
										break
									}
									if (this.isUploading()) {
										i.next = 7;
										break
									}
									throw new Error;
								case 7:
									return this._editor.clear(), i.next = 10, this._asyncUpdatePhoto(t[n]);
								case 10:
									n++, i.next = 4;
									break;
								case 13:
									if (this.isUploading()) {
										i.next = 15;
										break
									}
									throw new Error;
								case 15:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype._asyncUpdatePhoto = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n, o, a, s, l = this;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (i.prev = 0, !t.isRequireUpdate()) {
										i.next = 14;
										break
									}
									return e = t.getSnapshotFromBatchOption(), n = t.getImageType(), o = "image/" + n, i.next = 7, this._asyncGetPhotoImageURL(t);
								case 7:
									return a = i.sent, i.next = 10, x["default"].action(M["default"].CALLBACK_TYPES.SAVE_FOR_UPLOAD, function () {
										var i = v["default"].getLimitedSize(t.width, t.height), n = i[0];
										(!e.resize || !e.resize.width || e.resize.width > n) && (e.resize = {width: n}), l._state.save.photo = t, l._editor.save(a, e, null, o)
									});
								case 10:
									return s = i.sent, i.next = 13, this._photoinfraRequest.update(t, s.dataURL, o);
								case 13:
									this.uploadSuccess();
								case 14:
									i.next = 21;
									break;
								case 16:
									return i.prev = 16, i.t0 = i["catch"](0), v["default"].debug(i.t0), this.uploadFailed(t.originalFileName, this._getPhotoInfraErrorMessage(i.t0)), i.abrupt("return");
								case 21:
								case"end":
									return i.stop()
							}
						}, i, this, [[0, 16]])
					}));
					return t
				}(),e.prototype._asyncModifyAllPhotos = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e, n;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (this.isUploading()) {
										i.next = 2;
										break
									}
									throw new Error;
								case 2:
									return t = this.getPhotosArray(), this.uploadProgress(100, 1e3), i.prev = 4, i.next = 7, this._photoinfraRequest.modifyAll(t);
								case 7:
									this.uploadSuccess(), i.next = 17;
									break;
								case 10:
									throw i.prev = 10, i.t0 = i["catch"](4), v["default"].debug(i.t0), e = this.getPhotoByKey(/^[0-9]+$/.test(i.t0.index) ? parseInt(i.t0.index, 10) : i.t0.index), n = e ? e.originalFileName : null, this.uploadFailed(n, this._getPhotoInfraErrorMessage(i.t0.code)), i.t0;
								case 17:
								case"end":
									return i.stop()
							}
						}, i, this, [[4, 10]])
					}));
					return t
				}(),e.prototype._asyncSavePhotos = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e, n, o, a;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									t = this.getPhotosArray(), e = t.length, n = void 0, n = 0;
								case 4:
									if (!(n < e)) {
										i.next = 14;
										break
									}
									if (o = !0, a = n === e - 1, this.isUploading()) {
										i.next = 9;
										break
									}
									throw new Error;
								case 9:
									return i.next = 11, this._asyncSavePhoto(t[n], o, a);
								case 11:
									n++, i.next = 4;
									break;
								case 14:
									if (this.isUploading()) {
										i.next = 16;
										break
									}
									throw new Error;
								case 16:
									if (!e) {
										i.next = 19;
										break
									}
									return i.next = 19, this._photoinfraRequest.finish();
								case 19:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype._asyncSavePhoto = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n, o, a = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
							s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									return e = void 0, i.prev = 1, i.next = 4, this._photoinfraRequest.save(t);
								case 4:
									e = i.sent, i.next = 12;
									break;
								case 7:
									return i.prev = 7, i.t0 = i["catch"](1), v["default"].debug(i.t0), this.uploadFailed(t.originalFileName, this._getPhotoInfraErrorMessage(i.t0)), i.abrupt("return");
								case 12:
									if (!e) {
										i.next = 26;
										break
									}
									if (t.setSaved(!0), this.updatePhotos([e]), this.uploadSuccess(), !a) {
										i.next = 24;
										break
									}
									if (n = this._state.isCheckedPhotoGap, o = s, H["default"].sendPhotoToWrapper("photo", t, n, o)) {
										i.next = 24;
										break
									}
									return void 0, H["default"].parentWindowError(), this.abort(), i.abrupt("return");
								case 24:
									i.next = 27;
									break;
								case 26:
									this.uploadFailed(t.originalFileName);
								case 27:
								case"end":
									return i.stop()
							}
						}, i, this, [[1, 7]])
					}));
					return t
				}(),e.prototype._doneAndClose = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									t = this.getPhotosArrayToJSON(), e = this._options.useEditFlag && (this.modified || this._hasChanged()) ? {
										isEdited: !0,
										isPrevImageDeleted: !0
									} : null, this.finishUpload(), v["default"].isFunction(this._options.done) && (void 0, this._options.done(t, e)), this.close();
								case 5:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.initControlValues = function (t) {
					this.emit("changeFilter", t.filter), this.emit("changeFrame", t.frame), this.emit("changeCrop", t.crop), this.emit("changeResize", t.resize), this.emit("initControlValues", t)
				},e.prototype.resetControls = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], e = this.getCurrentPhoto(),
						i = t && e ? e.getSnapshotFromBatchOption() : null, n = this.getInitValues(i);
					e.resetBatchOption("resize"), e.resetBatchOption("signature"), e.resetBatchOption("filter"), e.resetBatchOption("rotate"), e.resetBatchOption("frame"), this._state.selectedBatchResize && this._editor.resizedWidth && (e.setBatchOption("resize", this._editor.resizedWidth), n.resize = this._editor.resizedWidth), this.initControlValues(n), this.setEditorMosaic(M["default"].CONTROL.MOSAIC.SQUARE1), this.changeAdjust(M["default"].CONTROL.ADJUST.BRIGHTNESS), this.resizeViewport(), this.checkCropModified(), this.checkAdjustModified(), this.checkModified()
				},e.prototype.restoreEditor = function () {
					this._editor.reset(null, !0), this.resetControls(), this.changeControl(), this.resizeViewport(!0)
				},e.prototype.setEditorScale = function (t) {
					this._editor.magnify.scale = Number(t), this.checkModified()
				},e.prototype.setEditorToScale = function (t) {
					this._editor.magnify.scaleTo(Number(t)), this.checkModified()
				},e.prototype.setEditorFrame = function (t) {
					var e = this.getCurrentPhoto();
					e.resetBatchOption("frame"), this._editor.photoFrame.addFrame(t), this.emit("changeFrame", t), this.checkModified()
				},e.prototype.setEditorFilter = function (t) {
					var e = this.getCurrentPhoto();
					e.resetBatchOption("filter"), this._editor.filter.index = t, this.emit("changeFilter", {
						index: this.getEditorFilterIndex(),
						value: this.getEditorFilterValue()
					}), this.showTooltipOnce("compare", B["default"].getMessage("txt_notice_compare")), this.checkModified()
				},e.prototype.getEditorFilterIndex = function () {
					return this._editor.filter.index
				},e.prototype.getEditorFilterValue = function () {
					return this._editor.filter.value
				},e.prototype.setEditorFilterValue = function (t) {
					this._editor.filter.value = t
				},e.prototype.setEditorCrop = function (t) {
					var e = this, i = this.getCurrentPhoto(), n = void 0, o = void 0;
					if (t === M["default"].CONTROL.CROP.ORIGINAL) this._editor.crop.isHorizontalImage ? (n = Math.max(i.width, i.height), o = Math.min(i.width, i.height)) : (n = Math.min(i.width, i.height), o = Math.max(i.width, i.height)); else if (t === M["default"].CONTROL.CROP.FREE) n = 0, o = 0; else {
						var a = t.split(":");
						n = Number(a[0]), o = Number(a[1])
					}
					this._editor.crop.changeAspectRatio(n, o), this.emit("changeCrop", t), setTimeout(function () {
						e.checkCropModified(), e.checkModified()
					}, 10)
				},e.prototype.setEditorRotate = function () {
					this._editor.crop.rotate(!0)
				},e.prototype.setEditorAutoRotate = function () {
					var t = this._editor.crop.autoRotate();
					return this.checkCropModified(), t
				},e.prototype.setEditorCropConfirm = function (t) {
					this._state.selectedCropType = t, this._editor.crop.crop(), this.changeControl(), this.resizeViewport(!0), this.checkModified()
				},e.prototype.setEditorResize = function (t) {
					var e = this.getCurrentPhoto();
					if (!this.isWaitingAsyncResponseEvent()) {
						if (t !== this._editor.resizedWidth) {
							if (this.waitAsyncResponseEvent("bitmapDataUpdate")) return;
							t === M["default"].CONTROL.RESIZE.ORIGINAL && t !== this._editor.resize.entrySize && (t = e.cropWidth || e.width), t || (t = M["default"].CONTROL.RESIZE.ORIGINAL), e.resetBatchOption("resize"), t === M["default"].CONTROL.RESIZE.ORIGINAL ? this._editor.resize.scaleTo(0) : this._editor.resize.scaleTo(Number(t))
						}
						this.emit("changeResize", t)
					}
				},e.prototype.setEditorCropReset = function () {
					var t = M["default"].CONTROL.CROP.FREE;
					this._state.selectedCropType = t, this._editor.crop.reset(null, !0), this.emit("changeCrop", t), this.checkCropModified(), this.checkModified()
				},e.prototype.setEditorPreview = function (t) {
					this._editor.showPreview = t, this.checkModified()
				},e.prototype.setEditorAdjust = function (t, e) {
					this._editor.adjust[t] = Number(e), this._editor.showPreview || this.checkModified(), this.showTooltipOnce("compare", B["default"].getMessage("txt_notice_compare"))
				},e.prototype.setEditorAdjustReset = function () {
					this._editor.adjust.reset(null, !0), this.checkAdjustModified(), this.checkModified()
				},e.prototype.setEditorAutoAdjust = function (t) {
					this._editor.adjust.autolevel = t, this.emit("changeAutoAdjust", t), this.checkAdjustModified(), this.checkModified(), this.showTooltipOnce("compare", B["default"].getMessage("txt_notice_compare"))
				},e.prototype.setEditorMosaic = function (t) {
					"undefined" != typeof this._editor.mosaic[t] && this._editor.mosaic[t](), this.emit("changeMosaic", t), this.checkModified()
				},e.prototype.setEditorMosaicReset = function () {
					this._editor.mosaic.reset(null, !0), this.checkModified()
				},e.prototype.setEditorSignatureReset = function (t) {
					t && this._storage.setItem(M["default"].COOKIES.SIGNATURE_TYPE_LASTEST, M["default"].CONTROL.SIGNATURE.NONE), this._editor.signature.reset()
				},e.prototype.setEditorSignatureImage = function (t) {
					this._storage.setItem(M["default"].COOKIES.SIGNATURE_TYPE_LASTEST, M["default"].CONTROL.SIGNATURE.IMAGE), this._editor.signature.setImageSignature(t)
				},e.prototype.setEditorSignatureText = function (t) {
					this._storage.setItem(M["default"].COOKIES.SIGNATURE_TYPE_LASTEST, M["default"].CONTROL.SIGNATURE.TEXT), this._editor.signature.setTextSignature(t)
				},e.prototype.setEditorFitToViewport = function (t) {
					this._editor.screenFitEnable = t, this.checkFitToViewport(), this.resizeViewport(!0)
				},e.prototype.checkFitToViewport = function () {
					this.emit("checkFitToViewport", {
						fitToScreenAvailable: this._editor.fitToScreenAvailable,
						screenFitEnable: this._editor.screenFitEnable
					})
				},e.prototype.setEditorSticker = function () {
					function t(t, i) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t, e) {
						var n;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (n = v["default"].getIEVersion(), 10 !== n) {
										i.next = 5;
										break
									}
									return i.next = 4, v["default"].urlToBlob(t);
								case 4:
									t = i.sent;
								case 5:
									this._editor.sticker.createPNGSticker(t, e), this.checkModified();
								case 7:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.setEditorDeleteSticker = function () {
					this._editor.sticker["delete"](), this.checkModified()
				},e.prototype.setEditorAddText = function (t) {
					this._editor.text.setText(t), this.checkModified()
				},e.prototype.setEditorUpdateText = function (t, e) {
					this._editor.text.updateText(t, e), this.checkModified()
				},e.prototype.setEditorDeleteText = function () {
					this._editor.text["delete"](), this.checkModified()
				},e.prototype.resizeViewport = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0], e = this._editor,
						i = void 0, n = void 0;
					e && (i = this._getViewportCalculcated(), t ? e.viewportTo(i.left, i.top, i.width, i.height) : (n = e.viewport, n.x = i.left, n.y = i.top, n.width = i.width, n.height = i.height, e.viewport = n, this.checkFitToViewport()))
				},e.prototype._getViewportCalculcated = function () {
					var t = this.currentControl, e = (0, q["default"])(this._canvas),
						i = (0, q["default"])(w["default"].CONTROL_WRAP),
						n = (0, q["default"])(w["default"].CONTROL_DETAIL_WRAP),
						o = (0, q["default"])(w["default"].EDITOR_LIST.LIST_WRAP), a = e.parent(),
						s = Number(a.width()), r = Number(a.height()),
						l = i.is(":visible") ? Number(i.outerWidth()) : 0, _ = void 0, d = 0, u = 0, p = 0, c = 0,
						h = void 0, f = void 0, T = void 0;
					return t === M["default"].CONTROLS.CROP ? (_ = Number(n.height() + o.outerHeight()), d = 150, u = 80, p = 150, c = _ + 30) : t ? (_ = Number(n.height() + o.outerHeight()), c = _) : (_ = Number(o.outerHeight()), c = _), i.is(":visible") && ("left" === this.options.sideMenuPosition ? d += l : p += l), h = s - (d + p), f = r - (u + c), T = this._state.viewport = {
						left: d,
						top: u,
						right: p,
						bottom: c,
						width: h,
						height: f
					}, this.emit("changeViewport", T), T
				},e.prototype._onResizeWindow = function (t) {
					this.resizeCanvas(), this.resizeViewport()
				},e.prototype.resizeCanvas = function () {
					var t = (0, q["default"])(this._canvas), e = t.parent(), i = e.width(), n = e.height();
					t.attr({width: i, height: n}), this._editor && this._editor.changeStageSize(i, n)
				},e.prototype._getBatchApplyMessage = function (t, e, i) {
					var n = arguments.length > 3 && void 0 !== arguments[3] ? arguments[3] : "common", o = "", a = [];
					return this._hasAnimationGIF(e) && a.push(B["default"].getMessage("txt_animation_gif")), this._hasVr360(e) && a.push(B["default"].getMessage("txt_vr360")), o += i ? B["default"].getMessage("txt_all") : B["default"].getMessage("txt_selected"), o += t, "resize" === n ? o += a.length ? B["default"].getMessage("txt_notice_resize_apply_exception_by_type").replace("%s", a.join(", ")) : B["default"].getMessage("txt_notice_resize_apply_exception") : a.length && (o += B["default"].getMessage("txt_notice_apply_exception_by_type").replace("%s", a.join(", "))), o
				},e.prototype.setBatchResizeApply = function () {
					function t(t, i) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t, e) {
						var n, o, a, s, l;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (n = "", o = this.getPhotosArray(), a = !e || o.length === e.length, a && (this._state.selectedBatchResize = t), e = e || o, e.length) {
										i.next = 7;
										break
									}
									return i.abrupt("return");
								case 7:
									if (e.forEach(function (e) {
											e.isEditable && (e.setBatchOption("resize", t || null), a && (e.entrySize = t))
										}), this.emit("changeBatchResize", t), t && t !== M["default"].CONTROL.RESIZE.ORIGINAL) {
										i.next = 12;
										break
									}
									return this.hideToastMessage(), i.abrupt("return");
								case 12:
									return this.setHold(), i.next = 15, this.setBatchApplyToThumbnail(e.filter(function (t) {
										return t.hasSnapshotAppliedSignatureOrFrame()
									}));
								case 15:
									s = i.sent, this.unsetHold(), s && !this.isUploading() && (l = B["default"].getMessage("txt_notice_resize_apply").replace("%s", t), n = this._getBatchApplyMessage(l, e, a, "resize"), this.showToastMessage(n));
								case 18:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.setBatchFilterApply = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n, o, a, s;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									return e = this._editor.snapshot().filter, n = "", o = "", a = void 0, t = t || this.getPhotosArray(), t.forEach(function (t) {
										t.isEditable && t.setBatchOption("filter", q["default"].extend(!0, {}, e))
									}), a = t.length === this._state.photos.length, o = e.index === -1 ? B["default"].getMessage("txt_notice_filter_apply_none") : B["default"].getMessage("txt_notice_filter_apply"), n = this._getBatchApplyMessage(o, t, a), this.setHold(), i.next = 12, this.setBatchApplyToThumbnail(t);
								case 12:
									s = i.sent, this.unsetHold(), s && this.showToastMessage(n);
								case 15:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.setBatchSignatureApply = function () {
					function t(t, i) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t, e) {
						var n, o, a, s, l, _;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									return n = this._editor.snapshot().signature, o = {
										type: t,
										snapshot: n
									}, a = "", s = "", l = void 0, e = e || this.getPhotosArray(), e.forEach(function (t) {
										t.isEditable && t.setBatchOption("signature", q["default"].extend(!0, {}, o))
									}), l = e.length === this._state.photos.length, s = t === M["default"].CONTROL.SIGNATURE.IMAGE ? B["default"].getMessage("txt_notice_signature_apply_image") : t === M["default"].CONTROL.SIGNATURE.TEXT ? B["default"].getMessage("txt_notice_signature_apply_text") : B["default"].getMessage("txt_notice_signature_apply_none"), a = this._getBatchApplyMessage(s, e, l), this.setHold(), i.next = 13, this.setBatchApplyToThumbnail(e);
								case 13:
									_ = i.sent, this.unsetHold(), _ && this.showToastMessage(a);
								case 16:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.setBatchFrameApply = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n, o, a, s, l;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									return e = this._editor.snapshot().photoFrame, n = e && e.index ? e.index : 0, o = "", a = "", s = void 0, t = t || this.getPhotosArray(), t.forEach(function (t) {
										t.isEditable && t.setBatchOption("frame", n)
									}), s = t.length === this._state.photos.length, a = 0 === n ? B["default"].getMessage("txt_notice_frame_apply_none") : B["default"].getMessage("txt_notice_frame_apply"), o = this._getBatchApplyMessage(a, t, s), this.setHold(), i.next = 13, this.setBatchApplyToThumbnail(t);
								case 13:
									l = i.sent, this.unsetHold(), l && this.showToastMessage(o);
								case 16:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.drawFilterThumbnails = function (t) {
					var e = this;
					return !this._editor._filter.complete || this.isHolded() ? void setTimeout(function () {
						e.drawFilterThumbnails(t)
					}, 200) : void this._editor.drawFilterThumbnails(t)
				},e.prototype.showToastMessage = function (t) {
					var e = this, i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : "common";
					this.hideToastMessage(), this.toastMessageDelay = setTimeout(function () {
						e.emit("showToastMessage", {message: t, type: i})
					}, 320)
				},e.prototype.hideToastMessage = function () {
					this.toastMessageDelay && clearTimeout(this.toastMessageDelay), this.emit("hideToastMessage")
				},e.prototype.showTooltipOnce = function (t, e) {
					this._state.onceTooltip[t] || (this._state.onceTooltip[t] = !0, this.showToastMessage(e, t))
				},e.prototype.changeAdjust = function (t) {
					this.emit("changeAdjust", t)
				},e.prototype.changeSignature = function (t) {
					var e = this.getCurrentPhoto();
					t && t === M["default"].CONTROL.SIGNATURE.NONE && this.setEditorSignatureReset(!0), t || this.setEditorSignatureReset(), e.setBatchOption("signature", null), this.emit("changeSignature", t)
				},e.prototype.asyncMultiSelectPhotos = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t = this;
						return r["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									return e.next = 2, x["default"].action(M["default"].CALLBACK_TYPES.MULTI_SELECT, function () {
										return t.changeListMode(M["default"].LIST_MODE.SELECT)
									});
								case 2:
									return e.abrupt("return", e.sent);
								case 3:
								case"end":
									return e.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.changeListMode = function (t) {
					this.emit("changeListMode", t)
				},e.prototype.callbackMultiSelectPhotos = function (t) {
					x["default"].callback(M["default"].CALLBACK_TYPES.MULTI_SELECT, t)
				},e.prototype.addPhotos = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n, o, a = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : [],
							s = arguments.length > 2 && void 0 !== arguments[2] && arguments[2];
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (a.length || this.options.editImageIndexes.length) {
										i.next = 2;
										break
									}
									return i.abrupt("return");
								case 2:
									if (this.setHold(), this.setDimmed(), this.startUpload({
											mode: "upload",
											list: s ? [] : a
										}), this.uploadProgress(0), !s || !this.options.editImageIndexes.length) {
										i.next = 16;
										break
									}
									e = 0;
								case 8:
									if (!(e < this.options.editImageIndexes.length)) {
										i.next = 14;
										break
									}
									return i.next = 11, this.addPhotoInEditing(this.options.editImageIndexes[e]);
								case 11:
									e++, i.next = 8;
									break;
								case 14:
									i.next = 30;
									break;
								case 16:
									n = 0;
								case 17:
									if (!(n < a.length)) {
										i.next = 30;
										break
									}
									return i.prev = 18, i.next = 21, this.addPhoto(t, a[n]);
								case 21:
									i.next = 27;
									break;
								case 23:
									i.prev = 23, i.t0 = i["catch"](18), v["default"].debug(i.t0), a.length && a[n] && (o = "file" === t ? a[n].name : v["default"].getFileNameFromURL(a[n].url), this.uploadFailed(o, this._getPhotoInfraErrorMessage(i.t0)));
								case 27:
									n++, i.next = 17;
									break;
								case 30:
									return this.finishUpload(), this.unsetDimmed(), this.unsetHold(), i.abrupt("return", a.length);
								case 34:
								case"end":
									return i.stop()
							}
						}, i, this, [[18, 23]])
					}));
					return t
				}(),e.prototype.addPhoto = function () {
					function t(t, i) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t, e) {
						var n, o, a, s, l, _, d;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (this.isUploading()) {
										i.next = 2;
										break
									}
									throw new Error;
								case 2:
									if (n = this.getPhotosArray(), o = this.getTotalSize(), a = this.options, s = void 0, !(n.length >= a.maxFileCount)) {
										i.next = 9;
										break
									}
									throw new Error("최대 " + a.maxFileCount + "장까지 사진을 추가할 수 있습니다.");
								case 9:
									if ("file" !== t) {
										i.next = 21;
										break
									}
									if (l = v["default"].parseFileName(e.name), _ = l.extension, d = a.allowedImageTypes.join(",").toUpperCase(), a.allowedImageExtensions.indexOf(_.toLowerCase()) !== -1) {
										i.next = 15;
										break
									}
									throw new Error(d + " 형식의 사진만 추가할 수 있습니다.");
								case 15:
									if (!(e.size > a.maxFileSize)) {
										i.next = 18;
										break
									}
									throw new Error(B["default"].getMessage("txt_notice_upload_image_size", v["default"].convertByteToMB(a.maxFileSize)));
								case 18:
									if (!(o + e.size > a.maxTotalSize)) {
										i.next = 21;
										break
									}
									throw new Error("최대 " + v["default"].convertByteToMB(a.maxTotalSize) + "MB까지 사진을 추가할 수 있습니다.");
								case 21:
									return this.uploadProgress(0), "file" === t && this.uploadProgress(100, e.size), i.next = 25, this._photoinfraRequest.upload(t, e);
								case 25:
									if (s = i.sent, this.isUploading()) {
										i.next = 30;
										break
									}
									return i.next = 29, this._photoinfraRequest["delete"](s.index);
								case 29:
									throw new Error;
								case 30:
									if (!("url" === t && o + s.fileSize > a.maxTotalSize)) {
										i.next = 35;
										break
									}
									return i.next = 33, this._photoinfraRequest["delete"](s.index);
								case 33:
									throw new Error("최대 " + v["default"].convertByteToMB(a.maxTotalSize) + "MB까지 사진을 추가할 수 있습니다.");
								case 35:
									"url" === t && e.key && (s.key = e.key), s ? (this.updatePhotos([s]), this.uploadSuccess(), this.uploadProgress(0)) : this.uploadFailed();
								case 37:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.uploadProgress = function (t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 0;
					this.emit("uploadProgress", {percent: t, duration: e})
				},e.prototype.addPhotoInEditing = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (null !== t && this.options.editImageIndexes.indexOf(t) !== -1) {
										i.next = 2;
										break
									}
									return i.abrupt("return");
								case 2:
									return i.next = 4, this._photoinfraRequest.getPhotoInfo(t);
								case 4:
									e = i.sent, e ? (this.updatePhotos([e]), this.uploadSuccess()) : this.uploadFailed();
								case 6:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.getTotalSize = function () {
					var t = this.getPhotosArray() || [], e = 0;
					return t.length && t.forEach(function (t) {
						e += t.fileSize
					}), e
				},e.prototype.getCurrentPhotoSnapshotData = function () {
					var t = "image/jpeg", e = this.getCurrentPhoto(),
						i = this._editor.resizedWidth || e.cropWidth || e.width,
						n = this._editor.resizedHeight || e.cropHeight || e.height,
						o = v["default"].getLimitedSize(i, n);
					i = o[0], n = o[1];
					var a = this._editor.toDataURL(i, n, t), s = e.originalFileName || e.uploadFileName;
					return {mime: t, dataURL: a, fileName: s}
				},e.prototype.asyncGetCurrentPhotoSnapshotData = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e, n;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									return t = this.getCurrentPhoto(), e = this.getCurrentPhotoSnapshotData(), i.next = 4, this._photoinfraRequest.uploadSnapshot(t, e.dataURL);
								case 4:
									return n = i.sent, i.abrupt("return", q["default"].extend(!0, {}, t, n));
								case 6:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.downloadCurrentPhoto = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t;
						return r["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									return e.next = 2, this._validationGrafolioStickers(!0);
								case 2:
									if (e.sent) {
										e.next = 4;
										break
									}
									return e.abrupt("return");
								case 4:
									t = this.getCurrentPhotoSnapshotData(), (0, Q["default"])(t.dataURL, t.fileName, t.mime);
								case 6:
								case"end":
									return e.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.deleteAllPhotos = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						return r["default"].wrap(function (t) {
							for (; ;) switch (t.prev = t.next) {
								case 0:
									return t.prev = 0, t.next = 3, this._photoinfraRequest["delete"]();
								case 3:
									t.next = 9;
									break;
								case 5:
									t.prev = 5, t.t0 = t["catch"](0), v["default"].debug(t.t0), this.alert(this._getPhotoInfraErrorMessage(t.t0));
								case 9:
									this._state.photos = [], this.emit("deleteAllPhotos");
								case 11:
								case"end":
									return t.stop()
							}
						}, i, this, [[0, 5]])
					}));
					return t
				}(),e.prototype.deletePhotoByKey = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n = this;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (e = this.getPhotoByKey(t), !e) {
										i.next = 14;
										break
									}
									return i.prev = 2, i.next = 5, this._photoinfraRequest["delete"](e.index);
								case 5:
									i.next = 12;
									break;
								case 7:
									return i.prev = 7, i.t0 = i["catch"](2), v["default"].debug(i.t0), this.alert(this._getPhotoInfraErrorMessage(i.t0)), i.abrupt("return", !1);
								case 12:
									this._state.photos.forEach(function (e, i) {
										e.key === t && n._state.photos.splice(i, 1)
									}), this.emit("deletePhoto", e);
								case 14:
									return i.abrupt("return", !0);
								case 15:
								case"end":
									return i.stop()
							}
						}, i, this, [[2, 7]])
					}));
					return t
				}(),e.prototype.changeTab = function (t) {
					this.isWaitingAsyncResponseEvent() || (this.emit("changeTab", t), this.emit("changeTabTo" + t), t === M["default"].TAB_LIST.EDIT && (this._saveOriginalPhotos(), this._setPhotosEntrySize(), this._initCurrentPhoto(), this._editor.screenFitEnable = !0, this.resizeCanvas(), this.resizeViewport()), this._state.selectedTab = t)
				},e.prototype.changeTabToBase = function () {
					this.changeTab(M["default"].TAB_LIST.BASE)
				},e.prototype.changeTabToEdit = function () {
					this.changeTab(M["default"].TAB_LIST.EDIT)
				},e.prototype._saveOriginalPhotos = function () {
					var t = this;
					0 !== this._state.photos.length && (this._originalPhotos = [], this._state.photos.forEach(function (e) {
						t._originalPhotos.push(q["default"].extend(!0, {}, e.getCloneData()))
					}))
				},e.prototype._setPhotosEntrySize = function () {
					var t = this.getPhotosArray();
					t.forEach(function (t) {
						if (t.isEditable) {
							var e = t.getSnapshotFromBatchOption();
							t.entrySize = e && e.resize && parseInt(e.resize.width, 10)
						}
					})
				},e.prototype._restoreOriginalPhotos = function () {
					var t = this;
					if (this._originalPhotos && 0 !== this._originalPhotos.length) {
						var e = [];
						this._originalPhotos.forEach(function (i, n) {
							t.hasPhotoKey(i.key) && e.push(new S["default"](i))
						}), this._state.photos = e, this._clearOriginalPhotos()
					}
				},e.prototype._clearOriginalPhotos = function () {
					this._originalPhotos = null
				},e.prototype.pushHistory = function () {
					this._editor.pushHistory()
				},e.prototype.undo = function () {
					this._editor.undo();
					var t = this._editor.snapshot(), e = this.getInitValues(t);
					this.initControlValues(e)
				},e.prototype.redo = function () {
					this._editor.redo();
					var t = this._editor.snapshot(), e = this.getInitValues(t);
					this.initControlValues(e)
				},e.prototype.setEditorShowOriginal = function (t) {
					this._editor.showOriginal = t
				},e.prototype._getAllPhotosSnapshots = function (t) {
					var e = [], i = this.getCurrentPhoto(), n = this.getPhotosArray();
					return t && e.push(this._editor.snapshot()), n.forEach(function (n) {
						t && n.key === i.key || e.push(n.snapshot)
					}), e
				},e.prototype._getAttachedGrafolioStickerCodesFromSnapshots = function (t) {
					var e = [];
					return t.forEach(function (t) {
						t && t.sticker && t.sticker.length && t.sticker.forEach(function (t) {
							t.stickerID && t.stickerID.length && e.push(t.stickerID)
						})
					}), e
				},e.prototype._validationGrafolioStickers = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i() {
						var t, e, n, o = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (t = this._getAllPhotosSnapshots(o), e = this._getAttachedGrafolioStickerCodesFromSnapshots(t), n = !1, e.length) {
										i.next = 6;
										break
									}
									return n = !0, i.abrupt("return", n);
								case 6:
									return i.next = 8, this._grafolio.multipleValidation(e);
								case 8:
									return n = i.sent, n || (this.abort(), this.alert(B["default"].getMessage("txt_notice_sticker_permission"))), i.abrupt("return", n);
								case 11:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.setEditorFlipX = function () {
					this._editor.crop.flipX(), this.checkCropModified()
				},e.prototype.setEditorFlipY = function () {
					this._editor.crop.flipY(), this.checkCropModified()
				},e.prototype.getDataURLAppiedSnapshot = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n, o;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (e = v["default"].getIEVersion(), n = this._options.useSingleImageFitScreen ? t.domain + t.path : t.domain + t.thumbnail, o = void 0, !t.thumbnailCropped) {
										i.next = 7;
										break
									}
									o = t.thumbnailCropped, i.next = 21;
									break;
								case 7:
									if (!this._options.cors) {
										i.next = 20;
										break
									}
									if (10 !== e) {
										i.next = 14;
										break
									}
									return i.next = 11, v["default"].urlToBlob(n);
								case 11:
									i.t0 = i.sent, i.next = 17;
									break;
								case 14:
									return i.next = 16, v["default"].urlToBase64(n);
								case 16:
									i.t0 = i.sent;
								case 17:
									o = i.t0, i.next = 21;
									break;
								case 20:
									o = n;
								case 21:
									return i.abrupt("return", this._editor.applySnapshotTo(o, t.getSnapshotByBatchOption(), {
										width: t.width,
										height: t.height
									}));
								case 22:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(),e.prototype.setBatchApplyToThumbnail = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n, o, a;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									t = t || this.getPhotosArray(), e = t.length, n = void 0, i.prev = 3, n = 0;
								case 5:
									if (!(n < e)) {
										i.next = 15;
										break
									}
									if (o = t[n], !o.isEditable) {
										i.next = 12;
										break
									}
									return i.next = 10, this.getDataURLAppiedSnapshot(o);
								case 10:
									a = i.sent, o.thumbnailSrc = a || o.thumbnailSrc;
								case 12:
									n++, i.next = 5;
									break;
								case 15:
									i.next = 21;
									break;
								case 17:
									return i.prev = 17, i.t0 = i["catch"](3), v["default"].debug(i.t0), i.abrupt("return", !1);
								case 21:
									return this.emit("setBatchApplyToThumbnail"), i.abrupt("return", !0);
								case 23:
								case"end":
									return i.stop()
							}
						}, i, this, [[3, 17]])
					}));
					return t
				}(),(0, c["default"])(e, [{
					key: "photos", get: function () {
						return this._state.photos
					}
				}, {
					key: "opened", get: function () {
						return this._state.opened
					}
				}, {
					key: "currentControl", get: function () {
						return this._state.selectedControl
					}
				}, {
					key: "options", get: function () {
						return this._options
					}
				}, {
					key: "viewport", get: function () {
						return this._editor.viewport
					}
				}, {
					key: "modified", get: function () {
						return !(!this._state.canvasReady || !this._editor.modified)
					}
				}, {
					key: "isLocal", get: function () {
						return "local" === this._options.setting.env
					}
				}, {
					key: "isDev", get: function () {
						return "dev" === this._options.setting.env
					}
				}, {
					key: "isReal", get: function () {
						return "real" === this._options.setting.env
					}
				}, {
					key: "isCanvasReady", get: function () {
						return this._state.canvasReady
					}
				}, {
					key: "isOnlyEditingMode", get: function () {
						return this.options.tabList.indexOf(M["default"].TAB_LIST.BASE) === -1
					}
				}]),e
			}(E["default"]);
			e["default"] = tt
		}, 79: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(80), a = n(o);
			e["default"] = function (t) {
				return function () {
					var e = t.apply(this, arguments);
					return new a["default"](function (t, i) {
						function n(o, s) {
							try {
								var r = e[o](s), l = r.value
							} catch (_) {
								return void i(_)
							}
							return r.done ? void t(l) : a["default"].resolve(l).then(function (t) {
								n("next", t)
							}, function (t) {
								n("throw", t)
							})
						}

						return n("next")
					})
				}
			}
		}, 106: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(71), r = n(s), l = i(107), _ = n(l), d = i(108), u = n(d), p = i(114),
				c = n(p), h = i(113), f = n(h), T = {png: "png", gif: "png", jpg: "jpeg", jpeg: "jpg", bmp: "png"},
				g = 0, m = function () {
					function t(e) {
						(0, a["default"])(this, t), this.sortIndex = "undefined" == typeof e.sortIndex ? g : e.sortIndex, this.index = g, this.key = e.key || g, this.modified = !1, this.saved = !1, this.isHarmful = !1, this.entrySize = 0, this._setData(e), g++
					}

					return t.prototype._setData = function (t) {
						f["default"].extend(!0, this, t), this.width = Number(this.width) || 0, this.height = Number(this.height) || 0, this.fileSize = Number(this.fileSize) || 0, this.domain = this.domain || "", this.path = this.path || "", this.pathResized = this.pathResized || "", this.src = this.domain + this.path, this.thumbnail = this.thumbnail || this.src, this.thumbnailSrc = this.thumbnailSrc || this.domain + this.thumbnail, this.dominantColor = this.dominantColor || "", this.generationFormat = this.generationFormat || "", this.animationGIF = Boolean(this.animationGIF) || Number(this.animatedCnt) > 1, this.fileName = this.fileName || "", this.vr360 = Boolean("vr360" === this.generationFormat), this.isEditable = !this.animationGIF && !this.vr360, this.isReady = Boolean(this.path), this.isHarmful = this.isHarmful || t.isHarmful || !1, this.originalPath = this.originalPath || this.path, this.originalThumbnail = this.originalThumbnail || this.thumbnail, this.batchOptions = t.batchOptions || {}, this.snapshot = t.snapshot || null, this.signatureTypeChanged = null
					}, t.prototype.toJSON = function () {
						return {
							key: this.key,
							originalFileName: this.originalFileName || this.fileName,
							width: this.width,
							height: this.height,
							domain: this.domain,
							path: this.path,
							fileSize: this.fileSize,
							animationGIF: this.animationGIF,
							modified: this.modified,
							originalPath: this.originalPath,
							originalThumbnail: this.originalThumbnail,
							dominantColor: this.dominantColor
						}
					}, t.prototype.getCloneData = function () {
						var t = {};
						for (var e in this) this.hasOwnProperty(e) && (t[e] = this[e]);
						return f["default"].extend(!0, {}, t)
					}, t.prototype.update = function (t) {
						this._setData(t)
					}, t.prototype.getMaximumWidth = function () {
						var t = this.width, e = this.height;
						return u["default"].getMaximumWidth(t, e)
					}, t.prototype.getMinimumWidth = function () {
						var t = this.width, e = this.height;
						return u["default"].getMinimumWidth(t, e)
					}, t.prototype.resetBatchOption = function (t) {
						this.batchOptions[t] = null
					}, t.prototype.setSaved = function (t) {
						this.saved = t
					}, t.prototype.setBatchOption = function (t, e) {
						if (this.isEditable) {
							if ("resize" === t && e) {
								var i = _["default"].maxImageSize, n = this.getMinimumWidth();
								e > i && (e = i), e < n && (e = n)
							}
							"signature" === t && (this.signatureTypeChanged = !0), e && (this.modified = !0), this.batchOptions[t] = e
						}
					}, t.prototype.getBatchOption = function (t) {
						return t ? this.batchOptions[t] : this.batchOptions
					}, t.prototype.hasBatchOption = function () {
						if (f["default"].isEmptyObject(this.batchOptions)) return !1;
						var t = !1;
						for (var e in this.batchOptions) if (this.batchOptions[e]) {
							t = !0;
							break
						}
						return t
					}, t.prototype.setSnapshot = function (t) {
						this.isEditable && (this.modified = !0), this.batchOptions = {}, this.snapshot = t
					}, t.prototype.getSnapshotFromBatchOption = function () {
						return f["default"].isEmptyObject(this.snapshot) && !this.hasBatchOption() ? null : (this.snapshot = this.getSnapshotByBatchOption(), this.snapshot)
					}, t.prototype.getSnapshotByBatchOption = function () {
						var t = f["default"].extend(!0, {}, this.snapshot);
						return f["default"].isEmptyObject(t) && !this.hasBatchOption() ? null : (f["default"].isEmptyObject(t) && (t = {}), this.batchOptions.resize && (this.batchOptions.resize === c["default"].CONTROL.RESIZE.ORIGINAL ? t.resize = {width: 0} : (t.resize = {width: this.batchOptions.resize || 0}, t.resize.modified = !0)), this.batchOptions.signature && (t.signature = this.batchOptions.signature.snapshot, t.signature.modified = !0), this.batchOptions.filter && (t.filter = this.batchOptions.filter, t.filter.modified = !0), this.batchOptions.rotate && (f["default"].isEmptyObject(t.crop) && (t.crop = {}), t.crop.externalRotation = this.batchOptions.rotate, t.crop.modified = !0), this.batchOptions.frame && (t.photoFrame = {
							backup: this.batchOptions.frame,
							index: this.batchOptions.frame,
							modified: !0
						}), t)
					}, t.prototype.checkModifiedFromSnapshot = function () {
						var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
							e = f["default"].extend(!0, {}, this.getSnapshotFromBatchOption());
						if (e) for (var i in e) if (e[i] && e[i].modified && t.indexOf(i) === -1) return !0;
						return !1
					}, t.prototype.hasSnapshotForClientSideProcess = function () {
						var t = f["default"].extend(!0, {}, this.getSnapshotFromBatchOption());
						return delete t.resize, t && t.crop && t.crop.externalRotation && delete t.crop, f["default"].isEmptyObject(t) === !1
					}, t.prototype.isRequireUpdate = function () {
						return this.checkModifiedFromSnapshot(["resize", "signature"]) && this.hasSnapshotForClientSideProcess()
					}, t.prototype.getImageType = function () {
						var t = this.originalFileName || this.fileName, e = void 0;
						if (/(_PNG|_GIF)\//i.test(this.path)) e = "png"; else if (/(_JPG|_JPEG)\//i.test(this.path)) e = "jpeg"; else {
							var i = u["default"].parseFileName(t), n = i.extension;
							e = T[n.toLowerCase()] || "jpeg"
						}
						return e
					}, t.prototype.hasSnapshotAppliedSignatureOrFrame = function () {
						var t = this.getSnapshotByBatchOption();
						return Boolean(t && (t.signature && t.signature.type !== c["default"].CONTROL.SIGNATURE.NONE || t.photoFrame && Number(t.photoFrame.index) > 0))
					}, (0, r["default"])(t, [{
						key: "uploadFileName", get: function () {
							return this.key + ".jpg"
						}
					}]), t
				}();
			e["default"] = m
		}, 107: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(108), a = n(o), s = {
				defaultOptions: {
					setting: {
						env: "real",
						lang: "ko",
						userId: "hello",
						serviceName: "blog",
						debugMode: !1,
						apiDomain: ""
					},
					functions: {
						useFilter: !1,
						useCrop: !1,
						useResize: !1,
						useAdjust: !1,
						useMosaic: !1,
						useSignature: !1,
						useSticker: !1,
						useText: !1,
						usePhotoFrame: !1
					},
					publishDomain: "tb.voyyj.corez.kr",
					sessionKey: null,
					resizePreset: [320, 400, 480, 550, 650, 740, 900],
					resizeCustom: !0,
					resizeDefault: "original",
					backgroundColor: 2631720,
					filterPath: "./img/",
					container: document.body,
					initKey: null,
					usePhotoinfraThumbnailType: !0,
					signature: {defaultText: "서명텍스트", byteLimit: 42},
					imageUrls: [],
					allowedImageTypes: [],
					allowedImageExtensions: [],
					cloudSaveApi: "http://cloud.naver.com/downloadfile.nhn",
					maxTotalSize: 52428800,
					maxFileSize: 20971520,
					maxFileCount: 50,
					serverTimeOut: 3e5,
					retryCount: 3,
					selectedTab: "Base",
					tabList: [],
					addType: [],
					useGap: !1,
					useEditFlag: !1,
					checkHarmEnabled: !1,
					pin: null,
					encodedCustomQuery: null,
					customKey: null,
					customKeyVersion: null,
					snsPhotoEnabled: !1,
					editImageIndexes: [],
					ndriveNewCnt: null,
					snsNewCnt: null,
					flashSupport: !1,
					popupUploaderStickerType: "grafolio",
					sideMenuPosition: "right",
					cors: !!a["default"].getIEVersion()
				},
				grafolioApiDomain: {
					local: "dev.api.gfmarket.naver.com",
					dev: "dev.api.gfmarket.naver.com",
					real: "api.gfmarket.naver.com"
				},
				grafolioBaseDomain: {
					local: "beta.gfmarket.phinf.naver.net",
					dev: "beta.gfmarket.phinf.naver.net",
					real: "gfmarket.phinf.naver.net"
				},
				grafolioMarketURL: "http://m.gfmarket.naver.com/sticker/home",
				cropThumbnailWidth: 48,
				cropThumbnailHeight: 48,
				signatureImageSize: 204800,
				signatureImageWidth: 400,
				signatureImageHeight: 200,
				maxImageSize: 3e3,
				selectedTab: "Base",
				tabList: ["Base", "Edit"],
				filters: [{
					i18n: "txt_filter_original",
					code: -1,
					path: "filters/00_Original.png"
				}, {i18n: "txt_filter_clear", code: 1, path: "filters/01_Clear.png"}, {
					i18n: "txt_filter_bright",
					code: 2,
					path: "filters/02_Brilliant.png"
				}, {i18n: "txt_filter_cream", code: 3, path: "filters/03_Cream.png"}, {
					i18n: "txt_filter_delight",
					code: 4,
					path: "filters/04_Delight.png"
				}, {i18n: "txt_filter_blossom", code: 5, path: "filters/05_Blossom.png"}, {
					i18n: "txt_filter_warm",
					code: 6,
					path: "filters/06_Warm.png"
				}, {i18n: "txt_filter_lollipop", code: 7, path: "filters/07_Lollipop.png"}, {
					i18n: "txt_filter_candy",
					code: 8,
					path: "filters/08_Candy.png"
				}, {i18n: "txt_filter_mint", code: 9, path: "filters/09_Mint.png"}, {
					i18n: "txt_filter_cool",
					code: 10,
					path: "filters/10_Cool.png"
				}, {i18n: "txt_filter_cobalt", code: 11, path: "filters/11_Cobalt.png"}, {
					i18n: "txt_filter_classic",
					code: 12,
					path: "filters/12_Classic.png"
				}, {i18n: "txt_filter_vintage", code: 13, path: "filters/13_Vintage.png"}, {
					i18n: "txt_filter_urban",
					code: 14,
					path: "filters/14_Urban.png"
				}, {i18n: "txt_filter_chic", code: 15, path: "filters/15_Chic.png"}, {
					i18n: "txt_filter_blank",
					code: 16,
					path: "filters/16_Blank.png"
				}, {i18n: "txt_filter_tintp", code: 17, path: "filters/17_Tint-P.png"}, {
					i18n: "txt_filter_tinty",
					code: 18,
					path: "filters/18_Tint-Y.png"
				}],
				frames: [{i18n: "txt_none_apply", code: 0}, {
					i18n: "txt_frame_1",
					code: 1,
					path: "icons/npe_frame_1.png"
				}, {i18n: "txt_frame_2", code: 2, path: "icons/npe_frame_2.png"}, {
					i18n: "txt_frame_3",
					code: 3,
					path: "icons/npe_frame_3.png"
				}, {i18n: "txt_frame_6", code: 4, path: "icons/npe_frame_6.png"}, {
					i18n: "txt_frame_4",
					code: 5,
					path: "icons/npe_frame_4.png"
				}, {i18n: "txt_frame_5", code: 6, path: "icons/npe_frame_5.png"}],
				stickers: {
					pack1: {
						tabOnImg: "sticker/pack1/tab/01_tab_on.png",
						tabOffImg: "sticker/pack1/tab/01_tab_off.png",
						previewImg: "sticker/pack1/thumbnail/sticker_set_default1.png",
						list: function (t) {
							for (var e = 1; e <= 33; e++) t.push({
								original: "sticker/pack1/original/sticker_emoti_" + e + ".png",
								thumbnail: "sticker/pack1/thumbnail/sticker_emoti_" + e + ".png"
							});
							return t
						}([])
					},
					pack2: {
						tabOnImg: "sticker/pack2/tab/02_tab_on.png",
						tabOffImg: "sticker/pack2/tab/02_tab_off.png",
						previewImg: "sticker/pack2/thumbnail/sticker_set_default2.png",
						list: function (t) {
							for (var e = 1; e <= 31; e++) t.push({
								original: "sticker/pack2/original/sticker_deco_" + e + ".png",
								thumbnail: "sticker/pack2/thumbnail/sticker_deco_" + e + ".png"
							});
							return t
						}([])
					}
				},
				stickerPreview: {
					"default": {width: 50, height: 50, cols: 6},
					grafolio: {width: 90, height: 84, cols: 4}
				},
				colors: ["#ffffff", "#f7f7f7", "#e2e2e2", "#c2c2c2", "#9c9c9c", "#858585", "#636363", "#404040", "#272727", "#000000", "#ffb39b", "#ffd4a7", "#fff599", "#c5dd9c", "#7ec89d", "#78ccc9", "#85ddff", "#87c5ff", "#bd8fbf", "#f69fc1", "#f3704c", "#fcaf59", "#ffef4c", "#abd072", "#30b478", "#00bab4", "#00c8ff", "#0092e6", "#a868a9", "#f175a8", "#f12f22", "#ff9c23", "#f4d400", "#7bb423", "#00a350", "#009991", "#00afef", "#0076c8", "#93338f", "#f02c8c", "#9f190d", "#a46206", "#a79a00", "#568228", "#007036", "#00726a", "#0077a4", "#004c80", "#63155f", "#a01a5c", "#5f0e06", "#734300", "#675f00", "#3a5919", "#004b24", "#00524c", "#004c69", "#00385f", "#430d40", "#701441"],
				fonts: {
					win: ["Abadi MT Condensed Light", "Aharoni", "Aldhabi", "Andalus", "Angsana New", "AngsanaUPC", "Aparajita", "Arabic Typesetting", "Arial", "Arial Black", "Arial Nova", "Batang", "BatangChe", "Book Antiqua", "Browallia New", "BrowalliaUPC", "Calibri", "Calibri Light", "Calisto MT", "Cambria", "Cambria Math", "Candara", "Century Gothic", "Comic Sans MS", "Consolas", "Constantia", "Copperplate Gothic", "Copperplate Gothic Light", "Corbel", "Cordia New", "CordiaUPC", "Courier New", "DaunPenh", "David", "Dengxian", "DFKai-SB", "DilleniaUPC", "DokChampa", "Dotum", "DotumChe", "Ebrima", "Estrangelo Edessa", "EucrosiaUPC", "Euphemia", "FangSong", "Franklin Gothic Medium", "FrankRuehl", "FreesiaUPC", "Gabriola", "Gadugi", "Gautami", "Georgia", "Georgia Pro", "Gill Sans Nova", "Gisha", "Gulim", "GulimChe", "Gungsuh", "GungsuhChe", "Impact", "IrisUPC", "Iskoola Pota", "JasmineUPC", "Javanese Text", "KaiTi", "Kalinga", "Kartika", "Khmer UI", "KodchiangUPC", "Kokila", "Lao UI", "Latha", "Leelawadee", "Leelawadee UI", "Levenim MT", "LilyUPC", "Lucida Console", "Lucida Handwriting Italic", "Lucida Sans Unicode", "Malgun Gothic", "Mangal", "Manny ITC", "Marlett", "Meiryo", "Meiryo UI", "Microsoft Himalaya", "Microsoft JhengHei", "Microsoft JhengHei UI", "Microsoft New Tai Lue", "Microsoft PhagsPa", "Microsoft Sans Serif", "Microsoft Tai Le", "Microsoft Uighur", "Microsoft YaHei", "Microsoft YaHei UI", "Microsoft Yi Baiti", "MingLiU", "PMingLiU", "MingLiU-ExtB", "PMingLiU-ExtB", "MingLiU_HKSCS", "MingLiU_HKSCS-ExtB", "Miriam", "Miriam Fixed", "Mongolian Baiti", "MoolBoran", "MS Gothic", "MS PGothic", "MS Mincho", "MS PMincho", "MS UI Gothic", "MV Boli", "Myanmar Text", "Narkisim", "Neue Haas Grotesk Text Pro", "News Gothic MT", "Nirmala UI", "NSimSun", "Nyala", "Palatino Linotype", "Plantagenet Cherokee", "Raavi", "Rockwell Nova", "Rod", "Sakkal Majalla", "Sanskrit Text", "Segoe MDL2 Assets", "Segoe Print", "Segoe Script", "Segoe UI", "Segoe UI Emoji", "Segoe UI Historic", "Segoe UI Symbol", "Shonar Bangla", "Shruti", "SimHei", "SimKai", "Simplified Arabic", "SimSun", "SimSun-ExtB", "Sitka Banner", "Sitka Display", "Sitka Heading", "Sitka Small", "Sitka Subheading", "Sitka Text", "Sylfaen", "Symbol", "Tahoma", "Times New Roman", "Traditional Arabic", "Trebuchet MS", "Tunga", "Urdu Typesetting", "Utsaah", "Vani", "Verdana", "Verdana Pro", "Vijaya", "Vrinda", "Webdings", "Westminster", "Wingdings", "Yu Gothic", "Yu Gothic UI", "Yu Mincho"],
					mac: ["Al Bayan", "American Typewriter", "Andale Mono", "Apple Casual", "Apple Chancery", "Apple Garamond", "Apple Gothic", "Apple LiGothic", "Apple LiSung", "Apple Myungjo", "Apple Symbols", "Arial", "Arial Hebrew", "Ayuthaya", "Baghdad", "Baskerville", "Beijing", "BiauKai", "Big Caslon", "Brush Script", "Chalkboard", "Chalkduster", "Charcoal", "Charcoal CY", "Chicago", "Cochin", "Comic Sans", "Cooper", "Copperplate", "Corsiva Hebrew", "Courier", "Courier New", "DecoType Naskh", "Devanagari", "Didot", "Euphemia UCAS", "Fang Song", "Futura", "Gadget", "Geeza Pro", "Geezah", "Geneva", "Geneva CY", "Georgia", "Gill Sans", "Gujarati", "Gung Seoche", "Gurmukhi", "Hangangche", "HeadlineA", "Hei", "Helvetica", "Helvetica CY", "Helvetica Neue", "Herculanum", "Hiragino Kaku Gothic Pro", "Hiragino Kaku Gothic ProN", "Hiragino Kaku Gothic Std", "Hiragino Kaku Gothic StdN", "Hiragino Maru Gothic Pro", "Hiragino Maru Gothic ProN", "Hiragino Mincho Pro", "Hiragino Mincho ProN", "Hoefler Text", "Inai Mathi", "Impact", "Jung Gothic", "Kai", "Keyboard", "Krungthep", "KufiStandard GK", "LastResort", "LiHei Pro", "LiSong Pro", "Lucida Grande", "Marker Felt", "Menlo", "Monaco", "Monaco CY", "Mshtakan", "Nadeem", "New Peninim", "New York", "NISC GB18030", "Optima", "Osaka", "Palatino", "Papyrus", "PC Myungjo", "Pilgiche", "Plantagenet Cherokee", "Raanana", "Sand", "Sathu", "Seoul", "Shin Myungjo Neue", "Silom", "Skia", "Song", "ST FangSong", "ST Heiti", "ST Kaiti", "ST Song", "Symbol", "Tae Graphic", "Tahoma", "Taipei", "Techno", "Textile", "Thonburi", "Times", "Times CY", "Times New Roman", "Trebuchet MS", "Verdana", "Zapf Chancery", "Zapf Dingbats", "Zapfino"]
				}
			};
			e["default"] = s
		}, 108: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(107), a = n(o), s = i(109), r = n(s), l = i(110), _ = n(l), d = i(113), u = n(d), p = [], c = !1,
				h = {
					alert: function (t) {
						function e(e) {
							return t.apply(this, arguments)
						}

						return e.toString = function () {
							return t.toString()
						}, e
					}(function (t) {
						void 0
					}), emptyFunction: function () {
					}, isFunction: function (t) {
						return "function" == typeof t
					}, strRepeat: function (t, e) {
						for (var i = "", n = 0; n < e; n++) i += t;
						return i
					}, parseGPSCoordinates: function () {
						var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "35/1, 10/1, 130371/10000",
							e = t.split(/\s*[,\/]\s*/), i = e[0] / e[1], n = e[2] / e[3], o = e[4] / e[5];
						return i + n / 60 + o / 3600
					}, getUniqueId: function () {
						function t() {
							return Math.floor(65536 * (1 + Math.random())).toString(16).substring(1)
						}

						return t() + t() + "-" + t() + "-" + t() + "-" + t() + "-" + t() + t() + t()
					}, getScriptPath: function () {
						var t = document.getElementsByTagName("script"), e = this.dirname(t[t.length - 1].src);
						return e
					}, dirname: function (t) {
						return t.lastIndexOf("/") === -1 ? "./" : t.replace(/\\/g, "/").replace(/\/[^\/]*\/?$/, "") + "/"
					}, getThumbnailSize: function (t, e, i, n) {
						var o = t / e, a = i / n, s = void 0, r = void 0, l = void 0;
						return o > a ? (l = i / t, s = i, r = e * l) : (l = n / e, s = t * l, r = n), [s, r]
					}, getThumbnailImageSizeForCover: function (t, e, i, n) {
						var o = t / e, a = i / n, s = void 0, r = void 0, l = void 0;
						return o < a ? (l = i / t, s = i, r = e * l) : (l = n / e, s = t * l, r = n), [s, r]
					}, getCroppedThumbnailSize: function (t, e, i, n, o, a) {
						var s = void 0, r = void 0, l = t / e, _ = o / a;
						return t === e ? (s = t, r = e * (l / _)) : (s = t / (l / _), r = e), this.getThumbnailSize(s, r, i, n)
					}, isNeedPolyfill: function () {
						if ("Microsoft Internet Explorer" === navigator.appName) {
							var t = navigator.userAgent;
							if (null !== t.match(/MSIE ([0-9]{1,}[\.0-9]{0,})/)) {
								var e = parseFloat(RegExp.$1);
								if (e < 11) return !0
							}
						}
						return !1
					}, getIEVersion: function () {
						if ("undefined" != typeof this.IEVersion) return this.IEVersion;
						var t = window.navigator.userAgent, e = t.indexOf("MSIE");
						return e > 0 ? this.IEVersion = parseInt(t.substring(e + 5, t.indexOf(".", e))) : navigator.userAgent.match(/Trident\/7\./) ? this.IEVersion = 11 : this.IEVersion = 0, this.IEVersion
					}, stripBase64Header: function (t) {
						return t.replace(/^data:image\/[a-z]+;base64,/i, "")
					}, base64ToBlob: function (t, e) {
						for (var i = atob(t.split(",")[1]), n = t.split(",")[0].split(":")[1].split(";")[0], o = new ArrayBuffer(i.length), a = new Uint8Array(o), s = 0; s < i.length; s++) a[s] = i.charCodeAt(s);
						return new Blob([o], {type: n})
					}, urlToBlob: function (t) {
						var e = u["default"].Deferred(), i = new XMLHttpRequest;
						return c = !1, p.push(i), i.onload = function () {
							var t = p.indexOf(i);
							t > -1 && p.splice(t, 1);
							var n = window.URL.createObjectURL(this.response);
							e.resolve(n)
						}, i.onerror = function () {
							var t = p.indexOf(i);
							t > -1 && p.splice(t, 1), e.reject()
						}, i.onabort = function () {
							var t = p.indexOf(i);
							t > -1 && p.splice(t, 1), e.reject()
						}, i.open("GET", t, !0), i.responseType = "blob", i.send(), e
					}, urlToBase64: function (t) {
						var e = this, i = u["default"].Deferred();
						return u["default"].ajax({
							url: t,
							crossDomain: !0,
							xhrFields: {withCredentials: !0},
							mimeType: "text/plain; charset=x-user-defined",
							success: function (t) {
								i.resolve(e.binaryToBase64(t))
							},
							error: function () {
								i.reject()
							}
						}), i
					}, binaryToBase64: function (t) {
						for (var e = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", i = "", n = 0, o = t.length, a = void 0, s = void 0, r = void 0; n < o;) {
							if (a = 255 & t.charCodeAt(n++), n === o) {
								i += e.charAt(a >> 2), i += e.charAt((3 & a) << 4), i += "==";
								break
							}
							if (s = t.charCodeAt(n++), n === o) {
								i += e.charAt(a >> 2), i += e.charAt((3 & a) << 4 | (240 & s) >> 4), i += e.charAt((15 & s) << 2), i += "=";
								break
							}
							r = t.charCodeAt(n++), i += e.charAt(a >> 2), i += e.charAt((3 & a) << 4 | (240 & s) >> 4), i += e.charAt((15 & s) << 2 | (192 & r) >> 6), i += e.charAt(63 & r)
						}
						return i ? "data:image/png;base64," + i : null
					}, timestamp: function () {
						return Math.floor((new Date).getTime())
					}, getObjectFromUrlQueryString: function () {
						return _["default"].parse(location.search.substring(1))
					}, queryStringToObject: function (t) {
						var e = t.split("&"), i = {};
						return e.forEach(function (t) {
							var e = t.indexOf("="), n = t.substring(0, e), o = t.substring(e + 1);
							"" !== o && ("true" !== o && "false" !== o || (o = "true" === o), i[n] = o)
						}), i
					}, objectToArray: function (t) {
						var e = void 0;
						return e = "undefined" == typeof t ? [] : "undefined" == typeof t.length ? [t] : t
					}, convertHexToRGBA: function (t, e) {
						t = t.replace("#", "");
						var i = parseInt(t.substring(0, 2), 16), n = parseInt(t.substring(2, 4), 16),
							o = parseInt(t.substring(4, 6), 16), a = "rgba(" + i + "," + n + "," + o + "," + e + ")";
						return a
					}, isHold: function (t) {
						var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 500;
						if (!t) return !1;
						var i = Number(t.getAttribute("data-holdTime")), n = h.timestamp();
						return !!(i && n - i < e) || (t.setAttribute("data-holdTime", n), !1)
					}, getLimitedSize: function (t, e) {
						return t > a["default"].maxImageSize && (e *= a["default"].maxImageSize / t, t = a["default"].maxImageSize), e > a["default"].maxImageSize && (t *= a["default"].maxImageSize / e, e = a["default"].maxImageSize), [t, e]
					}, getMaximumWidth: function (t, e) {
						var i = Math.min(a["default"].maxImageSize, t), n = e * (i / t);
						return n > a["default"].maxImageSize && (i *= a["default"].maxImageSize / n), Math.ceil(i)
					}, getMinimumWidth: function (t, e) {
						var i = void 0;
						return i = t >= e ? t / e : 1, Math.ceil(i)
					}, getFonts: function () {
						var t = void 0;
						return t = navigator.userAgent.indexOf("Macintosh") !== -1 ? a["default"].fonts.mac : a["default"].fonts.win
					}, getFontsDetected: function () {
						var t = this.getFonts(), e = [];
						return t.forEach(function (t) {
							r["default"].detect(t) && e.push(t)
						}), e
					}, getBytes: function (t) {
						for (var e = 0, i = 0; i < t.length; i++) {
							var n = escape(t.charAt(i));
							1 === n.length ? e++ : n.indexOf("%u") !== -1 ? e += 2 : n.indexOf("%") !== -1 && (e += n.length / 3)
						}
						return e
					}, byteCut: function (t, e) {
						for (var i = 0, n = "", o = 0; o < t.length; o++) {
							var a = t.charCodeAt(o), s = t.charAt(o);
							if (a >= 0 && a < 256 ? i++ : i += 2, i > e) break;
							n += s
						}
						return n
					}, asyncDelay: function () {
						var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : 0,
							e = u["default"].Deferred();
						return setTimeout(e.resolve.bind(e), t), e
					}, convertByteToMB: function (t) {
						var e = t / 1024 / 1024;
						return Math.round(100 * e) / 100
					}, getGrafolioApiDomain: function () {
						var t = PhotoEditorApp.instance, e = t._controller.options.setting.env;
						return t.config.grafolioApiDomain[e]
					}, getGrafolioBaseDomain: function () {
						var t = PhotoEditorApp.instance, e = t._controller.options.setting.env;
						return t.config.grafolioBaseDomain[e]
					}, getFileNameFromURL: function (t) {
						return t = t.split("?")[0], t = t.substring(t.lastIndexOf("/") + 1)
					}, addURLParameter: function (t, e, i) {
						return t += t.indexOf("?") === -1 ? "?" : "&", t += e + "=" + encodeURIComponent(i)
					}, isSafari: function () {
						if ("undefined" != typeof this._isSafari) return this._isSafari;
						var t = window.navigator.userAgent.toLowerCase();
						return this._isSafari = t.indexOf("safari") > -1 && t.indexOf("chrome") === -1, this._isSafari
					}, debug: function (t) {
						var e = PhotoEditorApp.instance, i = e._controller.options.setting.debugMode;
						i && void 0
					}, parseFileName: function () {
						var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "",
							e = t.lastIndexOf("."), i = void 0;
						return e !== -1 && (i = t.substring(e + 1), t = t.substring(0, e)), {
							name: t,
							extension: i || ""
						}
					}, addURLProtocol: function (t, e) {
						return e = e || location.protocol.toLowerCase().replace(":", ""), t = t.replace(/^https?:/, e + ":"), /^https?:\/\//.test(t) || (t = e + "://" + t), t
					}, abortAjax: function () {
						return u["default"].ajaxSetup({
							beforeSend: function (t) {
								c = !1, p.push(t)
							}, complete: function (t) {
								var e = p.indexOf(t);
								e > -1 && p.splice(e, 1)
							}
						}), function () {
							void 0, p.length && (c = !0), (0, u["default"])(p).each(function (t, e) {
								e.abort()
							}), p.length = 0
						}
					}(), isAjaxAborted: function () {
						return c
					}, resetInputFileElement: function () {
						var t = function (t) {
							var e = t.parentNode, i = t.nextSibling, n = document.createElement("form");
							n.appendChild(t), n.reset(), e.insertBefore(t, i)
						};
						return function (e) {
							var i = this.getIEVersion();
							10 === i ? (e.type = "text", e.type = "file") : i ? t(e) : e.value = ""
						}
					}()
				};
			e["default"] = h
		}, 109: function (t, e) {
			"use strict";
			e.__esModule = !0, e["default"] = function () {
				function t(t) {
					var i = !1;
					for (var n in e) {
						a.style.fontFamily = t + "," + e[n], o.appendChild(a);
						var l = a.offsetWidth !== s[e[n]] || a.offsetHeight !== r[e[n]];
						o.removeChild(a), i = i || l
					}
					return i
				}

				var e = ["monospace", "sans-serif", "serif"], i = "mmmmmmmmmmlli", n = "72px",
					o = document.getElementsByTagName("body")[0], a = document.createElement("span"), s = {}, r = {};
				a.style.fontSize = n, a.innerHTML = i;
				for (var l in e) a.style.fontFamily = e[l], o.appendChild(a), s[e[l]] = a.offsetWidth, r[e[l]] = a.offsetHeight, o.removeChild(a);
				return {detect: t}
			}()
		}, 110: function (t, e, i) {
			"use strict";
			e.decode = e.parse = i(111), e.encode = e.stringify = i(112)
		}, 111: function (t, e) {
			"use strict";

			function i(t, e) {
				return Object.prototype.hasOwnProperty.call(t, e)
			}

			t.exports = function (t, e, n, o) {
				e = e || "&", n = n || "=";
				var a = {};
				if ("string" != typeof t || 0 === t.length) return a;
				var s = /\+/g;
				t = t.split(e);
				var r = 1e3;
				o && "number" == typeof o.maxKeys && (r = o.maxKeys);
				var l = t.length;
				r > 0 && l > r && (l = r);
				for (var _ = 0; _ < l; ++_) {
					var d, u, p, c, h = t[_].replace(s, "%20"), f = h.indexOf(n);
					f >= 0 ? (d = h.substr(0, f), u = h.substr(f + 1)) : (d = h, u = ""), p = decodeURIComponent(d), c = decodeURIComponent(u), i(a, p) ? Array.isArray(a[p]) ? a[p].push(c) : a[p] = [a[p], c] : a[p] = c
				}
				return a
			}
		}, 112: function (t, e) {
			"use strict";
			var i = function (t) {
				switch (typeof t) {
					case"string":
						return t;
					case"boolean":
						return t ? "true" : "false";
					case"number":
						return isFinite(t) ? t : "";
					default:
						return ""
				}
			};
			t.exports = function (t, e, n, o) {
				return e = e || "&", n = n || "=", null === t && (t = void 0), "object" == typeof t ? Object.keys(t).map(function (o) {
					var a = encodeURIComponent(i(o)) + n;
					return Array.isArray(t[o]) ? t[o].map(function (t) {
						return a + encodeURIComponent(i(t))
					}).join(e) : a + encodeURIComponent(i(t[o]))
				}).join(e) : o ? encodeURIComponent(i(o)) + n + encodeURIComponent(i(t)) : ""
			}
		}, 114: function (t, e) {
			"use strict";
			e.__esModule = !0;
			var i = {
				CONTROLS: {
					FILTER: "filter",
					CROP: "crop",
					RESIZE: "resize",
					ADJUST: "adjust",
					MOSAIC: "mosaic",
					SIGNATURE: "signature",
					STICKER: "sticker",
					TEXT: "text"
				},
				CONTROL: {
					CROP: {ORIGINAL: "original", FREE: "free"},
					RESIZE: {ORIGINAL: "original", CUSTOM: "custom"},
					ADJUST: {
						AUTO: "auto_adjust",
						BRIGHTNESS: "brightness",
						SATURATION: "saturation",
						SHARPEN: "sharpen",
						KELVIN: "kelvin",
						CONTRAST: "contrast"
					},
					MOSAIC: {SQUARE1: "square1"},
					SIGNATURE: {NONE: "none", IMAGE: "image", TEXT: "text"}
				},
				KEYCODES: {DEL: 46, LEFT: 37, RIGHT: 39, Z: 90, Y: 89, ENTER: 13, ESC: 27},
				COOKIES: {
					LIST_OPENED: "npeListOpened",
					NOTICE_HIDE_FLAG: "npeNoticeHideFlag",
					SIGNATURE_TYPE_LASTEST: "npeSignatureTypeLastest",
					SIGNATURE_IMAGE_DATAURL: "npeSignatureImageDataURL",
					SIGNATURE_TEXT: "npeSignatureText",
					SIGNATURE_TEXT_FONT_COLORS: "npeSignatureTextFontColors",
					SIGNATURE_TEXT_BACK_COLORS: "npeSignatureTextBackColors",
					SIGNATURE_TEXT_FONT_FAMILY: "npeSignatureTextFontFamily",
					SIGNATURE_TEXT_FONT_SIZE: "npeSignatureTextFontSize",
					SIGNATURE_TEXT_FONT_BOLD: "npeSignatureTextFontBold",
					SIGNATURE_TEXT_FONT_ITALIC: "npeSignatureTextFontItalic",
					SIGNATURE_TEXT_FONT_COLOR: "npeSignatureTextFontColor",
					SIGNATURE_TEXT_FONT_ALPHA: "npeSignatureTextFontAlpha",
					SIGNATURE_TEXT_FONT_BG_COLOR: "npeSignatureTextFontBgColor",
					SIGNATURE_TEXT_FONT_BG_ALPHA: "npeSignatureTextFontBgAlpha",
					TEXT_FONT_COLORS: "npeTextFontColors",
					TEXT_BACK_COLORS: "npeTextBackColors",
					TEXT_FONT_FAMILY: "npeTextFontFamily",
					TEXT_FONT_SIZE: "npeTextFontSize",
					TEXT_FONT_BOLD: "npeTextFontBold",
					TEXT_FONT_ITALIC: "npeTextFontItalic",
					TEXT_FONT_COLOR: "npeTextFontColor",
					TEXT_FONT_ALPHA: "npeTextFontAlpha",
					TEXT_FONT_BG_COLOR: "npeTextFontBgColor",
					TEXT_FONT_BG_ALPHA: "npeTextFontBgAlpha"
				},
				LIST_MODE: {EDITOR_LIST: "list", SELECT: "select", SORT: "sort"},
				CALLBACK_TYPES: {
					SET_EDITOR: "SET_EDITOR",
					UPLOAD: "UPLOAD",
					SAVE_FOR_UPLOAD: "SAVE_FOR_UPLOAD",
					SAVE: "SAVE",
					CROP_END: "CROP_END",
					MULTI_SELECT: "MULTI_SELECT"
				},
				TAB_LIST: {BASE: "Base", EDIT: "Edit"}
			};
			e["default"] = i
		}, 115: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(76), a = n(o), s = i(79), r = n(s), l = i(116), _ = n(l), d = i(70), u = n(d), p = i(107),
				c = n(p), h = i(108), f = n(h), T = i(114), g = (n(T), i(113)), m = n(g),
				E = location.protocol.toLowerCase() + "//", C = "naverPhotoeditor", S = "photoupld", I = {
					MOCKUP: {
						STICKER_PACK_LIST: "mockup/stickerPackList.json",
						STICKER_LIST: "mockup/stickerList.json",
						MULTIPLE_VALIDATION: "mockup/multipleValidation.json"
					},
					GRAFOLIO: {
						STICKER_PACK_LIST: E + "{apidomain}/v1/photoupld/sticker/stickerPackList",
						STICKER_LIST: E + "{apidomain}/v1/photoupld/sticker/stickerList",
						MULTIPLE_VALIDATION: E + "{apidomain}/api/sticker/multiple/validation"
					},
					API_GATEWAY: {
						STICKER_PACK_LIST: E + "{apidomain}/" + C + "/gfmarket/proxyStickerPackList.json?servicecode=" + S,
						STICKER_LIST: E + "{apidomain}/" + C + "/gfmarket/proxyStickerList.json?servicecode=" + S,
						MULTIPLE_VALIDATION: E + "{apidomain}/" + C + "/gfmarket/proxyStickerMultiValidation.json?servicecode=" + S
					}
				}, L = function (t) {
					return t.indexOf("apis.naver.com") !== -1 ? "API_GATEWAY" : "GRAFOLIO"
				}, A = function () {
					function t(e, i) {
						(0, u["default"])(this, t), this._apiDomain = e.grafolioApiDomain || c["default"].grafolioApiDomain[e.setting.env], this._baseDomain = e.grafolioBaseDomain || c["default"].grafolioBaseDomain[e.setting.env], this._defaultAjaxOptions = this._getDefaultAjaxOptions(), this._popupUploaderStickerType = i, this._packs = [], this._stickers = {}
					}

					return t.prototype._getDefaultAjaxOptions = function () {
						return {
							type: "get",
							dataType: "json",
							crossDomain: !0,
							xhrFields: {withCredentials: !0},
							error: function () {
							}
						}
					}, t.prototype._getAPIUrl = function (t) {
						var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {}, i = L(this._apiDomain),
							n = I[i][t].replace("{apidomain}", this._apiDomain);
						for (var o in e) n += n.indexOf("?") === -1 ? "?" : "&", n += o + "=" + e[o];
						return n
					}, t.prototype._getAjaxOptions = function () {
						var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
						return (0, _["default"])({}, this._defaultAjaxOptions, t)
					}, t.prototype.getStickerPacks = function () {
						function t() {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i() {
							var t, e;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										if (t = this._getAPIUrl("STICKER_PACK_LIST"), e = this._getAjaxOptions({url: t}), !this._packs || !this._packs.length) {
											i.next = 4;
											break
										}
										return i.abrupt("return", this._packs);
									case 4:
										return i.next = 6, m["default"].ajax(e).done(this._onDoneGetStickerPacks.bind(this));
									case 6:
										return i.abrupt("return", this._packs);
									case 7:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype._onDoneGetStickerPacks = function (t) {
						var e = this;
						this._packs = t.list.map(function (i) {
							var n = f["default"].addURLProtocol(e._baseDomain);
							return {
								type: "grafolio",
								code: null,
								packCode: i.packCode,
								isLine: i.isLine,
								tabOnImg: n + "/" + i.packCode + "/" + t.info.mobileTabOnName,
								tabOffImg: n + "/" + i.packCode + "/" + t.info.mobileTabOffName,
								previewImg: n + "/" + i.packCode + "/" + t.info.mobilePreviewName.replace("p100_100", "p60_60")
							}
						}), this._packs = this._packs.filter(function (t) {
							return "all" === e._popupUploaderStickerType || "grafolio" === e._popupUploaderStickerType && !t.isLine
						})
					}, t.prototype.getStickerPackInfo = function () {
						function t(t) {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i(t) {
							var e;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										return i.next = 2, this.getStickerPacks();
									case 2:
										return i.t0 = function (e) {
											return e.packCode === t
										}, e = i.sent.filter(i.t0), i.abrupt("return", e.length ? e[0] : null);
									case 5:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype.getStickers = function () {
						function t(t) {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i(t) {
							var e, n, o;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										return e = this._getAPIUrl("STICKER_LIST", {packCode: t}), n = this._getAjaxOptions({url: e}), i.next = 4, this.getStickerPackInfo(t);
									case 4:
										if (o = i.sent, this._stickers[t] && this._stickers[t].length) {
											i.next = 8;
											break
										}
										return i.next = 8, m["default"].ajax(n).done(this._onDoneGetStickers.bind(this, t, o));
									case 8:
										return i.abrupt("return", this._stickers[t]);
									case 9:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype._onDoneGetStickers = function () {
						function t(t, i, n) {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i(t, e, n) {
							var o, s = this;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										o = c["default"].stickerPreview.grafolio, this._stickers[t] = n.list.map(function (t, i) {
											var n = [i % o.cols * o.width * -1, Math.floor(i / o.cols) * o.height * -1];
											return t.type = "grafolio", t.code = t.stickerCode, t.original = f["default"].addURLProtocol(t.extendedUrl || t.originalUrl), t.thumbnail = e.previewImg, t.backgroundPosition = n.map(function (t) {
												return t + "px"
											}).join(" "), t.original = t.original.replace(/:\/\/[^\/]+/gi, "://" + s._baseDomain), t.original += "?type=p100_100", t.original += "&d=" + encodeURIComponent(location.host), t
										});
									case 2:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype.multipleValidation = function () {
						function t() {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i() {
							var t, e, n, o = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										return t = this._getAPIUrl("MULTIPLE_VALIDATION", {stickerCode: o.join(",")}), e = this._getAjaxOptions({url: t}), n = !o.length, i.next = 5, m["default"].ajax(e).done(function (t) {
											"SUCCESS" === t.message.status && (n = !0)
										});
									case 5:
										return i.abrupt("return", n);
									case 6:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t
				}();
			e["default"] = A
		}, 120: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(113), a = n(o), s = [], r = {
				clear: function () {
					s = []
				}, action: function (t, e) {
					var i = a["default"].Deferred();
					return s.push({type: t, defer: i}), e && e(), i
				}, callback: function (t, e) {
					var i = void 0;
					s.forEach(function (e, n) {
						i || e.type !== t || (i = s.splice(n, 1)[0])
					}), i && i.defer.resolve(e)
				}
			};
			e["default"] = r
		}, 121: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(108), r = n(s), l = function () {
				function t() {
					var e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
					(0, a["default"])(this, t), null == e || null == e.consumerKey || null == e.Authorization ? (this.isValid = !1, this.consumerKey = "", this.authorization = "") : (this.isValid = !0, this.consumerKey = e.consumerKey, this.authorization = e.Authorization)
				}

				return t.prototype.getURL = function (t) {
					var e = "&";
					return t.indexOf("?") === -1 && (e = "?"), e += "consumerKey=" + this.consumerKey, e += "&Authorization=" + this.authorization
				}, t.prototype.setParamNeoId = function (t) {
					return "string" == typeof t ? (t.length && (t = r["default"].addURLParameter(t, "consumerKey", this.consumerKey), t = r["default"].addURLParameter(t, "Authorization", this.authorization)), t) : void(t instanceof FormData ? (t.append("consumerKey", this.consumerKey), t.append("Authorization", this.authorization)) : (t.consumerKey = this.consumerKey, t.Authorization = this.authorization))
				}, t.prototype.toString = function () {
					var t = "[NeoIdAuthVO]\n";
					return t += "consumerKey: " + this.consumerKey + "\n", t += "authorization: " + this.authorization
				}, t
			}();
			e["default"] = l
		}, 122: function (t, e) {
			"use strict";
			e.__esModule = !0;
			var i = {
				ko: {
					txt_filter: "필터",
					txt_crop: "자르기, 회전",
					txt_resize: "크기",
					txt_adjust: "보정",
					txt_mosaic: "모자이크",
					txt_signature: "서명",
					txt_text: "텍스트",
					txt_sticker: "스티커",
					txt_frame: "액자",
					txt_return_origin: "초기화",
					txt_cancel: "취소",
					txt_done: "완료",
					txt_apply: "적용",
					txt_open: "열기",
					txt_close: "닫기",
					txt_undo: "이전",
					txt_redo: "다시",
					txt_image_save: "사진저장",
					txt_image_list: "이미지 목록",
					txt_none_apply: "적용 안함",
					txt_original: "원본",
					txt_max: "최대",
					txt_optimum: "최적",
					txt_original_size: "원본크기",
					txt_filter_original: "Original",
					txt_filter_clear: "Clear",
					txt_filter_bright: "Bright",
					txt_filter_cream: "Cream",
					txt_filter_delight: "Delight",
					txt_filter_blossom: "Blossom",
					txt_filter_warm: "Warm",
					txt_filter_lollipop: "Lollipop",
					txt_filter_candy: "Candy",
					txt_filter_mint: "Mint",
					txt_filter_cool: "Cool",
					txt_filter_cobalt: "Cobalt",
					txt_filter_classic: "Classic",
					txt_filter_vintage: "Vintage",
					txt_filter_urban: "Urban",
					txt_filter_chic: "Chic",
					txt_filter_blank: "Blank",
					txt_filter_tintp: "Tint P",
					txt_filter_tinty: "Tint Y",
					txt_frame_1: "하얀액자",
					txt_frame_2: "검은액자",
					txt_frame_3: "둥근액자",
					txt_frame_4: "낡은액자",
					txt_frame_5: "종이액자",
					txt_frame_6: "투명 모서리",
					txt_reset: "재설정",
					txt_rotate: "회전",
					txt_original_ratio: "원본비율",
					txt_free_ratio: "자유",
					txt_confirm: "확인",
					txt_auto_adjustment: "자동보정",
					txt_brightness: "밝기",
					txt_saturation: "채도",
					txt_sharpen: "선명도",
					txt_kelvin: "색온도",
					txt_contrast: "대비",
					txt_square: "사각",
					txt_circle: "원",
					txt_none_signature: "서명 안함",
					txt_image_signature: "이미지 서명",
					txt_text_signature: "텍스트 서명",
					txt_notice_compare: "버튼을 누르면 원본과 비교할 수 있어요",
					txt_notice_resize: " 사진 크기 변경 시 %s크기(가로%spx)보다 크게 변경되지 않습니다.",
					txt_notice_crop_minimum: "작은 이미지(60x60px미만)는 자르기 메뉴 사용이 제한됩니다.<br />회전, 반전만 이용할 수 있습니다.",
					txt_notice_has_thumbnail: "이미지는 최대 3000px로 저장됩니다.",
					txt_notice_sns_image_load_title: "SNS 사진 불러오기",
					txt_notice_image_save_title: "저장하기",
					txt_notice_file_upload: "%s 이미지 파일을 올릴 수 있습니다.<br />한 장당 %sMB, 1회 %sMB까지 올리기 가능합니다.",
					txt_notice_copyright: '저작권자 등 원 권리자의 허락을 받지 않은 이미지의 수정 및 저작권 등<br />다른 사람의 권리 침해, 명예를 훼손하는 이미지는 <br /><em class="highlight">이용약관 및 관련 법률에 의해 제재를 받으실 수 있습니다.</em>',
					txt_notice_session_expire_tit: "포토업로더를 장시간 이용하지 않아 종료되었습니다.",
					txt_notice_session_expire_desc: "포토업로더를 이용하시려면 다시 실행해 주세요.",
					txt_notice_uploaded_bmp_tit: "BMP 형태의 사진을 PNG로 변환합니다.",
					txt_notice_uploaded_bmp_desc: "BMP 파일 형식으로 만들어진 사진은<br />브라우저에 따라 정상적으로 표시되지 않을 수 있어<br />PNG 파일 형식으로 변환합니다.",
					txt_notice_uploaded_cmyk_tit: "CMYK 모드인 이미지를 RGB 모드로 변환합니다.",
					txt_notice_uploaded_cmyk_desc: "CMYK 모드로 작업된 사진은 업로드 후 브라우저에서 정상적으로<br />표시되지 않을 수 있어 RGB로 변환합니다.<br />RGB모드로 변환할 경우 색상 등 일부 내용이 달라질 수 있습니다.",
					txt_direct: "직접입력",
					txt_auto: "자동",
					txt_apply_all: "모든 사진 적용",
					txt_apply_select: "일부 사진 적용",
					txt_signature_image_input: "400x200px, 200kb 이하",
					txt_signature_image_load: "불러오기",
					txt_signature_opacity: "투명도",
					txt_signature_size: "크기",
					txt_all: "모든 ",
					txt_selected: "선택된 ",
					txt_notice_resize_apply: "이미지의 가로 크기가 %spx로 변경되었습니다.",
					txt_notice_resize_apply_exception: "<br />단, 원본이 이보다 작은 경우 원본 크기가 유지됩니다.",
					txt_notice_resize_apply_exception_by_type: "<br />단, 원본이 작은 경우 원본 크기가 유지되며, %s는 대상에서 제외됩니다. ",
					txt_notice_apply_exception_by_type: "<br />단, %s는 대상에서 제외됩니다. ",
					txt_animation_gif: "움직이는 GIF",
					txt_vr360: "360VR 이미지",
					txt_alert_ok: "확인",
					txt_alert_cancel: "취소",
					txt_alert_try: "다시 한 번 시도해 주시겠어요?",
					txt_alert_error: "앗, 에러가 발생했습니다!",
					txt_alert_out_of_memory: "사진이 많아 브라우저 메모리가 부족합니다.<br />브라우저를 다시 시작해 주세요.",
					txt_confirm_delete_all_tit: "선택한 사진을 삭제하시겠습니까?",
					txt_confirm_close_tit: "편집을 취소하고 나가시겠습니까?",
					txt_confirm_close_desc: "진행중인 편집 이미지가 삭제됩니다.",
					txt_confirm_crop_tit: "자르기에서 편집한 내용을<br />저장하시겠습니까?",
					txt_confirm_save_crop_tit: "자르기에서 편집한 내용도 저장하시겠습니까?",
					txt_confirm_hram_tit: "청소년에게 유해 할 수 있는<br />이미지가 포함되어 있습니다.",
					txt_confirm_hram_desc: "청소년 유해 이미지가 포함된 게시물 등록시<br />서비스 이용에 제한을 받을 수 있습니다.<br /><br />계속 진행 하시겠습니까?",
					txt_notice_sticker_permission: "스티커 이용권한이 없습니다.<br />확인 후에 재시도 해주세요.",
					txt_notice_file_type_error: "파일 형식 오류",
					txt_notice_animation_gif: "움직이는 GIF는 이미지 편집 기능을 제공하지 않습니다.",
					txt_notice_vr360: "360VR 이미지는 이미지 편집 기능을 제공하지 않습니다.",
					txt_notice_upload_image_size: "%sMB 이하의 사진만 추가할 수 있습니다.",
					txt_notice_signature_image_size: "400x200px, 200KB 이하의 사진만 사용할 수 있습니다.",
					txt_notice_signature_image_type_error: "%s만 지원합니다.",
					txt_notice_signature_apply_none: "사진에서 서명을 삭제하였습니다.",
					txt_notice_signature_apply_image: "사진에 이미지 서명이 적용되었습니다.",
					txt_notice_signature_apply_text: "사진에 텍스트 서명이 적용되었습니다.",
					txt_notice_filter_apply_none: "사진에서 필터를 제거했습니다.",
					txt_notice_filter_apply: "사진에 필터를 적용했습니다.",
					txt_notice_frame_apply_none: "사진에서 액자를 제거했습니다.",
					txt_notice_frame_apply: "사진에 액자를 적용했습니다.",
					txt_notice_uploading_tit: "사진을 추가하고 있습니다.",
					txt_notice_modify_all_tit: "전체 사진의 편집 내용을 저장하고 있습니다.",
					txt_notice_updating_tit: "사진의 편집 내용을 저장하고 있습니다.",
					txt_notice_saving_tit: "사진을 올리고 있습니다.",
					txt_notice_uploading_err_tit: "사진 중 일부를 추가하지 못했습니다.",
					txt_notice_uploading_err_result: "전체 %s장 중 %s장을 추가하지 못했습니다.",
					txt_notice_uploading_err: "오류가 발생했습니다.",
					txt_notice_no_images_tit: "추가된 사진이 없습니다.",
					txt_notice_no_images_desc: "사진을 먼저 추가해주세요.",
					txt_notice_no_images_editable: "편집할 사진이 없습니다.",
					txt_notice_edit_mode_finish: "편집모드가 종료됩니다.",
					txt_notice_parent_window: "에디터창이 닫혀서, 이미지를 추가할 수 없습니다.",
					txt_signature_text_placeholder: "국문 최대 21자, 영문 42자",
					txt_add_text: "텍스트 추가",
					txt_edit_order: "순서 편집",
					txt_apply_edit_order: "순서 편집 완료",
					txt_reverse: "역순으로",
					txt_image_load_fail: "선택하신 사진에 오류가 있어 불러올 수 없습니다.",
					txt_uploader_sort_tooltip: "끌어서 이미지 순서를 변경할 수 있어요.<br>더블클릭하면 이미지를 편집할 수 있어요.",
					txt_editor_sort_tooltip: "끌어서 이미지 순서를 변경할 수 있어요.",
					image_upload_error_key_expired: "세션 만료",
					image_upload_error_client: "클라이언트 오류",
					image_upload_error_system: "분류되지 않은 서버 오류",
					image_upload_error_login: "로그인이 필요합니다.",
					image_upload_error_fail_to_load_iframe: "phup_frame.html 파일을 ifram에 로드하지 못함",
					image_upload_error_fail_to_get_session_key: "업로드 세션키 값을 로드하지 못함",
					image_upload_error_broken_image: "손상된 이미지 입니다.",
					image_upload_error_unknown_broken_image: "이미지 깨짐 (이미지 파일 형식이 아님)",
					image_upload_error_unsupported_image: "지원되지 않는 이미지 포멧",
					image_upload_error_unsupported_extension: "허용하지 않은 확장자인 경우",
					image_upload_error_abuse: "어뷰저로 탐지되어 업로드 제한",
					image_upload_error_limitation_by_session_count: "한 세션의 최대 업로드 개수 초과",
					image_upload_error_limitation_by_session_size: "한 세션의 최대 업로드 용량 초과",
					image_upload_error_limitation_by_image: "이미지 용량 제약 걸림",
					image_upload_error_limitation_by_width_height: "이미지 너비 혹은 높이 범위 제약 걸림",
					image_upload_error_limitation_by_resolution: "이미지 면적 제약 걸림",
					image_upload_error_limitation_by_aspect_ratio: "이미지 비율 제약 걸림",
					image_upload_error_invalid_parameter: "호출 오류",
					image_upload_error_illegal_state: "호출 순서 오류, 업로드 되지 않은 이미지를 저장하는 경우",
					image_upload_error_file_overwrite_fail: "덮어쓰기 오류",
					image_upload_error_fail_convert_bmp2png_fail: "파일 변환 실패",
					image_upload_error_config: "서버 내부 설정 로드 오류",
					image_upload_error_fail_file_copy: "편집된 최종파일 업로드 실패",
					image_upload_error_fail_resize: "파일 변환 오류"
				}
			}, n = {
				_lang: "ko", setLang: function (t) {
					this._lang = t
				}, getMessages: function () {
					return i[this._lang]
				}, getMessage: function (t) {
					for (var e = i[this._lang][t], n = arguments.length, o = Array(n > 1 ? n - 1 : 0), a = 1; a < n; a++) o[a - 1] = arguments[a];
					return o.forEach(function (t) {
						e = e.replace("%s", t)
					}), e
				}
			};
			e["default"] = n
		}, 123: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(116), a = n(o), s = i(70), r = n(s), l = i(71), _ = n(l), d = i(105), u = (n(d), i(108)),
				p = (n(u), i(124)), c = n(p), h = i(113), f = n(h);
			c["default"].MODAL = {
				ALERT_WRAP: ".npe_alert_wrap",
				ALERT_INNER: ".npe_alert",
				ALERT_TITLE: ".npe_alert_title",
				ALERT_TITLE_SMALL: ".npe_alert_title_small",
				ALERT_DESCRIPTION: ".npe_alert_description",
				ALERT_DESCRIPTION_LONG: ".npe_alert_description_long",
				ALERT_BTN_AREA: ".npe_alert_btn_area",
				ALERT_OK_BTN: ".npe_alert_btn_ok",
				ALERT_CANCEL_BTN: ".npe_alert_btn_cancel",
				ALERT_BTN_HIDE: ".npe_alert_btn_hide",
				ALERT_BTN_HIDE_CHECK: ".npe_alert_hide_check",
				ALERT_CLOSE_BTN: ".npe_alert_btn_close",
				ALERT_SNS_AREA: ".npe_alert_sns_area",
				ALERT_SAVE_AREA: ".npe_alert_save_area",
				ALERT_UPLOADING_AREA: ".npe_alert_uploading_area"
			};
			var T = function () {
				function t() {
					return (0, r["default"])(this, t), t.instance || (t.instance = this, t.prototype._initialize.apply(this, arguments)), t.instance
				}

				return t.prototype._initialize = function (t) {
					this.type = null, this.popupType = null, this.options = null, this._storage = t, this._defaultOption = {
						title: "",
						content: "",
						smallTitle: !1,
						longDescription: !1,
						useCheckHideBtn: !1,
						useCheckHideKey: null,
						useCloseBtn: !1,
						useBtns: !1,
						yesCallback: null,
						noCallback: null,
						afterClose: null
					}, this.$alertWrap = (0, f["default"])(c["default"].MODAL.ALERT_WRAP), this.$alertInner = this.$alertWrap.find(c["default"].MODAL.ALERT_INNER), this.$alertTitle = this.$alertWrap.find(c["default"].MODAL.ALERT_TITLE), this.$alertTitleSmall = this.$alertWrap.find(c["default"].MODAL.ALERT_TITLE_SMALL), this.$alertDesc = this.$alertWrap.find(c["default"].MODAL.ALERT_DESCRIPTION), this.$alertDescLong = this.$alertWrap.find(c["default"].MODAL.ALERT_DESCRIPTION_LONG), this.$alertBtnArea = this.$alertWrap.find(c["default"].MODAL.ALERT_BTN_AREA), this.$alertOkBtn = this.$alertWrap.find(c["default"].MODAL.ALERT_OK_BTN), this.$alertCancelBtn = this.$alertWrap.find(c["default"].MODAL.ALERT_CANCEL_BTN), this.$alertBtnHide = this.$alertWrap.find(c["default"].MODAL.ALERT_BTN_HIDE), this.$alertBtnHideCheck = this.$alertWrap.find(c["default"].MODAL.ALERT_BTN_HIDE_CHECK), this.$alertCloseBtn = this.$alertWrap.find(c["default"].MODAL.ALERT_CLOSE_BTN), this.$alertSnsArea = this.$alertWrap.find(c["default"].MODAL.ALERT_SNS_AREA), this.$alertSaveArea = this.$alertWrap.find(c["default"].MODAL.ALERT_SAVE_AREA), this.$alertUploadingArea = this.$alertWrap.find(c["default"].MODAL.ALERT_UPLOADING_AREA), this.activate()
				}, t.prototype.activate = function () {
					this.$alertCloseBtn.on("click.modal", this._onClickCloseBtn.bind(this))
				}, t.prototype.deactivate = function () {
					this.$alertCloseBtn.off("click.modal")
				}, t.prototype.alert = function (t) {
					t = (0, a["default"])({
						useCheckHideBtn: !1,
						useCloseBtn: !1,
						useBtns: !0
					}, t), this.popupType = null, this._open("alert", t)
				}, t.prototype.confirm = function (t) {
					t = (0, a["default"])({
						useCheckHideBtn: !1,
						useCloseBtn: !1,
						useBtns: !0
					}, t), this.popupType = null, this._open("confirm", t)
				}, t.prototype.popup = function (t) {
					t = (0, a["default"])({
						useCheckHideBtn: !0,
						useCloseBtn: !0
					}, t), t.useCheckHideBtn && t.useCheckHideKey && this._storage.getItem(t.useCheckHideKey) || (this.popupType = null, this._open("popup", t))
				}, t.prototype.snsImagePopup = function (t) {
					t = (0, a["default"])({
						useCheckHideBtn: !1,
						useCloseBtn: !0
					}, t), this.popupType = "sns", this._open("popup", t)
				}, t.prototype.saveImagePopup = function (t) {
					t = (0, a["default"])({
						useCheckHideBtn: !1,
						useCloseBtn: !0
					}, t), this.popupType = "saveImage", this._open("popup", t)
				}, t.prototype.uploadingPopup = function (t) {
					t = (0, a["default"])({
						useCheckHideBtn: !1,
						useCloseBtn: !1,
						useBtns: !0
					}, t), this.popupType = "uploading", this._open("popup", t)
				}, t.prototype.store = function () {
					this._store = {
						type: this.type,
						popupType: this.popupType,
						isOpened: this.isOpened,
						options: (0, a["default"])({}, this.option)
					}
				}, t.prototype.restore = function () {
					this._store && this._store.isOpened && (this.popupType = this._store.popupType, this._open(this._store.type, (0, a["default"])({}, this._store.options)))
				}, t.prototype._open = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "alert", e = arguments[1];
					e = (0, a["default"])({}, this._defaultOption, e), this.option = e, this.type = t, this.option && this.option.beforeOpen && this.option.beforeOpen(), this.$alertInner.children().hide(), this.$alertOkBtn.hide(), this.$alertCancelBtn.hide(), this.$alertBtnArea.toggle(e.useBtns), this._setTitle(e.title, e.smallTitle), this._setContent(e.content, e.longDescription), this._setHideBtn(e.useCheckHideBtn, e.useCheckHideKey), this._setCloseBtn(e.useCloseBtn), "alert" === t && this._setOkBtn(e.yesCallback), "confirm" === t && (this._setOkBtn(e.yesCallback), this._setCancelBtn(e.noCallback)), "sns" === this.popupType && this.$alertSnsArea.show(), "saveImage" === this.popupType && this.$alertSaveArea.show(), "uploading" === this.popupType && this.$alertUploadingArea.show(), this.$alertWrap.addClass(c["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._setTitle = function (t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
					t && 0 !== t.length && (e ? this.$alertTitleSmall.html(t).show() : this.$alertTitle.html(t).show())
				}, t.prototype._setContent = function (t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
					t && 0 !== t.length && (e ? this.$alertDescLong.empty().append(t).show() : this.$alertDesc.empty().append(t).show())
				}, t.prototype._setOkBtn = function (t) {
					var e = this;
					this.$alertOkBtn.show().off("click.modal").one("click.modal", function () {
						e.$alertWrap.removeClass(c["default"].ACTIVE_TOGGLE_CLASS), t && t()
					})
				}, t.prototype._setCancelBtn = function (t) {
					var e = this;
					this.$alertCancelBtn.show().off("click.modal").one("click.modal", function () {
						e.$alertWrap.removeClass(c["default"].ACTIVE_TOGGLE_CLASS), t && t()
					})
				}, t.prototype._setCloseBtn = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] && arguments[0];
					this.$alertCloseBtn.toggle(t)
				}, t.prototype._setHideBtn = function () {
					var t = this, e = arguments.length > 0 && void 0 !== arguments[0] && arguments[0],
						i = arguments.length > 1 && void 0 !== arguments[1] && arguments[1];
					this.$alertBtnHide.toggle(e && i), e && i ? this.$alertBtnHideCheck.off("change.modal").on("change.modal", function () {
						var e = t.$alertBtnHideCheck.is(":checked");
						e ? t._storage.setItem(i, 1) : t._storage.removeItem(i)
					}) : this.$alertBtnHideCheck.off("change.modal")
				}, t.prototype.close = function () {
					var t = this.option && this.option.afterClose;
					this.$alertWrap.removeClass(c["default"].ACTIVE_TOGGLE_CLASS), t && t()
				}, t.prototype._onClickCloseBtn = function () {
					this.close()
				}, (0, _["default"])(t, [{
					key: "isOpened", get: function () {
						return this.$alertWrap.hasClass(c["default"].ACTIVE_TOGGLE_CLASS)
					}
				}]), t
			}();
			T.getInstance = function () {
				return T.instance || (T.instance = new T), T.instance
			}, e["default"] = T
		}, 124: function (t, e) {
			"use strict";
			e.__esModule = !0;
			var i = {
				ACTIVE_TOGGLE_CLASS: "on",
				OUT_ANIMATION_CLASS: "off",
				LOADING_CLASS: "npe_loading",
				UPLOADER_DIMMED_CLASS: "npu_dimmed",
				EDITOR_DIMMED_CLASS: "npe_dimmed",
				DISABLE_TOGGLE_CLASS: "disable",
				LIST_DRAG_ITEM_CLASS: "npe_drag_orig",
				FOCUS_TOGGLE_CLASS: "focus",
				HOVER_TOGGLE_CLASS: "hover",
				CANVAS_LOADING: ".npe_canvas_loading",
				PHOTOEDITOR_WRAP: ".npe_wrap",
				PHOTOUPLOADER_WRAP: ".npu_wrap",
				CONTROL_BTN: ".npe_btn_control",
				CONTROL_WRAP: ".npe_control_wrap",
				CONTROL_DETAIL: ".npe_control_detail",
				CONTROL_DETAIL_WRAP: ".npe_control_detail_wrap",
				CONTROL_LEFT_CLASS: "npe_control_left",
				CONTROL_RIGHT_CLASS: "npe_control_right",
				ZOOM_IN_BTN: ".npe_btn_zoom_in",
				ZOOM_OUT_BTN: ".npe_btn_zoom_out",
				DETAIL_THUMBNAIL_IMG: ".npe_detail_thumb_img",
				TOOLBAR: ".npe_header_toolbar",
				ZOOM_SLIDE: ".npe_header_toolbar_slide_area .npe_slide ",
				CANVAS_WRAP: ".npe_canvas_wrap",
				CANVAS: ".npe_canvas",
				HEADER_BTN_AREA: ".npe_header_btn_area"
			};
			e["default"] = i
		}, 125: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(126), a = n(o), s = i(108), r = n(s), l = i(113), _ = n(l), d = [], u = {
				_options: {serviceCode: null}, setOptions: function (t) {
					_["default"].extend(!0, this._options, t)
				}, log: function (t, e, i) {
					this._canUseNclicks() && t && this._runNclicks(t, e, i)
				}, _canUseNclicks: function () {
					return !0
				}, _runNclicks: function (t, e, i) {
					var n = a["default"], o = n && n.codes ? n.codes[t] : null;
					n.nsc = n.nscPrefix + this._options.serviceCode, o && this._clickcr(n, o)
				}, _clickcr: function (t, e) {
				}
			};
			e["default"] = u
		}, 126: function (t, e) {
			"use strict";
			e.__esModule = !0, e["default"] = {
				nscPrefix: "upphoto2.",
				ccsrv: "cc.naver.com",
				codes: {
					PTE: "",
					PTE_CANCEL: "ce1.cancel",
					PTE_OK: "ce1.done",
					PTE_ORIGINAL: "ce1.org",
					PTE_FITSCREEN: "ce2.fit",
					PTE_UNDO: "ce1.res",
					PTE_REDO: "ce1.rdo",
					PTE_SAVE: "ce1.sav",
					PTE_SAVE_LOCAL: "ce1.sav1",
					PTE_SAVE_CLOUD: "ce1.sav2",
					PTE_COMPARE: "ce1.comp",
					PTE_U_OLDVERSION: "tab.v1up",
					PTE_U_GAP: "tab.gap",
					PTE_U_FINISH: "tab.up",
					PTE_U_PC_UPLOAD: "adl.ad1",
					PTE_U_CLOUD_UPLOAD: "adl.ad2",
					PTE_U_SNS: "adl.ad3",
					PTE_U_INSTAGRAM_UPLOAD: "adl.ad4",
					PTE_U_FACEBOOK_UPLOAD: "adl.ad5",
					PTE_U_PHOLAR_UPLOAD: "adl.ad6",
					PTE_U_SIZE_UP: "cbm.thbig",
					PTE_U_SIZE_DOWN: "cbm.thsmall",
					PTE_U_RESIZE: "cbm.sr1",
					PTE_U_RESIZE_SIZE: "cbm.sz",
					PTE_U_RESIZE_ORIGINAL: "cbm.org",
					PTE_U_RESIZE_INPUT: "cbm.sr2",
					PTE_U_ROTATE: "cbm.90r",
					PTE_U_EDIT: "cbm.edit1",
					PTE_U_EDIT_DIRECT: "cbm.edit2",
					PTE_U_REVERSE: "cbm.vrt",
					PTE_U_DELETE: "cbm.de1",
					PTE_U_DELETE_ALL: "cbm.de2",
					PTE_S: "",
					PTE_S_FILTER: "ce2.effect",
					PTE_S_CROP: "ce2.crpr",
					PTE_S_RESIZE: "ce2.sr1",
					PTE_S_ADJUST: "ce2.modify",
					PTE_S_MOSAIC: "ce2.mosaic",
					PTE_S_SIGNATURE: "ce2.signature",
					PTE_S_STICKER: "ce2.sticker",
					PTE_S_TEXT: "ce2.text",
					PTE_S_FRAME: "ce2.frame",
					PTE_L: "",
					PTE_L_OPEN: "ce3.oc",
					PTE_L_CLOSE: "ce3.oc",
					PTE_L_PREV: "",
					PTE_L_NEXT: "",
					PTE_L_DROP: "",
					PTE_L_REVERSE: "",
					PTE_L_EDIT: "",
					PTE_L_SAVE: "",
					PTE_L_APPLY: "ce3.ap",
					PTE_F: "",
					PTE_F_ORIGINAL: "ce2*e.no",
					PTE_F_FIL1: "ce2*e.swe",
					PTE_F_FIL2: "ce2*e.calm",
					PTE_F_FIL3: "ce2*e.soft",
					PTE_F_FIL4: "ce2*e.fresh",
					PTE_F_FIL5: "ce2*e.glad",
					PTE_F_FIL6: "ce2*e.quiet",
					PTE_F_FIL7: "ce2*e.cool",
					PTE_F_FIL8: "ce2*e.love",
					PTE_F_FIL9: "ce2*e.peace",
					PTE_F_FIL10: "ce2*e.warm",
					PTE_F_BAR: "",
					PTE_F_BATCH: "ce2*e.apl",
					PTE_F_PORTION: "ce2*e.aps",
					PTE_C: "",
					PTE_C_RE: "",
					PTE_C_ROTATE: "ce2*c.90r",
					PTE_C_ORIGINAL: "ce2*c.cor",
					PTE_C_FREE: "ce2*c.crp",
					PTE_C_169: "ce2*c.ratio",
					PTE_C_32: "ce2*c.ratio",
					PTE_C_43: "ce2*c.ratio",
					PTE_C_11: "ce2*c.ratio",
					PTE_C_34: "ce2*c.ratio",
					PTE_C_23: "ce2*c.ratio",
					PTE_C_916: "ce2*c.ratio",
					PTE_C_OK: "ce2*c.crpok",
					PTE_C_ANGLE: "",
					PTE_C_AUTO: "",
					PTE_C_DROP: "",
					PTE_C_HRZ: "ce2*c.hrz",
					PTE_C_VRT: "ce2*c.vrt",
					PTE_W: "",
					PTE_W_BATCH: "ce2*z.apl",
					PTE_W_INPUT: "ce2*z.enter",
					PTE_W_ORIGINAL: "ce2*z.org",
					PTE_W_SIZE: "ce2*z.size",
					PTE_W_400: "",
					PTE_W_600: "",
					PTE_W_700: "",
					PTE_W_773: "",
					PTE_W_966: "",
					PTE_W_580: "",
					PTE_W_900: "",
					PTE_W_1200: "",
					PTE_W_PORTION: "ce2*z.aps",
					PTE_R: "",
					PTE_R_RESET: "",
					PTE_R_AUTO: "ce2*a.auto",
					PTE_R_BRIGHTNESS: "ce2*a.br",
					PTE_R_SATURATION: "ce2*a.ch",
					PTE_R_SHARPEN: "ce2*a.cl",
					PTE_R_KELVIN: "ce2*a.te",
					PTE_R_CONTRAST: "ce2*a.co",
					PTE_M: "",
					PTE_M_TYPE: "ce2*m.ms",
					PTE_M_RESET: "",
					PTE_M_UNDO: "",
					PTE_M_SQUARE1: "",
					PTE_M_SQUARE2: "",
					PTE_M_SQUARE3: "",
					PTE_M_SQUARE4: "",
					PTE_M_SQUARE5: "",
					PTE_M_CIRCLE1: "",
					PTE_M_CIRCLE2: "",
					PTE_M_CIRCLE3: "",
					PTE_M_CIRCLE4: "",
					PTE_M_CIRCLE5: "",
					PTE_G: "",
					PTE_G_NONE: "ce2*s.no",
					PTE_G_IMAGE: "ce2*s.image",
					PTE_G_TEXT: "ce2*s.text",
					PTE_G_APPLYALL: "ce2*s.apl",
					PTE_G_ATTACH: "",
					PTE_G_FONT: "",
					PTE_G_FONTSIZE: "",
					PTE_G_BOLD: "",
					PTE_G_ITALIC: "",
					PTE_G_COLOR: "",
					PTE_G_BGCOLOR: "",
					PTE_G_PORTION: "ce2*s.aps",
					PTE_H_NEWADD: "",
					PTE_H_DEFAULT: "ce2*i.dlist",
					PTE_H_ADDED: "ce2*i.alist",
					PTE_H_MARKET: "ce2*i.add",
					PTE_T_NEWADD: "ce2*t.add",
					PTE_T_FONT: "",
					PTE_T_FONTSIZE: "",
					PTE_T_BOLD: "",
					PTE_T_ITALIC: "",
					PTE_T_COLOR: "",
					PTE_T_BGCOLOR: "",
					PTE_FRAME_NONE: "ce2*f.no",
					PTE_FRAME_APPLY: "ce2*f.frame"
				}
			}
		}, 127: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(108), r = (n(s), i(128)), l = n(r), _ = void 0, d = function () {
				function t(e, i) {
					(0, a["default"])(this, t), _ || (_ = this);
					var n = "__";
					return this._keyPrefix = e ? i + n + e + n : i + n, _
				}

				return t.prototype._getStorageKeyCombinedUserId = function (t) {
					return this._keyPrefix + t
				}, t.prototype.getItem = function (t) {
					return l["default"].get(this._getStorageKeyCombinedUserId(t)) || l["default"].get(t)
				}, t.prototype.setItem = function (t, e) {
					return this._isExistsLegacyData(t) && this._removeLegacyData(t), l["default"].set(this._getStorageKeyCombinedUserId(t), e)
				}, t.prototype.removeItem = function (t) {
					return l["default"].remove(this._getStorageKeyCombinedUserId(t))
				}, t.prototype._isExistsLegacyData = function (t) {
					return null !== l["default"].get(t)
				}, t.prototype._removeLegacyData = function (t) {
					l["default"].remove(t)
				}, t
			}();
			e["default"] = d
		}, 140: function (module, exports, __webpack_require__) {
			"use strict";

			function _interopRequireDefault(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			exports.__esModule = !0;
			var _classCallCheck2 = __webpack_require__(70), _classCallCheck3 = _interopRequireDefault(_classCallCheck2),
				ExternalInterface = function () {
					function ExternalInterface(t) {
						return (0, _classCallCheck3["default"])(this, ExternalInterface), t && (this._external = t), ExternalInterface.instance || (ExternalInterface.instance = this), ExternalInterface.instance
					}

					return ExternalInterface.prototype.call = function call(funcName) {
						try {
							var host = funcName.lastIndexOf(".") !== -1 ? eval(funcName.substring(0, funcName.lastIndexOf("."))) : null,
								func = eval(funcName);
							if ("function" == typeof func) {
								for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) args[_key - 1] = arguments[_key];
								return func.apply(host, args)
							}
						} catch (e) {
							return void 0, !1
						}
					}, ExternalInterface.prototype.noticeUploaderLoaded = function () {
						this.call("baseUploaderLoaded")
					}, ExternalInterface.prototype.startSendPhotoToWrapper = function () {
						this.call("beginImgInsert")
					}, ExternalInterface.prototype.convertPhotoForExport = function (t) {
						var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
							i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2], n = t.originalFileName;
						return n = n ? i ? escape(encodeURI(n)) : escape(n) : t.key, {
							sFileURL: t.path,
							sFilePath: t.path.substring(0, t.path.lastIndexOf("/")),
							sFileName: n,
							nFileSize: t.fileSize,
							nWidth: t.width,
							nHeight: t.height,
							sAlign: "",
							bNewLine: e,
							bLastFile: !1
						}
					}, ExternalInterface.prototype.sendPhotoToWrapper = function () {
						var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : "photo",
							e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : {},
							i = arguments.length > 2 && void 0 !== arguments[2] && arguments[2],
							n = arguments.length > 3 && void 0 !== arguments[3] && arguments[3],
							o = this.convertPhotoForExport(e, i), a = !0;
						o.bLastFile = n;
						try {
							a = this.call("setPhoto", t, o)
						} catch (s) {
							a = !1
						}
						return a
					}, ExternalInterface.prototype.sendAllPhotoToWrapper = function () {
						var t = this, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [],
							i = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
							n = e.map(function (e) {
								return t.convertPhotoForExport(e, !1)
							}), o = !0;
						n[n.length - 1].bLastFile = !0;
						try {
							o = this.call("setAllPhoto", n, i)
						} catch (a) {
							o = !1
						}
						return o
					}, ExternalInterface.prototype.closeUploader = function () {
						this.call("finishImgInsert")
					}, ExternalInterface.prototype.openNphotoAlbumPopup = function () {
						this.call("openNphotoAlbumPopup")
					}, ExternalInterface.prototype.openSNSPhotoAlbumPopup = function (t) {
						this.call("SNS.open", t.toLowerCase())
					}, ExternalInterface.prototype.parentWindowError = function () {
						this.call("closeUploader")
					}, ExternalInterface.prototype.openNdriveSavePopup = function (t, e) {
						var i = this.convertPhotoForExport(e, !1, !0);
						this.call("openNdriveSavePopup", t, i)
					}, ExternalInterface.prototype.redirectToFlashUploader = function () {
						this.call("redirectToFlashUploader")
					}, ExternalInterface.prototype.getNeoIdAuth = function () {
						return this.call("getNeoIdAuth")
					}, ExternalInterface
				}();
			exports["default"] = new ExternalInterface(window)
		}, 141: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(76), a = n(o), s = i(79), r = n(s), l = i(70), _ = n(l), d = i(107), u = n(d), p = i(108),
				c = n(p), h = i(114), f = n(h), T = i(113), g = n(T), m = function () {
					function t(e) {
						(0, _["default"])(this, t), this._controller = e, this._neoIdAuth = e._neoIdAuth, this._storage = e._storage, this._apiDomain = c["default"].addURLProtocol(this._controller.options.setting.apiDomain), this._publishDomain = c["default"].addURLProtocol(this._controller.options.publishDomain), this._sessionKey = this._controller.options.sessionKey, this._pin = this._controller.options.pin, this._uploadIdx = 0, this._fileNamesWaitingUpload = {}, this._checkHarmEnabled = this._controller.options.checkHarmEnabled, this._serverTimeOut = e.options.serverTimeOut, this._retryCount = e.options.retryCount, this._userId = e.options.setting.userId
					}

					window.ggg = g["default"];

					return t.prototype._getSessionKeyCallback = function (t) {
						this.getSessionKey(t)
					}, t.prototype.getSessionKey = function (t, e) {
						this._sessionKey ? t(this._sessionKey) : this._getSessionKeyOnPhotoUploader(t, e)
					}, t.prototype._getSessionKeyOnPhotoUploader = function (t, e) {
						var i = window.location.pathname.match(/^\/([^\/]{80,})/), n = i ? i[1] : null;
						n ? (this._sessionKey = n, t && t(this._sessionKey)) : e ? e() : this._controller.abort()
					}, t.prototype.setPin = function (t) {
						return "string" == typeof t ? t.length ? c["default"].addURLParameter(t, "pin", this._pin) : t : void(t instanceof FormData ? t.append("pin", this._pin) : t.pin = this._pin)
					}, t.prototype._multipartAjax = function (t) {
						return t = g["default"].extend(!0, {
							type: "post",
							mimeType: "multipart/form-data",
							contentType: !1,
							processData: !1,
							crossDomain: !0,
							xhrFields: {withCredentials: !0}
						}, t), g["default"].ajax(t).retry({times: this._retryCount, timeout: this._serverTimeOut})
					}, t.prototype.getPhotoInfo = function (t) {
						var e = g["default"].Deferred(), i = this._apiDomain + "/" + this._sessionKey + "/info/" + t,
							n = {};
						return t >= this._uploadIdx && (this._uploadIdx = t + 1), this._pin && this.setPin(n), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(n), n.extractAnimatedCnt = "true", g["default"].ajax({
							type: "post",
							url: i,
							crossDomain: !0,
							xhrFields: {withCredentials: !0},
							data: n
						}).retry({
							times: this._retryCount,
							timeout: this._serverTimeOut
						}).then(this._onCompleteAjax.bind(this, e)), e
					}, t.prototype.upload = function (t, e) {
						return "file" === t ? this.uploadByFile(e) : "url" === t ? this.uploadByUrl(e) : void 0
					}, t.prototype.checkError = function (t) {
						return "false" === (0, g["default"])(t).find("isSuccess").text()
					}, t.prototype.uploadByFile = function (t) {
						var e = g["default"].Deferred(),
							i = this._apiDomain + "/" + this._sessionKey + "/upload/" + this._uploadIdx, n = new FormData;
						return n.append("image", t), n.append("filename", t.name), n.append("autorotate", "true"), n.append("extractAnimatedCnt", "true"), n.append("userId", this._userId), this._pin && this.setPin(n), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(n), this._fileNamesWaitingUpload[this._uploadIdx] = t.name, this._uploadIdx++, this._multipartAjax({
							url: i,
							data: n
						}).then(this._onCompleteAjax.bind(this, e)), e
					}, t.prototype.uploadByUrl = function (t) {
						var e = g["default"].Deferred(),
							i = this._apiDomain + "/" + this._sessionKey + "/upload/" + this._uploadIdx, n = new FormData,
							o = (t.key, t.url), a = o.split("?")[0];
						return a = a.substring(a.lastIndexOf("/") + 1), n.append("copyurl", encodeURIComponent(o)), n.append("autorotate", "true"), n.append("extractAnimatedCnt", "true"), n.append("userId", this._userId), this._pin && this.setPin(n), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(n),
							this._fileNamesWaitingUpload[this._uploadIdx] = a, this._uploadIdx++, this._multipartAjax({
							url: i,
							data: n
						}).then(this._onCompleteAjax.bind(this, e)), e
					}, t.prototype._onCompleteAjax = function () {
						function t(t, i, n, o) {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i(t, e, n, o) {
							var s, r, l;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										if (s = o ? o.getResponseHeader("content-type") : null, r = "text/html" === s, !this.checkError(e) && !r) {
											i.next = 6;
											break
										}
										return l = r ? "SYSTEM" : (0, g["default"])(e).find("code").text(), t.reject(l), i.abrupt("return");
									case 6:
										return i.t0 = t, i.next = 9, this._parseXMLPhotoData(e);
									case 9:
										i.t1 = i.sent, i.t0.resolve.call(i.t0, i.t1);
									case 11:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype._parseXMLPhotoData = function () {
						function t(t) {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i(t) {
							var e, n, o, s, r, l, _, d, p;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										if (e = (0, g["default"])(t), n = {
												index: Number(e.find("index").text()),
												width: Number(e.find("width").text()),
												height: Number(e.find("height").text()),
												domain: this._apiDomain,
												path: e.find("url").text() || "",
												pathResized: "/" + this._sessionKey + "/resize/" + Number(e.find("index").text()) + "?size=" + u["default"].maxImageSize,
												fileSize: Number(e.find("fileSize").text()),
												thumbnail: e.find("thumbnail").text() || "",
												animatedCnt: Number(e.find("animatedCnt").text()) || 1
											}, o = e.find("fileName").text(), s = e.find("imageType").text(), r = e.find("convertedImageType").text(), l = "CMYK" === e.find("colorSpace").text(), _ = "BMP" === s && "PNG" === r, d = n.path.indexOf(this._sessionKey) === -1, p = n.path.indexOf("/snapshot") !== -1, !l) {
											i.next = 12;
											break
										}
										return i.next = 12, this._controller.alertCMYKUploaded();
									case 12:
										if (!_) {
											i.next = 15;
											break
										}
										return i.next = 15, this._controller.alertBMPUploaded();
									case 15:
										return d && (n.domain = this._publishDomain), d || (this._neoIdAuth.isValid && (n.path = this._neoIdAuth.setParamNeoId(n.path), n.pathResized = this._neoIdAuth.setParamNeoId(n.pathResized), n.thumbnail = this._neoIdAuth.setParamNeoId(n.thumbnail)), this._pin && (n.path = this.setPin(n.path), n.pathResized = this.setPin(n.pathResized), n.thumbnail = this.setPin(n.thumbnail))), this._fileNamesWaitingUpload[n.index] && (n.originalFileName = this._fileNamesWaitingUpload[n.index]), (d || p) && o && (n.originalFileName = o), n.originalFileName && (n.originalFileName = n.originalFileName.replace(/\.bmp$/i, ".png")), i.abrupt("return", n);
									case 21:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype.update = function (t, e) {
						var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "image/jpeg",
							n = g["default"].Deferred(),
							o = this._apiDomain + "/" + this._sessionKey + "/update/" + t.index, a = new FormData,
							s = c["default"].base64ToBlob(e, i);
						return a.append("image", s), this._pin && this.setPin(a), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(a), this._multipartAjax({
							url: o,
							data: a
						}).done(this._onCompleteAjax.bind(this, n)).fail(function () {
							n.reject()
						}), n
					}, t.prototype["delete"] = function () {
						var t = this, e = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
							i = g["default"].Deferred(), n = this._apiDomain + "/" + this._sessionKey + "/delete",
							o = (this._controller.options, {});
						return null !== e && (n += "/" + e), this._pin && this.setPin(o), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(o), g["default"].ajax({
							type: "post",
							url: n,
							data: o,
							crossDomain: !0,
							xhrFields: {withCredentials: !0}
						}).retry({times: this._retryCount, timeout: this._serverTimeOut}).done(function (e) {
							return t.checkError(e) ? void i.reject((0, g["default"])(e).find("code").text()) : void i.resolve()
						}).fail(function () {
							i.reject()
						}), i
					}, t.prototype.save = function (t) {
						var e = g["default"].Deferred(), i = this._apiDomain + "/" + this._sessionKey + "/save/" + t.index,
							n = this._controller.options, o = {};
						return n.customKey && (o.customKey = n.customKey), n.encodedCustomQuery && (o.encodedCustomQuery = n.encodedCustomQuery), n.customKeyVersion && (o.customKeyVersion = n.customKeyVersion), this._pin && this.setPin(o), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(o), g["default"].ajax({
							type: "post",
							url: i,
							data: o,
							crossDomain: !0,
							xhrFields: {withCredentials: !0}
						}).retry({
							times: this._retryCount,
							timeout: this._serverTimeOut
						}).done(this._onCompleteAjax.bind(this, e)).fail(function () {
							e.reject()
						}), e
					}, t.prototype.modifyAll = function (t) {
						for (var e = this, i = g["default"].Deferred(), n = this._apiDomain + "/" + this._sessionKey + "/modify", o = {}, a = t.length, s = [], r = 0; r < a; r++) {
							var l = t[r];
							if (l.checkModifiedFromSnapshot()) {
								var _ = l.getSnapshotByBatchOption(), d = l.isRequireUpdate(), u = null, p = [];
								!d && _ && (_.resize && _.resize.width && _.resize.width < l.width && (u = _.resize.width), _.crop && _.crop.externalRotation && _.crop.modified && p.push("<rotation>" + _.crop.externalRotation + "</rotation>")), _ && _.signature && _.signature.signature && (u = u || l.width, p.push("<signature>"), p.push("<type>" + _.signature.signature + "</type>"), p.push("<verticalAlign>" + _.signature.verticalAlign + "</verticalAlign>"), p.push("<horizontalAlign>" + _.signature.horizontalAlign + "</horizontalAlign>"), p.push("<offsetX>" + Math.round(_.signature.offsetX) + "</offsetX>"), p.push("<offsetY>" + Math.round(_.signature.offsetY) + "</offsetY>"), p.push("</signature>")), u && p.push('<width force="false">' + u + "</width>"), (p.length || d) && (s.push("<item>"), s.push("<index>" + l.index + "</index>"), s.push("<command>"), Array.prototype.push.apply(s, p), d && s.push("<endEdit>true</endEdit>"), s.push("</command>"), s.push("</item>"))
							}
						}
						return s.length ? (o.command = "<items>" + s.join("") + "</items>", this._pin && this.setPin(o), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(o), g["default"].ajax({
							type: "post",
							url: n,
							data: o,
							crossDomain: !0,
							xhrFields: {withCredentials: !0}
						}).retry({times: this._retryCount, timeout: this._serverTimeOut}).done(function (t) {
							return e.checkError(t) ? void i.reject({
								index: (0, g["default"])(t).find("index").text(),
								code: (0, g["default"])(t).find("code").text()
							}) : void i.resolve()
						}).fail(function () {
							i.reject()
						}), i) : void i.resolve()
					}, t.prototype.finish = function () {
						var t = this._apiDomain + "/" + this._sessionKey + "/finish", e = {};
						return this._pin && this.setPin(e), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(e), g["default"].ajax({
							url: t,
							crossDomain: !0,
							xhrFields: {withCredentials: !0},
							data: e
						})
					}, t.prototype.uploadSnapshot = function (t, e) {
						var i = this, n = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "image/jpeg",
							o = g["default"].Deferred(),
							s = this._apiDomain + "/" + this._sessionKey + "/upload/snapshot/" + t.index,
							l = ("/" + this._sessionKey + "/snapshot/" + t.index, new FormData),
							_ = c["default"].base64ToBlob(e, n);
						return l.append("image", _), this._pin && this.setPin(l), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(l), this._multipartAjax({
							url: s,
							data: l
						}).done(function () {
							var t = (0, r["default"])(a["default"].mark(function e(t) {
								return a["default"].wrap(function (e) {
									for (; ;) switch (e.prev = e.next) {
										case 0:
											if (!i.checkError(t)) {
												e.next = 3;
												break
											}
											return o.reject((0, g["default"])(t).find("code").text()), e.abrupt("return");
										case 3:
											return e.t0 = o, e.next = 6, i._parseXMLPhotoData(t);
										case 6:
											e.t1 = e.sent, e.t0.resolve.call(e.t0, e.t1);
										case 8:
										case"end":
											return e.stop()
									}
								}, e, i)
							}));
							return function (e) {
								return t.apply(this, arguments)
							}
						}()).fail(function () {
							o.reject()
						}), o
					}, t.prototype.checkHarm = function (t) {
						var e = this, i = g["default"].Deferred(),
							n = this._apiDomain + "/" + this._sessionKey + "/checkHarm/" + t.index, o = {};
						return this._checkHarmEnabled ? (this._pin && this.setPin(o), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(o), g["default"].ajax({
							url: n,
							crossDomain: !0,
							xhrFields: {withCredentials: !0},
							dataType: "xml",
							data: o
						}).retry({times: this._retryCount, timeout: this._serverTimeOut}).done(function (n) {
							var o = (0, g["default"])(n), a = "true" === o.find("isHarm").text();
							return t.isHarmful = a, e.checkError(n) ? void i.reject(o.find("code").text()) : void i.resolve()
						}).fail(function (t) {
							i.reject()
						}), i) : i.resolve()
					}, t.prototype.uploadSignatureImage = function (t, e) {
						var i = arguments.length > 2 && void 0 !== arguments[2] ? arguments[2] : "image",
							n = g["default"].Deferred();
						"image" === i && (this._signatureImageDataURLBuffered = t);
						var o = this._apiDomain + "/" + this._sessionKey + "/upload/signature", a = new FormData,
							s = c["default"].base64ToBlob(t, e);
						return a.append("type", i), a.append("image", s), this._pin && this.setPin(a), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(a), this._multipartAjax({
							url: o,
							data: a
						}).then(this._onCompleteAjax.bind(this, n)), n
					}, t.prototype.asyncGetSignatureImageURL = function () {
						var t = this, e = g["default"].Deferred(),
							i = (this._storage.getItem(f["default"].COOKIES.SIGNATURE_IMAGE_DATAURL), {});
						if (this._signatureImageDataURLBuffered) return e.resolve(this._signatureImageDataURLBuffered);
						var n = this._apiDomain + "/" + this._sessionKey + "/signature";
						return this._pin && this.setPin(i), this._neoIdAuth.isValid && this._neoIdAuth.setParamNeoId(i), g["default"].ajax({
							global: !1,
							url: n,
							data: i,
							crossDomain: !0,
							xhrFields: {withCredentials: !0},
							mimeType: "text/plain; charset=x-user-defined",
							error: function () {
								e.reject()
							}
						}).retry({times: this._retryCount, timeout: this._serverTimeOut}).done(function (i) {
							if (i) {
								var n = c["default"].binaryToBase64(i);
								if (n) return t._signatureImageDataURLBuffered = n, void e.resolve(n)
							}
							e.reject()
						}), e.promise()
					}, t
				}();
			e["default"] = m
		}, 256: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(108), r = (n(s), i(107)), l = (n(r), i(257)), _ = n(l), d = i(122), u = n(d),
				p = i(124), c = n(p), h = i(123), f = n(h), T = i(113), g = n(T);
			c["default"].COMMON = {};
			var m = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					this.$editorWrapper = (0, g["default"])(c["default"].PHOTOEDITOR_WRAP), this.$uploaderWrapper = (0, g["default"])(c["default"].PHOTOUPLOADER_WRAP), this._modal = new f["default"](this._controller._storage)
				}, t.prototype.activate = function () {
					this._controller.on("changeLanguage", this._onChangeLanguage.bind(this)), this._controller.on("setHold", this._onHold.bind(this)), this._controller.on("unsetHold", this._onUnsetHold.bind(this)), this._controller.on("alert", this._onAlert.bind(this)), this._controller.on("confirm", this._onConfirm.bind(this)), this._controller.on("setDimmed", this._onSetDimmed.bind(this)), this._controller.on("unsetDimmed", this._onUnsetDimmed.bind(this))
				}, t.prototype.deactivate = function () {
				}, t.prototype._render = function (t, e) {
					_["default"].render(t, e)
				}, t.prototype._onChangeLanguage = function (t) {
					var e = u["default"].getMessages();
					this._render(this.$editorWrapper, e), this._render(this.$uploaderWrapper, e)
				}, t.prototype._onHold = function () {
					this.$editorWrapper.addClass(c["default"].LOADING_CLASS), this.$uploaderWrapper.addClass(c["default"].LOADING_CLASS)
				}, t.prototype._onUnsetHold = function () {
					this.$editorWrapper.removeClass(c["default"].LOADING_CLASS), this.$uploaderWrapper.removeClass(c["default"].LOADING_CLASS)
				}, t.prototype._onSetDimmed = function () {
					this.$editorWrapper.addClass(c["default"].EDITOR_DIMMED_CLASS), this.$uploaderWrapper.addClass(c["default"].UPLOADER_DIMMED_CLASS)
				}, t.prototype._onUnsetDimmed = function () {
					this.$editorWrapper.removeClass(c["default"].EDITOR_DIMMED_CLASS), this.$uploaderWrapper.removeClass(c["default"].UPLOADER_DIMMED_CLASS)
				}, t.prototype._onAlert = function (t, e, i) {
					this._modal.alert({title: t, content: e, yesCallback: i})
				}, t.prototype._onConfirm = function (t, e, i, n) {
					this._modal.confirm({title: t, yesCallback: i, noCallback: n})
				}, t
			}();
			e["default"] = m
		}, 257: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(258), a = n(o), s = i(259), r = n(s), l = i(124), _ = n(l);
			a["default"].tail.setLoadingClass = function (t, e, i) {
				a["default"].callTail("setClass", t, e, _["default"].LOADING_CLASS)
			}, a["default"].tail._setLoadingClass = function (t, e, i) {
				a["default"].callTail("setClass", t, !e, _["default"].LOADING_CLASS)
			}, a["default"].tail.addI18nTextClass = function (t, e, i) {
				a["default"].callTail("addClass", t, "_" + e + "-text")
			}, a["default"].tail.fontFamily = function (t, e, i) {
				e && (t.style.fontFamily = e)
			}, a["default"].tail.background = function (t, e, i) {
				e && (t.style.backgroundImage = "url('" + e + "')", t.style.backgroundRepeat = "no-repeat")
			}, a["default"].tail.widthPercent = function (t, e, i) {
				t.style.width = Number(e) + "%"
			}, a["default"].tail.backgroundColor = function (t, e, i) {
				e && (t.style.backgroundColor = e)
			}, a["default"].tail.stickerSprite = function (t, e, i) {
				e && (t.style.background = "url(" + e.thumbnail + ") no-repeat " + e.backgroundPosition)
			}, e["default"] = {
				html: r["default"], render: function (t, e) {
					a["default"].render(t, e)
				}
			}
		}, 259: function (t, e) {
			"use strict";
			t.exports = '<div class="npe_wrap">\n<header class="npe_header">\n<div class="npe_header_func_btn_area npe_btn_area">\n<button type="button" class="npe_btn_icon npe_btn_undo">\n<span class="npe_btn_title _txt_undo-text">이전</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_redo">\n<span class="npe_btn_title _txt_redo-text">다시</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_original">\n<span class="npe_btn_title _txt_return_origin-text">초기화</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_download">\n<span class="npe_btn_title _txt_image_save-text">사진저장</span>\n</button>\n</div>\n<div class="npe_header_submit_btn_area npe_btn_area">\n<button type="button" class="npe_btn_header npe_btn_cancel">\n<span class="npe_btn_title _txt_cancel-text">취소</span>\n</button>\n<button type="button" class="npe_btn_header npe_btn_submit">\n<span class="npe_btn_title _txt_done-text">완료</span>\n</button>\n</div>\n<div class="npe_compare_area">\n<button type="button" class="npe_btn_header npe_btn_compare">\n<span class="npe_btn_title">원본과 비교하기</span>\n</button>\n<div class="npe_compare_tooltip">\n<span class="npe_compare_tooltip_title">버튼을 누르면 원본과 비교할 수 있어요</span>\n</div>\n</div>\n</header>\n<nav class="npe_control_wrap npe_control_right">\n<div class="npe_control_area">\n<button type="button" data-targetControl="resize" class="npe_btn_control npe_btn_resize _useResize-show _txt_resize-text">크기</button>\n<button type="button" data-targetControl="crop" class="npe_btn_control npe_btn_crop _useCrop-show _txt_crop-text">자르기, 회전</button>\n<button type="button" data-targetControl="filter" class="npe_btn_control npe_btn_filter _useFilter-show _txt_filter-text">필터</button>\n<button type="button" data-targetControl="adjust" class="npe_btn_control npe_btn_effect _useAdjust-show _txt_adjust-text">보정</button>\n<button type="button" data-targetControl="photoFrame" class="npe_btn_control npe_btn_frame _usePhotoFrame-show _txt_frame-text" >액자</button>\n<button type="button" data-targetControl="signature" class="npe_btn_control npe_btn_sign _useSignature-show _txt_signature-text">서명</button>\n<button type="button" data-targetControl="mosaic" class="npe_btn_control npe_btn_mosaic _useMosaic-show _txt_mosaic-text">모자이크</button>\n<button type="button" data-targetControl="text" class="npe_btn_control _useText-show npe_btn_text _txt_text-text">텍스트</button>\n<button type="button" data-targetControl="sticker" class="npe_btn_control _useSticker-show npe_btn_sticker _txt_sticker-text">스티커</button>\n<label class="npe_view_set"><input type="checkbox" class="npe_view_set_check npe_blind"><i class="npe_icon_check"></i><span class="npe_view_set_title">화면 맞춤</span></label>\n</div>\n</nav>\n<section class="npe_edit_wrap">\n<div class="npe_canvas_wrap" id="npe_canvas_wrap">\n<canvas class="npe_canvas"></canvas>\n<div class="npe_deg_wrap">\n<div class="npe_deg">\n</div>\n<div class="npe_deg_option">\n<span class="npe_deg_cursor"></span>\n<button type="button" class="npe_btn_deg_auto"><span class="npe_auto_title _txt_auto-text">자동</span></button>\n</div>\n</div>\n<div class="npe_size_wrap">\n<div class="npe_size_width">\n<span class="npe_size_width_text">W <em class="npe_size_width_num">3000</em></span>\n</div>\n<div class="npe_size_height">\n<span class="npe_size_height_text">H <em class="npe_size_height_num">3000</em></span>\n</div>\n</div>\n<textarea class="npe_text_wrap" wrap="off" spellcheck="false"></textarea>\n<div class="npe_text_hidden"></div>\n</div>\n<div class="npe_sign_wrap">\n<div class="npe_sign_coord_w">\nW <span class="npe_sign_coord_num"></span>\n</div>\n<div class="npe_sign_coord_h">\nH <span class="npe_sign_coord_num"></span>\n</div>\n</div>\n<div class="npe_notice_toast">\n<span class="npe_notice_toast_text">토스트 메시지</span>\n</div>\n<div class="npe_control_detail_wrap">\n<div class="npe_control_detail npe_control_resize"  data-control="resize">\n<strong class="npe_blind">크기</strong>\n<div class="npe_resize_area npe_resize_function_area">\n<span class="npe_btn_detail_text npe_btn_detail_resize npe_btn_direct_input _useResizeCustom-keep" data-resize="custom"><input type="text" class="npe_detail_title _txt_direct-attr _txt_direct-val" maxlength="5" data-placeholder="#txt_direct#" /><button type="button" class="npe_btn_direct_input_confirm"></button></span>\n<button type="button" class="npe_btn_detail_text npe_btn_detail_resize" data-resize="original"><span class="npe_detail_title"><span class="npe_original_text _txt_original_btn-text">원본</span> <span class="npe_original_size"><span class="_width-text"></span> x <span class="_height-text"></span></span></span></button>\n</div>\n<div class="npe_resize_area npe_resize_preset_area _resizePreset _resizePreset-list">\n<button type="button" class="npe_btn_detail_text npe_btn_detail_resize _template _item-replace _item-attr" data-resize="#item#"><span class="npe_detail_title">#item#</span></button>\n</div>\n<span class="npe_detail_bar"></span>\n<div class="npe_resize_area npe_resize_apply_area">\n<button type="button" class="npe_btn_icon npe_btn_apply_all"><span class="npe_btn_title _txt_apply_all-text">모든 사진 적용</span></button>\n<button type="button" class="npe_btn_icon npe_btn_apply_select"><span class="npe_btn_title _txt_apply_select-text">일부 사진 적용</span></button>\n</div>\n</div>\n<div class="npe_control_detail npe_control_crop" data-control="crop">\n<strong class="npe_blind">자르기</strong>\n<button type="button" class="npe_btn_icon npe_btn_rotate">\n<span class="npe_btn_title _txt_rotate-text">회전</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_horizon">\n<span class="npe_btn_title">좌우반전</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_vertical">\n<span class="npe_btn_title">상하반전</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop on" data-crop="original">\n<div class="npe_detail_thumb_area">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title _txt_original_ratio-text">원본비율</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop" data-crop="free">\n<div class="npe_detail_thumb_area">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title _txt_free_ratio-text">자유</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop" data-crop="16:9">\n<div class="npe_detail_thumb_area crop_16x9">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title">16:9</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop" data-crop="3:2">\n<div class="npe_detail_thumb_area crop_3x2">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title">3:2</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop" data-crop="4:3">\n<div class="npe_detail_thumb_area crop_4x3">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title">4:3</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop" data-crop="1:1">\n<div class="npe_detail_thumb_area crop_1x1">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title">1:1</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop" data-crop="3:4">\n<div class="npe_detail_thumb_area crop_3x4">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title">3:4</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop" data-crop="2:3">\n<div class="npe_detail_thumb_area crop_2x3">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title">2:3</span>\n</button>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_crop" data-crop="9:16">\n<div class="npe_detail_thumb_area crop_9x16">\n<span class="npe_detail_thumb">\n<span class="npe_detail_thumb_img"></span>\n</span>\n</div>\n<span class="npe_detail_title">9:16</span>\n</button>\n<span class="npe_detail_bar"></span>\n<button type="button" class="npe_btn_icon npe_btn_confirm">\n<span class="npe_btn_title _txt_confirm-text">확인</span>\n</button>\n</div>\n<div class="npe_control_detail npe_control_filter _filters _filters-list" data-control="filter">\n<strong class="npe_blind">필터</strong>\n<button type="button" class="npe_filter_list_arrow npe_filter_list_prev disable"><span class="npe_blind">이전</span></button>\n<div class="npe_detail_filter_area _filters-list">\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_filter _template _code-attr" data-filter="#code#">\n<div class="npe_detail_thumb_area">\n<span class="npe_detail_thumb">\n<canvas class="npe_detail_thumb_img"></canvas>\n</span>\n</div>\n<span class="npe_detail_title _i18n-addI18nTextClass"></span>\n</button>\n</div>\n<button type="button" class="npe_filter_list_arrow npe_filter_list_next disable"><span class="npe_blind">다음</span></button>\n<span class="npe_detail_bar"></span>\n<button type="button" class="npe_btn_icon npe_btn_apply_all">\n<span class="npe_btn_title _txt_apply_all-text">모든 사진 적용</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_apply_select">\n<span class="npe_btn_title _txt_apply_select-text">일부 사진 적용</span>\n</button>\n<div class="npe_control_detail_slide_area npe_slide_area">\n<input type="range" min="0" max="100" step="1" data-base="0" data-basedata="0" data-mindata="0" data-maxdata="1" class="npe_slide npe_slide_filter on">\n<div class="npe_slide_appear">\n<div class="npe_slide_background_track_back"></div>\n<div class="npe_slide_background_track"></div>\n<div class="npe_slide_background_thumb"></div>\n<span class="npe_control_detail_slide_number npe_slide_number">0</span>\n</div>\n</div>\n</div>\n<div class="npe_control_detail npe_control_effect" data-control="adjust">\n<strong class="npe_blind">보정</strong>\n<button type="button" class="npe_btn_icon npe_btn_detail_effect auto_effect" data-adjust="auto_adjust">\n<span class="npe_btn_title _txt_auto_adjustment-text">자동보정</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_effect brightness on" data-adjust="brightness">\n<span class="npe_btn_title _txt_brightness-text">밝기</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_effect chroma" data-adjust="saturation">\n<span class="npe_btn_title _txt_saturation-text">채도</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_effect resolution" data-adjust="sharpen">\n<span class="npe_btn_title _txt_sharpen-text">선명도</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_effect color" data-adjust="kelvin">\n<span class="npe_btn_title _txt_kelvin-text">색온도</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_effect constrast" data-adjust="contrast">\n<span class="npe_btn_title _txt_contrast-text">대비</span>\n</button>\n<div class="npe_control_detail_slide_area npe_slide_area">\n<input type="range" min="-100" max="100" step="1" data-base="0" data-basedata="0" data-mindata="-0.4" data-maxdata="0.4" class="npe_slide npe_slide_brightness on" data-adjust="brightness">\n<input type="range" min="-100" max="100" step="1" data-base="0" data-basedata="1" data-mindata="0" data-maxdata="4" class="npe_slide npe_slide_chroma" data-adjust="saturation">\n<input type="range" min="-100" max="100" step="1" data-base="0" data-basedata="0" data-mindata="-0.3" data-maxdata="0.3" class="npe_slide npe_slide_resolution" data-adjust="sharpen">\n<input type="range" min="-100" max="100" step="1" data-base="0" data-basedata="0" data-mindata="-0.3" data-maxdata="0.3" class="npe_slide npe_slide_color" data-adjust="kelvin">\n<input type="range" min="-100" max="100" step="1" data-base="0" data-basedata="1" data-mindata="0.5" data-maxdata="1.5" class="npe_slide npe_slide_constrast" data-adjust="contrast">\n<div class="npe_slide_appear">\n<div class="npe_slide_background_track_back"></div>\n<div class="npe_slide_background_track"></div>\n<div class="npe_slide_background_thumb"></div>\n<span class="npe_control_detail_slide_number npe_slide_number">0</span>\n</div>\n</div>\n</div>\n<div class="npe_control_detail npe_control_frame _frames _frames-list" data-control="photoFrame">\n<strong class="npe_blind">액자</strong>\n<button type="button" class="npe_btn_detail_thumb npe_btn_detail_frame _template _code-attr" data-frame="#code#">\n<div class="npe_detail_thumb_area">\n<span class="npe_detail_thumb">\n<img alt="" class="npe_img_frame _src-src _src-keep"/>\n</span>\n</div>\n<span class="npe_detail_title _i18n-addI18nTextClass"></span>\n</button>\n<span class="npe_detail_bar"></span>\n<button type="button" class="npe_btn_icon npe_btn_apply_all"><span class="npe_btn_title _txt_apply_all-text">모든 사진 적용</span></button>\n<button type="button" class="npe_btn_icon npe_btn_apply_select"><span class="npe_btn_title _txt_apply_select-text">일부 사진 적용</span></button>\n</div>\n<div class="npe_control_detail npe_control_sign" data-control="signature">\n<strong class="npe_blind">서명</strong>\n<button type="button" class="npe_btn_icon npe_btn_sign_none on" data-signature="none">\n<span class="npe_btn_title _txt_none_signature-text">서명 안함</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_sign_image" data-signature="image">\n<span class="npe_btn_title _txt_image_signature-text">이미지 서명</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_sign_text" data-signature="text">\n<span class="npe_btn_title _txt_text_signature-text">텍스트 서명</span>\n</button>\n<span class="npe_detail_bar"></span>\n<button type="button" class="npe_btn_icon npe_btn_apply_all">\n<span class="npe_btn_title _txt_apply_all-text">모든 사진 적용</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_apply_select">\n<span class="npe_btn_title _txt_apply_select-text">일부 사진 적용</span>\n</button>\n<div class="npe_detail_option npe_detail_option_sign_image" data-signature="image">\n<span class="npe_sign_image_data _txt_signature_image_input-text">400x200px, 200kb 이하</span>\n<label class="npe_btn_detail npe_btn_detail_text">\n<input class="npe_sign_image_file npe_blind" type="file" accept="image/*">\n<span class="npe_detail_title _txt_signature_image_load-text">불러오기</span>\n</label>\n</div>\n<div class="npe_detail_option npe_detail_option_sign_text" data-signature="text">\n<span class="npe_sign_text_input_area">\n<input type="text" class="npe_sign_text_input _txt_signature_text_placeholder-placeholder" spellcheck="false" readonly />\n</span>\n<div class="npe_text_tool_area">\n<span class="npe_text_tool npe_text_font_family" data-clickcode="PTE_G_FONT">\n<span class="npe_tool_title" title="글꼴">나눔고딕</span>\n<ul class="npe_tool_list npe_text_font_family_list _fonts _fonts-list">\n<li class="npe_tool_item _template _type-data _fontFamily-fontFamily _title-text _title-title _title-data _default-data" data-title="">폰트명</li>\n</ul>\n</span>\n<span class="npe_text_tool npe_text_font_size" data-clickcode="PTE_G_FONTSIZE">\n<span class="npe_tool_title" title="글자 크기">크기 5</span>\n<ul class="npe_tool_list npe_text_font_size_list _sizes _sizes-list">\n<li class="npe_tool_item _template _item-attr" title="#item#px" data-type="#item#" data-title="#item#px"><span class="_item-text"></span>px</li>\n</ul>\n</span>\n<button type="button" class="npe_text_tool npe_text_font_bold" title="굵게" data-clickcode="PTE_G_BOLD">\n<span class="npe_tool_title"></span>\n</button>\n<button type="button" class="npe_text_tool npe_text_font_italic" title="기울임꼴" data-clickcode="PTE_G_ITALIC">\n<span class="npe_tool_title"></span>\n</button>\n<span class="npe_text_tool npe_text_font_color" title="글자색" data-clickcode="PTE_G_COLOR">\n<span class="npe_tool_title"></span>\n<span class="npe_text_color_preview" style="background-color: #f7f7f7;"></span>\n</span>\n<span class="npe_text_tool npe_text_back_color" title="배경색" data-clickcode="PTE_G_BGCOLOR">\n<span class="npe_tool_title"></span>\n<span class="npe_text_color_preview" style="background-color: #000;"></span>\n</span>\n<div class="npe_color_select_area">\n<div class="npe_color_select_recent">\n<div class="npe_color_select_list _recentColors _recentColors-list">\n<button type="button" title="#item#" class="npe_color_select_item _template _item-attr _item-data _item-backgroundColor"></button>\n</div>\n</div>\n<div class="npe_color_select_table">\n<div class="npe_color_select_list _colors _colors-list">\n<button type="button" title="#item#" class="npe_color_select_item _template _item-attr _item-data _item-backgroundColor"></button>\n</div>\n</div>\n<div class="npe_color_select_input">\n<span class="npe_color_select_preview" style="background-color:#f7f7f7"></span>\n<span class="npe_color_select_code">\n<span class="npe_color_select_code_prefix">#</span>\n<input type="text" class="npe_color_select_code_input" maxlength="6" style="text-transform: uppercase; ime-mode:disabled;">\n</span>\n<div class="npe_color_select_opacity_area">\n<span class="npe_color_select_opacity_title _txt_signature_opacity-text">투명도</span>\n<div class="npe_color_select_opacity_slide npe_slide_area">\n<input type="range" step="1" class="npe_slide on">\n<div class="npe_slide_appear">\n<div class="npe_slide_background_track_back"></div>\n<div class="npe_slide_background_track"></div>\n<div class="npe_slide_background_thumb"></div>\n</div>\n</div>\n<input type="text" class="npe_color_select_opacity_num" maxlength="3" size="3">\n<span class="npe_color_select_opacity_num_control">\n<button type="button" class="npe_num_up"></button>\n<button type="button" class="npe_num_down"></button>\n</span>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="npe_control_detail npe_control_mosaic" data-control="mosaic">\n<strong class="npe_blind">모자이크</strong>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic rect1 on" data-mosaic="square1">\n<span class="npe_btn_title"><span class="_txt_square-text">사각</span>1</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic rect2" data-mosaic="square2">\n<span class="npe_btn_title"><span class="_txt_square-text">사각</span>2</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic rect3" data-mosaic="square3">\n<span class="npe_btn_title"><span class="_txt_square-text">사각</span>3</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic rect4" data-mosaic="square4">\n<span class="npe_btn_title"><span class="_txt_square-text">사각</span>4</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic rect5" data-mosaic="square5">\n<span class="npe_btn_title"><span class="_txt_square-text">사각</span>5</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic circle1" data-mosaic="circle1">\n<span class="npe_btn_title"><span class="_txt_circle-text">원</span>1</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic circle2" data-mosaic="circle2">\n<span class="npe_btn_title"><span class="_txt_circle-text">원</span>2</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic circle3" data-mosaic="circle3">\n<span class="npe_btn_title"><span class="_txt_circle-text">원</span>3</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic circle4" data-mosaic="circle4">\n<span class="npe_btn_title"><span class="_txt_circle-text">원</span>4</span>\n</button>\n<button type="button" class="npe_btn_icon npe_btn_detail_mosaic circle5" data-mosaic="circle5">\n<span class="npe_btn_title"><span class="_txt_circle-text">원</span>5</span>\n</button>\n</div>\n<div class="npe_control_detail npe_control_text" data-control="text">\n<strong class="npe_blind">텍스트</strong>\n<button type="button" class="npe_btn_icon npe_btn_text_add">\n<span class="npe_btn_title _txt_add_text-text">텍스트 추가</span>\n</button>\n<div class="npe_control_text_option_area">\n<div class="npe_text_tool_area">\n<span class="npe_text_tool npe_text_font_family" data-clickcode="PTE_T_FONT">\n<span class="npe_tool_title" title="글꼴">나눔고딕</span>\n<ul class="npe_tool_list npe_text_font_family_list _fonts _fonts-list">\n<li class="npe_tool_item _template _type-data _fontFamily-fontFamily _title-text _title-title _title-data _default-data" data-title="">폰트명</li>\n</ul>\n</span>\n<span class="npe_text_tool npe_text_font_size" data-clickcode="PTE_T_FONTSIZE">\n<span class="npe_tool_title" title="글자 크기">크기 5</span>\n<ul class="npe_tool_list npe_text_font_size_list _sizes _sizes-list">\n<li class="npe_tool_item _template _item-attr" title="#item#px" data-type="#item#" data-title="#item#px"><span class="_item-text"></span>px</li>\n</ul>\n</span>\n<button type="button" class="npe_text_tool npe_text_font_bold" title="굵게" data-clickcode="PTE_T_BOLD">\n<span class="npe_tool_title"></span>\n</button>\n<button type="button" class="npe_text_tool npe_text_font_italic" title="기울임꼴" data-clickcode="PTE_T_ITALIC">\n<span class="npe_tool_title"></span>\n</button>\n<span class="npe_text_tool npe_text_font_color" title="글자색" data-clickcode="PTE_T_COLOR">\n<span class="npe_tool_title"></span>\n<span class="npe_text_color_preview" style="background-color: #f7f7f7;"></span>\n</span>\n<span class="npe_text_tool npe_text_back_color" title="배경색" data-clickcode="PTE_T_BGCOLOR">\n<span class="npe_tool_title"></span>\n<span class="npe_text_color_preview" style="background-color: #000;"></span>\n</span>\n<div class="npe_color_select_area">\n<div class="npe_color_select_recent">\n<div class="npe_color_select_list _recentColors _recentColors-list">\n<button type="button" title="#item#" class="npe_color_select_item _template _item-attr _item-data _item-backgroundColor"></button>\n</div>\n</div>\n<div class="npe_color_select_table">\n<div class="npe_color_select_list _colors _colors-list">\n<button type="button" title="#item#" class="npe_color_select_item _template _item-attr _item-data _item-backgroundColor"></button>\n</div>\n</div>\n<div class="npe_color_select_input">\n<span class="npe_color_select_preview" style="background-color:#f7f7f7"></span>\n<span class="npe_color_select_code">\n<span class="npe_color_select_code_prefix">#</span>\n<input type="text" class="npe_color_select_code_input" maxlength="6" style="text-transform: uppercase; ime-mode:disabled;">\n</span>\n<div class="npe_color_select_opacity_area">\n<span class="npe_color_select_opacity_title _txt_signature_opacity-text">투명도</span>\n<div class="npe_color_select_opacity_slide npe_slide_area">\n<input type="range" step="1" class="npe_slide on">\n<div class="npe_slide_appear">\n<div class="npe_slide_background_track_back"></div>\n<div class="npe_slide_background_track"></div>\n<div class="npe_slide_background_thumb"></div>\n</div>\n</div>\n<input type="text" class="npe_color_select_opacity_num" maxlength="3" size="3">\n<span class="npe_color_select_opacity_num_control">\n<button type="button" class="npe_num_up"></button>\n<button type="button" class="npe_num_down"></button>\n</span>\n</div>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class="npe_control_detail npe_control_sticker" data-control="sticker">\n<strong class="npe_blind">스티커</strong>\n<div class="npe_sticker_area">\n<div class="npe_sticker_list _stickerPacks _stickerPacks-list">\n<div class="npe_sticker_item _template _type-data _packCode-data">\n<button type="button" class="npe_btn_detail_sticker">\n<img class="npe_sticker_img_off _tabOffImg-src" alt="">\n<img class="npe_sticker_img_on _tabOnImg-src" alt="">\n</button>\n<div class="npe_sticker_detail_wrap">\n<div class="npe_sticker_detail_area">\n<div class="npe_sticker_detail_list npe_sticker_default _packCode-data _stickers _stickers-list">\n<button type="button" class="npe_sticker_item_detail _template _original-data _code-data _itemdata-stickerSprite"></button>\n</div>\n</div>\n</div>\n</div>\n<div class="npe_sticker_item _grafolioMarketBtnWrap">\n<button type="button" class="npe_btn_detail_sticker _grafolioMarketBtn">\n<i class="npe_icon_plus"></i>\n</button>\n</div>\n</div>\n</div>\n</div>\n</div>\n</section>\n<footer class="npe_image_list_wrap">\n<div class="npe_image_list_area">\n<div class="npe_image_list_header">\n<div class="npe_image_list_header_title">\n<span class="list_title _txt_image_list-text">이미지 목록</span><span class="list_num _total-show" style="display:none"><em class="now_num _now-text">6</em><span class="total_num"> / <em class="_total-text">14</em></span></span>\n<div class="npe_image_list_header_btn_area">\n<span class="npe_image_list_header_bar"></span>\n<span class="list_open_close list_open on"><em class="list_open_close_title _txt_open-text">열기</em></span>\n<span class="list_open_close list_close"><em class="list_open_close_title _txt_close-text">닫기</em></span>\n</div>\n</div>\n</div>\n<div class="npe_image_list_header npe_select_header">\n<div class="npe_image_list_header_title">\n<button type="button" class="npe_btn_select_all" title="전체 선택"></button>\n<span class="list_title">적용할 사진을 선택하세요.</span> <span class="list_num"><em class="now_num">6</em>장 선택함</span>\n<div class="npe_image_list_header_btn_area">\n<button type="button" class="npe_btn_image_select npe_btn_cancel">\n<span class="npe_btn_title">취소</span>\n</button>\n<button type="button" class="npe_btn_image_select npe_btn_submit">\n<span class="npe_btn_title">적용</span>\n</button>\n</div>\n</div>\n</div>\n<div class="npe_image_list_header npe_order_header">\n<div class="npe_image_list_header_title">\n<span class="list_title">사진을 끌어서 순서를 바꿔 보세요. 문서에 첨부된 사진 순서도 함께 바뀝니다.</span> <span class="list_num"><em class="now_num">6</em>장 선택함</span>\n<div class="npe_image_list_header_btn_area">\n<button type="button" class="npe_btn_image_select npe_btn_cancel">\n<span class="npe_btn_title">취소</span>\n</button>\n<button type="button" class="npe_btn_image_select npe_btn_submit">\n<span class="npe_btn_title">순서 편집 완료</span>\n</button>\n</div>\n</div>\n</div>\n<div class="npe_image_list_content">\n<button type="button" class="npe_image_list_arrow npe_image_list_prev"><span class="npe_blind">이전</span></button>\n<ul class="npe_image_list _list _list-list">\n<li class="npe_image_list_item _template _key-attr _isReady-_setLoadingClass" data-key="#key#" draggable="true">\n<div class="npe_image_list_thumb_wrap">\n<span class="npe_image_list_thumb" href="#">\n<span class="npe_image_list_thumb_img _thumbnailSrc-background"></span>\n</span>\n</div>\n<i class="npe_image_item_checked"></i>\n<button type="button" class="npe_btn npe_btn_image_del">\n<i class="npe_icon_del"></i>\n</button>\n</li>\n</ul>\n<button type="button" class="npe_image_list_arrow npe_image_list_next"><span class="npe_blind">다음</span></button>\n</div>\n<div class="npe_image_list_tooltip _txt_editor_sort_tooltip-html">\n끌어서 이미지 순서를 변경할 수 있어요.\n</div>\n</div>\n</footer>\n<div class="npe_canvas_loading"></div>\n</div>\n<div class="npe_alert_wrap">\n<div class="npe_alert">\n<strong class="npe_alert_title _txt_alert_error-text">\n앗, 에러가 발생했습니다!\n</strong>\n<strong class="npe_alert_title_small">\nJPG, GIF, PNG, BMP 이미지 파일을 올릴 수 있습니다.\n<br>한 장당 10MB, 1회 500MB까지 올리기 가능합니다.\n</strong>\n<p class="npe_alert_description">다시 한 번 시도해 주시겠어요?</p>\n<p class="npe_alert_description_long">\n저작권자의 원 권리자의 허락을 받지 않은 이미지의 수정 및 사용,<br>다른 사람의 권리 침해, 명예를 훼손하는 이미지는 <br><em class="highlight">이용약관 및 관련 법률에 의해 제재를 받으실 수 있습니다.</em>\n</p>\n<div class="npe_alert_uploading_area">\n<div class="npe_alert_uploading_total">\n<div class="npe_alert_progress_bar_wrap">\n<div class="npe_alert_progress_bar _totalPercent-widthPercent"></div>\n</div>\n<span class="npe_alert_text">전체</span>\n<span class="npe_alert_num_area">\n<em class="npe_alert_num _uploadCnt-text">0</em>/<em class="npe_alert_num_total _listCnt-text">0</em>장\n</span>\n</div>\n<div class="npe_alert_uploading_part">\n<div class="npe_alert_progress_bar_wrap">\n<div class="npe_alert_progress_bar"></div>\n</div>\n<span class="npe_alert_text _currentFileName-text">IMG_8333.JPG</span>\n<span class="npe_alert_num_perent"><span class="_percent-text"></span>%</span>\n</div>\n<div class="npe_alert_uploading_error _errorResultMessage-show">\n<i class="npe_icon_info"></i><span class="npe_alert_text _errorResultMessage-text">전체 50장 중 10장을 추가하지 못했습니다.</span>\n<button type="button" class="npe_btn_alert_toggle close _errorLogs-show">\n<span class="npe_btn_alert_title _btnTxt-text">닫기</span>\n</button>\n<div class="npe_alert_detail_area _errorLogs-show">\n<ul class="npe_alert_detail_list _errorLogs _errorLogs-list">\n<li class="npe_alert_detail_item _template">\n<span class="npe_alert_detail_filename _fileName-text">IMG_파일명글자수여기까지..</span>\n<span class="npe_alert_detail_fileext _fileExt-text">JPG</span>\n<span class="npe_alert_detail_text _message-text">최대 500MB까지 사진을 추가할 수 있습니다.</span>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class="npe_alert_btn_area">\n<button type="button" class="npe_btn npe_alert_btn_cancel">\n<em class="npe_btn_title _txt_alert_cancel-text">취소</em>\n</button>\n<button type="button" class="npe_btn npe_alert_btn_ok">\n<em class="npe_btn_title _txt_alert_ok-text">확인</em>\n</button>\n</div>\n<div class="npe_alert_sns_area">\n<button type="button" class="npe_btn_sns npe_btn_facebook" data-sns="facebook">\n<div class="npe_btn_sns_img"></div>\n<span class="npe_btn_sns_title">페이스북</span>\n</button>\n<button type="button" class="npe_btn_sns npe_btn_pholar" data-sns="pholar">\n<div class="npe_btn_sns_img"></div>\n<span class="npe_btn_sns_title">폴라</span>\n</button>\n<button type="button" class="npe_btn_sns npe_btn_instagram" data-sns="instagram">\n<div class="npe_btn_sns_img"></div>\n<span class="npe_btn_sns_title">인스타그램</span>\n</button>\n</div>\n<div class="npe_alert_save_area">\n<button type="button" class="npe_btn_save npe_btn_mycomputer">\n<div class="npe_btn_save_img"></div>\n<span class="npe_btn_save_title">내 컴퓨터</span>\n</button>\n<button type="button" class="npe_btn_save npe_btn_cloud">\n<div class="npe_btn_save_img"></div>\n<span class="npe_btn_save_title">네이버 클라우드</span>\n</button>\n</div>\n<button type="button" class="npe_alert_btn_close"></button>\n<label class="npe_alert_btn_hide">\n<input type="checkbox" class="npe_alert_hide_check npe_blind">\n<i class="npe_check_icon"></i>\n<span class="npe_btn_title">다시 보지 않기</span>\n</label>\n</div>\n</div><!-- [D] 레이어 팝업 시 .npu_dimmed 추가 -->\n<div class="npu_wrap">\n<header class="npu_header">\n<div class="npu_header_attach_area">\n<input class="npe_pc_image_file npe_blind" id="pc_image_file" type="file" accept="image/*" multiple>\n<label class="npu_btn_icon npu_btn_mypc" for="pc_image_file" aria-role="button">\n<span class="npu_btn_title">내 PC</span>\n</label>\n<button type="button" class="npu_btn_icon npu_btn_cloud">\n<span class="npu_btn_title">클라우드</span>\n<i class="npu_icon_new _newCnt-show" style="display:none"></i>\n</button>\n<button type="button" class="npu_btn_icon npu_btn_sns">\n<span class="npu_btn_title">SNS</span>\n<i class="npu_icon_new _newCnt-show" style="display:none"></i>\n</button>\n<button type="button" class="npu_btn npu_btn_prev_version" style="display:none">\n<span class="npu_btn_title">이전 버전으로 올리기</span>\n</button>\n</div>\n<div class="npu_header_btn_area">\n<input type="checkbox" class="npu_photo_gap_check npe_blind" id="photo_gap" checked>\n<label for="photo_gap" class="npu_btn_photo_gap">\n<i class="npu_check_icon"></i>\n<span class="npu_btn_title">사진간격 띄우기</span>\n</label>\n<button type="button" class="npu_btn npu_btn_submit">\n<span class="npu_btn_title">올리기</span>\n</button>\n</div>\n</header>\n<section class="npu_image_list_wrap">\n<div class="npu_image_list_header" style="display:none">\n<div class="npu_image_list_title">\n<button type="button" class="npu_btn npu_btn_check_all" title="전체선택"></button>\n<strong class="npu_image_list_text">이미지 목록</strong>\n<span class="npu_image_list_num"><em class="npu_now_num _now-text">0</em>/<em class="npu_max_num _total-text">0</em>장</span>\n<span class="npu_image_list_size">( <em class="npu_now_num _now-text">0</em>MB / <em class="npu_max_num _total-text">0</em>MB )</span>\n</div>\n<div class="npu_image_list_btn_area">\n<div class="npu_size_select">\n<i class="npu_icon_size"></i>\n<span class="npu_size_text">740px</span>\n<i class="npu_icon_arrow"></i>\n<ul class="npu_size_list _resizePreset _resizePreset-list">\n<li class="npu_size_item _template _item-replace _item-attr" data-resize="#item#">\n<span class="npu_size_item_text _item-replace">#item#px</span>\n</li>\n<li class="npu_size_item" data-resize="original">\n<span class="npu_size_item_text">원본크기</span>\n</li>\n<li class="npu_size_item npu_size_direct _useResizeCustom-keep" data-resize="custom">\n<div class="npu_size_direct_input_wrap">\n<input type="text" class="npu_size_direct_input _txt_direct-attr _txt_direct-val" maxlength="5" data-placeholder="#txt_direct#" />\n<button type="button" class="npu_size_direct_input_confirm"></button>\n</div>\n</li>\n</ul>\n</div>\n<button type="button" class="npu_btn_icon npu_btn_rotation" title="회전"></button>\n<button type="button" class="npu_btn_icon npu_btn_inverse" title="역순으로"></button>\n<button type="button" class="npu_btn_icon npu_btn_edit" title="편집하기"></button>\n<button type="button" class="npu_btn_icon npu_btn_delall" title="삭제"></button>\n</div>\n</div>\n<div class="npu_image_list_area">\n<ul class="npu_image_list _list _list-list npu_cols_6">\n<li class="npu_image_item _template _key-attr _isReady-_setLoadingClass" data-key="#key#" draggable="true">\n<div class="npu_image_list_thumb_wrap">\n<div class="npu_image_list_thumb">\n<div class="npu_image_list_thumb_img _thumbnailSrc-background"></div>\n<button type="button" class="npu_btn npu_btn_image_del">\n<i class="npu_icon_del"></i>\n</button>\n</div>\n<div class="npu_image_list_oncheck"></div>\n</div>\n</li>\n<script class="npu_image_blank_template" type="text/template">\n<li class="npu_image_item _npu_image_item_blank">\n<div class="npu_image_list_thumb_wrap">\n</div>\n</li>\n</script>\n</ul>\n<div class="npu_image_list_tooltip _txt_uploader_sort_tooltip-html">\n끌어서 이미지 순서를 변경할 수 있어요.\n<br>더블클릭하면 이미지를 편집할 수 있어요.\n</div>\n</div>\n<div class="npu_image_upload_area">\n<div class="npu_image_upload">\n<i class="npu_icon_image_upload">\n<span class="back_square"></span>\n<span class="front_square"></span>\n</i>\n<strong class="npu_image_upload_title">더욱 빠르게 사진 올리기</strong>\n<p class="npu_image_upload_description">\n원하는 이미지를 이곳에 끌어다 놓으면 바로 사진을 올릴 수 있어요.\n</p>\n</div>\n</div>\n</section>\n<div class="npu_image_size_area">\n<button type="button" class="npu_btn npu_btn_image_size_up"></button>\n<button type="button" class="npu_btn npu_btn_image_size_down"></button>\n</div>\n<div class="npu_notice_toast">\n<span class="npu_notice_toast_text">토스트 메시지</span>\n</div>\n</div>';
		}, 260: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(76), a = n(o), s = i(79), r = n(s), l = i(70), _ = n(l), d = i(108), u = n(d), p = i(107),
				c = (n(p), i(257)), h = n(c), f = i(122), T = n(f), g = i(124), m = n(g), E = i(114), C = n(E),
				S = i(125), I = n(S), L = i(123), A = n(L), b = i(140), y = n(b), v = i(113), O = n(v);
			m["default"].EDITOR = {
				UNDO_BTN: ".npe_btn_undo",
				REDO_BTN: ".npe_btn_redo",
				RESTORE_BTN: ".npe_btn_original",
				COMPARE_BTN: ".npe_btn_compare",
				COMPARE_AREA: ".npe_compare_area",
				SAVE_BTN: ".npe_btn_download",
				PC_SAVE_BTN: ".npe_btn_mycomputer",
				CLOUDE_SAVE_BTN: ".npe_btn_cloud",
				CANCEL_BTN: ".npe_btn_area .npe_btn_cancel",
				SUBMIT_BTN: ".npe_btn_area .npe_btn_submit",
				FITTOSCREEN_TOGGLE_WRAP: ".npe_view_set",
				FITTOSCREEN_TOGGLE_CHECKBOX: ".npe_view_set_check",
				TOAST_WRAP: ".npe_notice_toast",
				TOAST_MSG: ".npe_notice_toast_text",
				COMPARE_TOOLTIP: ".npe_compare_tooltip"
			};
			var x = function () {
				function t(e) {
					(0, _["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$editorWrapper = (0, O["default"])(m["default"].PHOTOEDITOR_WRAP);
					this.$undoBtn = t.find(m["default"].EDITOR.UNDO_BTN), this.$redoBtn = t.find(m["default"].EDITOR.REDO_BTN), this.$restoreBtn = t.find(m["default"].EDITOR.RESTORE_BTN), this.$compareBtn = t.find(m["default"].EDITOR.COMPARE_BTN), this.$compareArea = t.find(m["default"].EDITOR.COMPARE_AREA), this.$cancelBtn = t.find(m["default"].EDITOR.CANCEL_BTN), this.$submitBtn = t.find(m["default"].EDITOR.SUBMIT_BTN), this.$canvasWrap = t.find(m["default"].CANVAS_WRAP), this.$canvas = this.$canvasWrap.find(m["default"].CANVAS), this.$canvasLoadingUI = t.find(m["default"].CANVAS_LOADING), this.$toastWrap = t.find(m["default"].EDITOR.TOAST_WRAP), this.$toastMsg = this.$toastWrap.find(m["default"].EDITOR.TOAST_MSG), this.$fitToScreenToggleWrap = t.find(m["default"].EDITOR.FITTOSCREEN_TOGGLE_WRAP), this.$fitToScreenToggleCheckbox = t.find(m["default"].EDITOR.FITTOSCREEN_TOGGLE_CHECKBOX), this.$compareTooltip = t.find(m["default"].EDITOR.COMPARE_TOOLTIP), this.$saveBtn = t.find(m["default"].EDITOR.SAVE_BTN), this.$pcImageSaveBtn = (0, O["default"])(m["default"].EDITOR.PC_SAVE_BTN), this.$cloudImageSaveBtn = (0, O["default"])(m["default"].EDITOR.CLOUDE_SAVE_BTN), this._modal = new A["default"](this._controller._storage)
				}, t.prototype.activate = function () {
					this.$undoBtn.on("click", this._onClickUndoBtn.bind(this)), this.$redoBtn.on("click", this._onClickRedoBtn.bind(this)), this.$restoreBtn.on("click", this._onClickRestoreBtn.bind(this)), this.$compareBtn.on("mousedown", this._onMousedownCompareBtn.bind(this)), this.$cancelBtn.on("click", this._onClickCancelBtn.bind(this)), this.$submitBtn.on("click", this._onClickSubmitBtn.bind(this)), this.$fitToScreenToggleCheckbox.on("click", this._onClickFitToScreenToggleCheckbox.bind(this)), this.$saveBtn.on("click", this._onClickSaveBtn.bind(this)), this.$pcImageSaveBtn.on("click", this._onChangePcImageSaveBtn.bind(this)), this.$cloudImageSaveBtn.on("click", this._onChangeCloudImageSaveBtn.bind(this)), (0, O["default"])(window).on("keydown.peUndoKey", this._onUndoKey.bind(this)), (0, O["default"])(window).on("click.peClick", this._onClickWindow.bind(this)), this._controller.on("changeTab", this._onChangeTab.bind(this)), this._controller.on("changeViewport", this._onChangeViewport.bind(this)), this._controller.on("showToastMessage", this._onShowToastMessage.bind(this)), this._controller.on("hideToastMessage", this._onHideToastMessage.bind(this)), this._controller.on("checkModified", this._onCheckModified.bind(this)), this._controller.on("changeCurrentPhoto", this._onChangeCurrentPhoto.bind(this)), this._controller.on("checkFitToViewport", this._onCheckFitToViewport.bind(this)), this._controller.on("setHold", this._onHold.bind(this)), this._controller.on("unsetHold", this._onUnsetHold.bind(this)), this._controller.on("changeHistory", this._onChangeHistory.bind(this)), this._controller.on("canvasReady", this._onCanvasReady.bind(this))
				}, t.prototype.deactivate = function () {
					this.$undoBtn.off("click"), this.$redoBtn.off("click"), this.$restoreBtn.off("click"), this.$compareBtn.off(), this.$cancelBtn.off("click"), this.$submitBtn.off("click"), this.$fitToScreenToggleCheckbox.off("click"), this.$saveBtn.off("click"), this.$pcImageSaveBtn.off("click"), this.$cloudImageSaveBtn.off("click"), (0, O["default"])(window).off("keydown.peUndoKey"), (0, O["default"])(window).off("click.peClick")
				}, t.prototype._render = function (t, e) {
					h["default"].render(t, e)
				}, t.prototype._onChangeTab = function (t) {
					t === C["default"].TAB_LIST.EDIT ? this.$editorWrapper.addClass(m["default"].ACTIVE_TOGGLE_CLASS) : (this.$editorWrapper.removeClass(m["default"].ACTIVE_TOGGLE_CLASS), this.$compareArea.removeClass(m["default"].ACTIVE_TOGGLE_CLASS), this.$fitToScreenToggleCheckbox.removeAttr("checked"))
				}, t.prototype._onHold = function () {
					this.$submitBtn.addClass(m["default"].DISABLE_TOGGLE_CLASS)
				}, t.prototype._onUnsetHold = function () {
					this.$submitBtn.removeClass(m["default"].DISABLE_TOGGLE_CLASS)
				}, t.prototype._onChangeHistory = function (t) {
					this._btnToggleDisable(this.$undoBtn, !t.undoable), this._btnToggleDisable(this.$redoBtn, !t.redoable)
				}, t.prototype._onCanvasReady = function () {
					this._checkEditable()
				}, t.prototype._checkEditable = function () {
					var t = this._controller.getCurrentPhoto(), e = void 0;
					t.animationGIF ? e = T["default"].getMessage("txt_notice_animation_gif") : t.vr360 && (e = T["default"].getMessage("txt_notice_vr360")), e ? this._controller.showToastMessage(e) : this._controller.hideToastMessage()
				}, t.prototype._onClickWindow = function (t) {
					var e = (0, O["default"])(t.target);
					this._controller._latelyMouseDownEvent = t, e.is("button, a") && e.blur()
				}, t.prototype._btnToggleDisable = function (t, e) {
					e = Boolean(e), t.toggleClass(m["default"].DISABLE_TOGGLE_CLASS, e), t.prop("disabled", e)
				}, t.prototype._onCheckModified = function (t) {
					var e = this._controller.getCurrentPhoto();
					this._btnToggleDisable(this.$restoreBtn, !t), this._btnToggleDisable(this.$saveBtn, !t && e.width === this._controller._editor.resizedWidth), this.$compareArea.toggleClass(m["default"].ACTIVE_TOGGLE_CLASS, this._controller.isBitmapModified())
				}, t.prototype._onClickUndoBtn = function (t) {
					this._controller.isHolded() || this.$undoBtn.hasClass(m["default"].DISABLE_TOGGLE_CLASS) || (this._controller.undo(), I["default"].log("PTE_UNDO", t.currentTarget, t))
				}, t.prototype._onClickRedoBtn = function (t) {
					this._controller.isHolded() || this.$redoBtn.hasClass(m["default"].DISABLE_TOGGLE_CLASS) || (this._controller.redo(), I["default"].log("PTE_REDO", t.currentTarget, t))
				}, t.prototype._onClickRestoreBtn = function (t) {
					var e = this.$restoreBtn;
					this._controller.isHolded() || e.hasClass(m["default"].DISABLE_TOGGLE_CLASS) || (this._controller.restoreEditor(), I["default"].log("PTE_ORIGINAL", t.currentTarget, t))
				}, t.prototype._onMousedownCompareBtn = function (t) {
					var e = this, i = this.$compareBtn;
					this._controller.isHolded() || i.hasClass(m["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setEditorShowOriginal(!0), (0, O["default"])(window).one("mouseup", function () {
						e._controller.setEditorShowOriginal(!1)
					}), I["default"].log("PTE_COMPARE", t.currentTarget, t))
				}, t.prototype._onClickCancelBtn = function (t) {
					var e = this.$cancelBtn;
					e.hasClass(m["default"].DISABLE_TOGGLE_CLASS) || (this._controller.cancelEditing(), I["default"].log("PTE_CANCEL", t.currentTarget, t), t.preventDefault())
				}, t.prototype._onClickSubmitBtn = function (t) {
					var e = this.$submitBtn;
					e.hasClass(m["default"].DISABLE_TOGGLE_CLASS) || (this._controller.finishEditing(), I["default"].log("PTE_OK", t.currentTarget, t), t.preventDefault())
				}, t.prototype._onUndoKey = function (t) {
					var e = (t.target, this._controller.currentControl, t.keyCode), i = t.shiftKey,
						n = t.ctrlKey && !t.metaKey || !t.ctrlKey && t.metaKey, o = !t.shiftKey && n;
					this._controller._state.selectedTab === C["default"].TAB_LIST.EDIT && (o && e === C["default"].KEYCODES.Z && (this._controller.undo(), t.preventDefault()), (o && e === C["default"].KEYCODES.Y || i && n && e === C["default"].KEYCODES.Z) && (this._controller.redo(), t.preventDefault()))
				}, t.prototype._onChangeViewport = function (t) {
					this.$canvasLoadingUI.css("margin-bottom", t.bottom + "px")
				}, t.prototype._onShowToastMessage = function (t) {
					"compare" === t.type ? this._showCompareToastMessage(t) : this._showCommonToastMessage(t)
				}, t.prototype._showCompareToastMessage = function (t) {
					var e = this.$compareTooltip;
					e.timer && clearTimeout(e.timer), e.addClass(m["default"].ACTIVE_TOGGLE_CLASS), e.timer = setTimeout(function () {
						e.removeClass(m["default"].ACTIVE_TOGGLE_CLASS)
					}, 5e3), (0, O["default"])(window).off("mousedown.editorTooltip").one("mousedown.editorTooltip", function () {
						e.hide()
					})
				}, t.prototype._showCommonToastMessage = function (t) {
					var e = this.$toastWrap, i = this.$toastMsg, n = this._controller._getViewportCalculcated();
					t.type;
					e.timer && clearTimeout(e.timer), i.html(t.message), e.css({"margin-top": (n.top + n.bottom) / 2 * -1}).stop(!0, !0).show(), e.timer = setTimeout(function () {
						e.hide()
					}, 5e3), (0, O["default"])(window).off("mousedown.editorToastMessage").one("mousedown.editorToastMessage", function () {
						e.hide()
					})
				}, t.prototype._onHideToastMessage = function (t) {
					var e = this.$toastWrap, i = this.$compareTooltip;
					e.timer && clearTimeout(e.timer), i.timer && clearTimeout(i.timer), e.stop(!0, !0).hide(), i.removeClass(m["default"].ACTIVE_TOGGLE_CLASS), (0, O["default"])(window).off("mousedown.editorTooltip mousedown.editorToastMessage")
				}, t.prototype._onChangeCurrentPhoto = function () {
					this._controller.checkFitToViewport()
				}, t.prototype._onCheckFitToViewport = function (t) {
					var e = this.$fitToScreenToggleWrap, i = this.$fitToScreenToggleCheckbox,
						n = (this._controller.currentControl, !t.fitToScreenAvailable), o = t.screenFitEnable;
					e.toggleClass(m["default"].DISABLE_TOGGLE_CLASS, n), i.prop("disabled", n).prop("checked", o).trigger("change")
				}, t.prototype._onClickFitToScreenToggleCheckbox = function (t) {
					var e = t.currentTarget, i = (0, O["default"])(e), n = i.is(":checked");
					return u["default"].isHold(e) || i.hasClass(m["default"].DISABLE_TOGGLE_CLASS) ? void this._controller.checkFitToViewport() : (this._controller.setEditorFitToViewport(n), void I["default"].log("PTE_FITSCREEN", t.currentTarget, t))
				}, t.prototype._onClickSaveBtn = function (t) {
					this.$saveBtn.hasClass(m["default"].DISABLE_TOGGLE_CLASS) || (this._modal.saveImagePopup({title: T["default"].getMessage("txt_notice_image_save_title")}), I["default"].log("PTE_SAVE", t.currentTarget, t))
				}, t.prototype._onChangePcImageSaveBtn = function (t) {
					this._controller.downloadCurrentPhoto(), this._modal.close(), I["default"].log("PTE_SAVE_LOCAL", t.currentTarget, t)
				}, t.prototype._onChangeCloudImageSaveBtn = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, r["default"])(a["default"].mark(function i(t) {
						var e;
						return a["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									return i.next = 2, this._controller._validationGrafolioStickers(!0);
								case 2:
									if (i.sent) {
										i.next = 4;
										break
									}
									return i.abrupt("return");
								case 4:
									return i.next = 6, this._controller.asyncGetCurrentPhotoSnapshotData();
								case 6:
									e = i.sent, y["default"].openNdriveSavePopup(this._controller.options.setting.serviceName, e), this._modal.close(), I["default"].log("PTE_SAVE_CLOUD", t.currentTarget, t);
								case 10:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), t
			}();
			e["default"] = x
		}, 261: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(241), a = n(o), s = i(76), r = n(s), l = i(79), _ = n(l), d = i(70), u = n(d), p = i(108),
				c = n(p), h = i(257), f = n(h), T = i(124), g = n(T), m = i(114), E = n(m), C = i(125), S = n(C),
				I = i(122), L = n(I), A = i(113), b = n(A);
			i(262), g["default"].EDITOR_LIST = {
				LIST_WRAP: ".npe_image_list_wrap",
				LIST_AREA: ".npe_image_list_content",
				LIST: ".npe_image_list",
				LIST_ITEM: ".npe_image_list_item",
				LIST_ITEM_THUMB_WRAP: ".npe_image_list_thumb_wrap",
				LIST_ITEM_IMG: ".npe_image_list_thumb_img",
				LIST_ITEM_DEL_BTN: ".npe_btn_image_del",
				LIST_NUMS: ".list_num",
				LIST_HEADER: ".npe_image_list_header",
				LIST_OPEN_CLOSE_BTN: ".list_open_close",
				LIST_OPEN_BTN: ".list_open",
				LIST_CLOSE_BTN: ".list_close",
				LIST_PREV_BTN: ".npe_image_list_prev",
				LIST_NEXT_BTN: ".npe_image_list_next",
				LIST_TOOLTIP: ".npe_image_list_tooltip",
				LIST_HEADER_BAR: ".npe_image_list_header_bar",
				LIST_SORT_CANCEL_BTN: ".npe_order_header .npe_btn_cancel",
				LIST_SORT_SUBMIT_BTN: ".npe_order_header .npe_btn_submit",
				LIST_SELECT_ALL_BTN: ".npe_select_header .npe_btn_select_all",
				LIST_SELECT_CANCEL_BTN: ".npe_select_header .npe_btn_cancel",
				LIST_SELECT_SUBMIT_BTN: ".npe_select_header .npe_btn_submit",
				LIST_SELECT_NUM_WRAP: ".npe_select_header .list_num, .npe_order_header .list_num",
				LIST_SELECT_NUM: ".npe_select_header .now_num, .npe_order_header .now_num",
				SELECT_MODE_WRAP_TOGGLE_CLASS: "on_image_select"
			};
			var y = function () {
				function t(e) {
					(0, u["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					var t = this;
					this._source = null, this._showTooltip = !0, this._mode = E["default"].LIST_MODE.EDITOR_LIST;
					var e = this.$editorWrapper = (0, b["default"])(g["default"].PHOTOEDITOR_WRAP);
					this.$canvas = e.find(g["default"].CANVAS_WRAP).find(g["default"].CANVAS), this.$listHeader = e.find(g["default"].EDITOR_LIST.LIST_HEADER), this.$listWrap = e.find(g["default"].EDITOR_LIST.LIST_WRAP), this.$listArea = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_AREA), this.$list = this.$listWrap.find(g["default"].EDITOR_LIST.LIST), this.$listPrevBtn = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_PREV_BTN), this.$listNextBtn = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_NEXT_BTN), this.$listTooltip = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_TOOLTIP), this.$listHeaderBar = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_HEADER_BAR), this.$controlDetailWrap = e.find(g["default"].CONTROL_DETAIL_WRAP), this.$controlWrap = e.find(g["default"].CONTROL_WRAP), this.$listSortCancelBtn = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_SORT_CANCEL_BTN), this.$listSortSubmitBtn = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_SORT_SUBMIT_BTN), this.$listSelectAllBtn = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_SELECT_ALL_BTN), this.$listSelectCancelBtn = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_SELECT_CANCEL_BTN), this.$listSelectSubmitBtn = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_SELECT_SUBMIT_BTN), this.$listSelectNumWrap = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_SELECT_NUM_WRAP), this.$listSelectNum = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_SELECT_NUM), this.$list.selectonic({
						multi: !0,
						keyboard: !1,
						focusBlur: !0,
						selectionBlur: !1,
						selectedClass: g["default"].ACTIVE_TOGGLE_CLASS,
						mouseMode: "toggle",
						before: function (t) {
							return function (e) {
								if (!t._isSelectMode() || e && (0, b["default"])(e.target).closest("." + g["default"].DISABLE_TOGGLE_CLASS).length) return this.selectonic("cancel"), !1
							}
						}(this),
						select: function () {
							t._renderMultiSelectImageNum(), t._renderBtnDisable()
						},
						unselect: function () {
							t._renderMultiSelectImageNum(), t._renderBtnDisable()
						}
					})
				}, t.prototype.activate = function () {
					this.$listArea.on("click.editorList", this._onClickImageListArea.bind(this)), this.$list.on("click.editorList", g["default"].EDITOR_LIST.LIST_ITEM, this._onClickImageListItem.bind(this)), this.$list.on("mouseenter.editorList", g["default"].EDITOR_LIST.LIST_ITEM, this._onMouseenterImageListItem.bind(this)), this.$list.on("mouseleave.editorList", g["default"].EDITOR_LIST.LIST_ITEM, this._onMouseleaveImageListItem.bind(this)), this.$list.on("click.editorList", g["default"].EDITOR_LIST.LIST_ITEM_DEL_BTN, this._onClickImageListItemDelBtn.bind(this)), this.$list.on("scroll.editorList", this._checkEnableListScrollBtn.bind(this)), this.$listHeader.on("click.editorList", this._onClickListHeader.bind(this)), this.$listPrevBtn.on("click.editorList", this._onClickListPrevBtn.bind(this)), this.$listNextBtn.on("click.editorList", this._onClickListNextBtn.bind(this)), this.$listSortCancelBtn.on("click.editorList", this._onClickSortCancelBtn.bind(this)), this.$listSortSubmitBtn.on("click.editorList", this._onClickSortSubmitBtn.bind(this)), this.$listSelectAllBtn.on("click.editorList", this._onClickSelectAllBtn.bind(this)), this.$listSelectCancelBtn.on("click.editorList", this._onClickSelectCancelBtn.bind(this)), this.$listSelectSubmitBtn.on("click.editorList", this._onClickSelectSubmitBtn.bind(this)), this.$editorWrapper.on("click.editorList", this._onClickDimmedArea.bind(this)), this.$list.on("dragstart.editorList", "li", this._onListDragStart.bind(this)), this.$list.on("dragenter.editorList", "li", this._onListDragEnter.bind(this)), this.$list.on("dragend.editorList", "li", this._onListDragEnd.bind(this)), this.$listWrap.on("dragover.editorList", this._onListDragOver.bind(this)), this.$list.on("drop.editorList", this._onListDrop.bind(this)), (0, b["default"])(window).on("resize.editorList", this._onResizeWindow.bind(this)), (0, b["default"])(window).on("keydown.editorList", this._onKeydown.bind(this)), this._controller.on("changeTabToEdit", this._onChangeTabToEdit.bind(this)), this._controller.on("canvasReady", this._onCanvasReady.bind(this)), this._controller.on("updatePhotos", this._onUpdatePhotos.bind(this)), this._controller.on("beforeChangeCurrentPhoto", this._beforeChangeCurrentPhoto.bind(this)), this._controller.on("changeCurrentPhoto", this._onChangeCurrentPhoto.bind(this)), this._controller.on("changeListMode", this._onChangeListMode.bind(this)), this._controller.on("deletePhoto", this._onDeletePhoto.bind(this)), this._controller.on("setBatchApplyToThumbnail", this._onSetBatchApplyToThumbnail.bind(this))
				}, t.prototype.deactivate = function () {
					this.$listWrap.off(".editorList"), this.$listArea.off(".editorList"), this.$list.off(".editorList"), this.$listHeader.off(".editorList"), this.$listPrevBtn.off(".editorList"), this.$listNextBtn.off(".editorList"), this.$listSortCancelBtn.off(".editorList"), this.$listSortSubmitBtn.off(".editorList"), this.$listSelectAllBtn.off(".editorList"), this.$listSelectCancelBtn.off(".editorList"), this.$listSelectSubmitBtn.off(".editorList"), this.$editorWrapper.off(".editorList"), (0, b["default"])(window).off(".editorList")
				}, t.prototype._render = function (t, e) {
					f["default"].render(t, e)
				}, t.prototype._renderBtnDisable = function () {
					var t = (this.$listSelectAllBtn, this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).filter(":not(." + g["default"].DISABLE_TOGGLE_CLASS + ")")),
						e = t.filter("." + g["default"].ACTIVE_TOGGLE_CLASS);
					this.$listSelectAllBtn.toggleClass(g["default"].DISABLE_TOGGLE_CLASS, !t.length.length), this.$listSelectAllBtn.toggleClass(g["default"].ACTIVE_TOGGLE_CLASS, !(!t.length || t.length !== e.length)), void 0
				}, t.prototype._onResizeWindow = function () {
					this._checkEnableListScrollBtn(), this._resizeListHeight()
				}, t.prototype._onChangeTabToEdit = function () {
					this._openList(), this._renderImageList(), this._prevControl = null
				}, t.prototype._onCanvasReady = function () {
					var t = this._controller.getCurrentPhoto();
					t.animationGIF ? this._controller.changeControl() : this._prevControl && this._controller.changeControl(this._prevControl), this._setListMode(), this._resizeControlDetailWrap(), this._renderCurrentImageThumbnail(), this._onCanvasReadyForAnimationEnd()
				}, t.prototype._openList = function () {
					this.$listWrap.addClass("open"), this._isSelectMode() || this._resizeControlDetailWrap(), this._showListTooltip()
				}, t.prototype._closeList = function () {
					this.$listWrap.removeClass("open"), this._resizeControlDetailWrap()
				}, t.prototype._toggleList = function (t) {
					t ? this._openList() : this._closeList()
				}, t.prototype._onListDragStart = function (t) {
					if (!this._isSelectMode()) {
						window.getSelection().removeAllRanges();
						var e = c["default"].getIEVersion(), i = t.originalEvent.dataTransfer;
						this._source = t.currentTarget, i.effectAllowed = "move", e || i.setData("text/plain", null)
					}
				}, t.prototype._resizeControlDetailWrap = function () {
					this.$controlDetailWrap.css({"padding-bottom": this.$listWrap.outerHeight()}), this.$controlWrap.css({"margin-bottom": this.$listWrap.outerHeight()}), this._controller.resizeViewport(!0)
				}, t.prototype._onListDragEnter = function (t) {
					this._source && (t.preventDefault(), (0, b["default"])(this._source).addClass(g["default"].EDITOR_LIST.LIST_DRAG_ITEM_CLASS))
				}, t.prototype._onListDragEnd = function (t) {
					this._source && ((0, b["default"])(this._source).removeClass(g["default"].EDITOR_LIST.LIST_DRAG_ITEM_CLASS), this._source = null), this._hideListDragBar()
				}, t.prototype._onListDragOver = function (t) {
					if (this._source) {
						t.preventDefault();
						var e = this._source, i = (0, b["default"])(t.target).closest("li[draggable]").get(0);
						if (t.originalEvent.dataTransfer.dropEffect = "move", i) {
							var n = (0, b["default"])(i), o = this._isBefore(t, i) ? "left_bar" : "right_bar";
							n.hasClass(o) || this._hideListDragBar(), n.addClass(o)
						} else this._hideListDragBar();
						if (this._isSortMode() && !this.$listArea.is(":animated")) {
							var a = t.clientY - this.$listArea.offset().top, s = this.$listArea.outerHeight(),
								r = (0, b["default"])(e).outerHeight(!0);
							a < r / 2 && this.$listArea.stop().animate({scrollTop: "-=" + r + "px"}), a > s - r / 2 && this.$listArea.stop().animate({scrollTop: "+=" + r + "px"})
						}
						if (this._isListMode() && !this.$list.is(":animated")) {
							var l = t.clientX - this.$list.offset().left, _ = this.$list.outerWidth(),
								d = (0, b["default"])(e).outerWidth(!0);
							l < d / 2 && this.$list.stop().animate({scrollLeft: "-=" + d + "px"}), l > _ - d / 2 && this.$list.stop().animate({scrollLeft: "+=" + d + "px"})
						}
					}
				}, t.prototype._hideListDragBar = function () {
					this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).removeClass("left_bar").removeClass("right_bar")
				}, t.prototype._onListDrop = function (t) {
					this._source && (t.preventDefault && t.preventDefault(), t.stopPropagation && t.stopPropagation(), this._multiModeDrop(t), this._source = null)
				}, t.prototype._multiModeDrop = function (t) {
					var e = this._source, i = t.target, n = (0, b["default"])(i).closest("li[draggable]").get(0),
						o = this._isListMode() ? (0, b["default"])(e) : this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).filter("." + g["default"].ACTIVE_TOGGLE_CLASS);
					if (o.length && n) {
						if (this._startSortAnimation(), this._isBefore(t, n) || (n = n.nextSibling), !this._isListMode() && (0, b["default"])(n).hasClass(g["default"].ACTIVE_TOGGLE_CLASS)) {
							var a = (0, b["default"])(n).nextAll(":not(." + g["default"].ACTIVE_TOGGLE_CLASS + ")").get(0);
							a || (a = (0, b["default"])(n).nextAll().last().get(0), a = a ? a.nextSibling : null), n = a
						}
						n ? (0, b["default"])(n).before(o) : this.$list.append(o), (0, b["default"])(this._source).removeClass(g["default"].EDITOR_LIST.LIST_DRAG_ITEM_CLASS), this._resetPhotosIndex(), this._renderImageNum(this._controller.getCurrentPhoto()), this._updateSortAnimation(), S["default"].log("PTE_L_DROP", i, t)
					}
				}, t.prototype._startSortAnimation = function () {
					var t = (this.$list, this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM)),
						e = (0, b["default"])(t.get().reverse());
					e.each(function (t, e) {
						(0, b["default"])(e).data("position", (0, b["default"])(e).position())
					})
				}, t.prototype._updateSortAnimation = function () {
					var t = this, e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM);
					e.each(function (i, n) {
						var o = (0, b["default"])(n), a = o.data("position"), s = o.position();
						a.left === s.left && a.top === s.top || (o.css({
							"-webkit-transform": "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)",
							"-moz-transform": "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)",
							"-ms-transform": "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)",
							"-o-transform": "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)",
							transform: "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)"
						}), o.addClass("moving"), o.one("webkitAnimationEnd oanimationend msAnimationEnd animationend", function (i) {
							(0, b["default"])(i.target).css({
								"-webkit-transform": "translate(0,0)",
								"-moz-transform": "translate(0,0)",
								"-ms-transform": "translate(0,0)",
								"-o-transform": "translate(0,0)",
								transform: "translate(0,0)"
							}), (0, b["default"])(i.target).removeClass("moving"), e.filter(":animated").length || t._endSortAnimation()
						}))
					})
				}, t.prototype._endSortAnimation = function () {
					this._isSortMode() && this._deselectAllPhotos()
				}, t.prototype._resetPhotosIndex = function () {
					var t = this, e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM);
					e.each(function (e, i) {
						var n = (0, b["default"])(i).data("key"), o = t._controller.getPhotoByKey(n);
						o.sortIndex = e
					})
				}, t.prototype._isBefore = function (t, e) {
					var i = (0, b["default"])(e), n = i.offset().left, o = i.outerWidth(), a = t.clientX;
					return a < n + o / 2
				}, t.prototype._renderImageList = function () {
					var t = this._controller.getPhotosArray(), e = this.$list;
					this._render(e, {list: t})
				}, t.prototype._renderImageListAdded = function (t) {
					var e = this.$list;
					e.addClass("_topdown"), this._render(e, {list: t}), e.removeClass("_topdown")
				}, t.prototype._renderImageListUpdated = function (t) {
					var e = this;
					t.forEach(function (t, i) {
						e._renderImage(t)
					})
				}, t.prototype._renderImage = function (t) {
					if (!this._controller.isUploading()) {
						var e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM),
							i = e.filter("*[data-key='" + t.key + "']");
						e.removeClass(g["default"].ACTIVE_TOGGLE_CLASS), i.addClass(g["default"].ACTIVE_TOGGLE_CLASS), this._render(i, t)
					}
				}, t.prototype._renderImageNum = function (t) {
					t = t || this._controller.getCurrentPhoto();
					var e = this.$listWrap.find(g["default"].EDITOR_LIST.LIST_NUMS),
						i = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM),
						n = t ? i.filter("*[data-key='" + t.key + "']") : null, o = i.index(n) + 1,
						a = this._controller.photos.length;
					this.$listHeaderBar.hide(), this._render(e, {now: o, total: a})
				}, t.prototype._onUpdatePhotos = function (t) {
					this._renderImageListAdded(t.photosAdded), this._renderImageListUpdated(t.photosUpdated), this._renderImageNum(this._controller.getCurrentPhoto()), this._checkEnableListScrollBtn(), this._showListTooltip()
				}, t.prototype._beforeChangeCurrentPhoto = function (t) {
					var e = t.prevPhoto;
					this._renderImageThumbnail(e)
				}, t.prototype._renderCurrentImageThumbnail = function () {
					var t = this._controller.getCurrentPhoto();
					if (t) {
						var e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM),
							i = e.filter("*[data-key='" + t.key + "']"), n = t.cropWidth || t.width,
							o = t.cropHeight || t.height,
							a = c["default"].getThumbnailImageSizeForCover(n, o, 400, 400), s = a[0], r = a[1];
						this._render(i, {thumbnailSrc: this._controller.getThumbnailDataURL(s, r)})
					}
				}, t.prototype._renderImageThumbnail = function (t) {
					if (t) {
						var e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM),
							i = e.filter("*[data-key='" + t.key + "']");
						this._render(i, {thumbnailSrc: t.thumbnailSrc})
					}
				}, t.prototype._onChangeCurrentPhoto = function () {
					var t = this._controller.getCurrentPhoto();
					this._renderImageNum(t), this._renderImage(t), this._adjustListScroll(t)
				}, t.prototype._onClickListHeader = function (t) {
					t.preventDefault();
					var e = (0, b["default"])(t.target), i = this.$listWrap.hasClass("open");
					!e.closest("button").length && this._isListMode() && (i ? S["default"].log("PTE_L_CLOSE", t.currentTarget, t) : S["default"].log("PTE_L_OPEN", t.currentTarget, t), this._toggleList(!i))
				}, t.prototype._showListTooltip = function () {
					var t = this;
					this._showTooltip && (this._controller.photos.length < 2 || (this._showTooltip = !1, this.$listTooltip.addClass(g["default"].ACTIVE_TOGGLE_CLASS), this.$editorWrapper.one("mousedown", function () {
						t.$listTooltip.removeClass(g["default"].ACTIVE_TOGGLE_CLASS)
					})))
				}, t.prototype._onClickListPrevBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, b["default"])(e);
					i.hasClass(g["default"].DISABLE_TOGGLE_CLASS) || (this._moveListScroll(-1), S["default"].log("PTE_L_PREV", e, t))
				}, t.prototype._onClickListNextBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, b["default"])(e);
					i.hasClass(g["default"].DISABLE_TOGGLE_CLASS) || (this._moveListScroll(1), S["default"].log("PTE_L_NEXT", e, t))
				}, t.prototype._moveListScroll = function (t) {
					var e = this.$list, i = t > 0 ? "+=" : "-=", n = e.innerWidth(), o = e.scrollLeft(),
						a = e.children(g["default"].EDITOR_LIST.LIST_ITEM).first().outerWidth(), s = void 0;
					t > 0 && (s = Math.floor((o + n) / a) * a - o), t < 0 && (s = n - (Math.ceil(o / a) * a - o)), s && this.$list.stop(!0, !0).animate({scrollLeft: i + s}, {
						duration: 150,
						specialEasing: {width: "linear", height: "easeOut"}
					})
				}, t.prototype._searchFirstVisibleItem = function (t, e) {
					for (var i = null, n = null, o = 0; o < 10 && (i = document.elementFromPoint(t + 10 * o, e), !i || (n = (0, b["default"])(i).closest(g["default"].EDITOR_LIST.LIST_ITEM), !n.length)); o++) ;
					return n
				}, t.prototype._searchLastVisibleItem = function (t, e) {
					for (var i = null, n = null, o = 0; o < 10 && (i = document.elementFromPoint(t - 10 * o, e), !i || (n = (0, b["default"])(i).closest(g["default"].EDITOR_LIST.LIST_ITEM), !n.length)); o++) ;
					return n
				}, t.prototype._onClickSortCancelBtn = function (t) {
					this._restoreSortState(), this._setListMode(), this._resizeControlDetailWrap()
				}, t.prototype._onClickSortSubmitBtn = function (t) {
					var e = this._controller.getCurrentPhoto();
					this._setListMode(), this._selectPhoto(e.key), S["default"].log("PTE_L_SAVE", t.currentTarget, t)
				}, t.prototype._onClickSelectAllBtn = function (t) {
					var e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).filter(":not(." + g["default"].DISABLE_TOGGLE_CLASS + ")"),
						i = e.filter("." + g["default"].ACTIVE_TOGGLE_CLASS);
					e.length === i.length ? this.$list.selectonic("unselect", e) : this.$list.selectonic("select", e), this._renderMultiSelectImageNum()
				}, t.prototype._onClickSelectCancelBtn = function (t) {
					this._restoreSortState(), this._setListMode(), this._resizeControlDetailWrap(), this._controller.callbackMultiSelectPhotos()
				}, t.prototype._onClickSelectSubmitBtn = function (t) {
					var e = this,
						i = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).filter("." + g["default"].ACTIVE_TOGGLE_CLASS),
						n = [];
					i.length && (i.each(function () {
						var t = (0, b["default"])(this), i = t.data("key"), o = e._controller.getPhotoByKey(i);
						n.push(o)
					}), this._setListMode(), this._resizeControlDetailWrap(), this._controller.callbackMultiSelectPhotos(n), this._restoreSortState(), S["default"].log("PTE_L_APPLY", t.currentTarget, t))
				}, t.prototype._onClickImageListArea = function (t) {
					t.preventDefault();
					(0, b["default"])(t.target).closest(g["default"].EDITOR_LIST.LIST_ITEM).length || this._isSortMode() && this._deselectAllPhotos()
				}, t.prototype._onClickImageListItem = function (t) {
					var e = this;
					t.preventDefault();
					var i = t.currentTarget, n = (0, b["default"])(i), o = n.data("key");
					this._isListMode() && (n.hasClass(g["default"].ACTIVE_TOGGLE_CLASS) || n.hasClass(g["default"].DISABLE_TOGGLE_CLASS) || this._controller._asyncConfirmCropSave("txt_confirm_crop_tit").then(function () {
						return e._exitCropControlMode()
					}).then(function () {
						return e._selectPhoto(o)
					}))
				}, t.prototype._exitCropControlMode = function () {
					this._controller.currentControl === E["default"].CONTROLS.CROP && (this._controller.changeControl(), this._controller.resizeViewport(!0))
				}, t.prototype._selectPhoto = function (t) {
					var e = this._controller.isHolded(), i = this._controller.getCurrentPhoto();
					e || (i || i.key !== t) && (this.$canvas.removeClass(g["default"].ACTIVE_TOGGLE_CLASS), this.$canvas.hide(), this._prevControl = this._controller.currentControl, this._controller.selectPhoto(t))
				}, t.prototype._onCanvasReadyForAnimationEnd = function (t) {
					var e = this;
					this.$canvas.is(":visible") || (this.$canvas.one("webkitAnimationEnd oanimationend msAnimationEnd animationend", function (t) {
						(0, b["default"])(t.target).removeClass(g["default"].ACTIVE_TOGGLE_CLASS)
					}), setTimeout(function () {
						e.$canvas.show(), e.$canvas.addClass(g["default"].ACTIVE_TOGGLE_CLASS)
					}, 100))
				}, t.prototype._onMouseenterImageListItem = function (t) {
					var e = (0, b["default"])(t.currentTarget);
					this._isListMode() && e.addClass(g["default"].HOVER_TOGGLE_CLASS)
				}, t.prototype._onMouseleaveImageListItem = function (t) {
					var e = (0, b["default"])(t.currentTarget);
					e.removeClass(g["default"].HOVER_TOGGLE_CLASS)
				}, t.prototype._onClickImageListItemDelBtn = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, _["default"])(r["default"].mark(function i(t) {
						var e, n, o, a, s, l, _, d, u, p = this;
						return r["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (t.preventDefault(), t.stopPropagation(), e = this._controller.isHolded(), n = this._controller.getCurrentPhoto(), o = t.currentTarget, a = (0, b["default"])(o).closest(g["default"].EDITOR_LIST.LIST_ITEM), s = a.data("key"), l = (0, b["default"])(a.next().get(0) || a.prev().get(0)), !e) {
										i.next = 10;
										break
									}
									return i.abrupt("return");
								case 10:
									return i.next = 12, this._controller.deletePhotoByKey(s);
								case 12:
									if (i.sent) {
										i.next = 14;
										break
									}
									return i.abrupt("return");
								case 14:
									if (n.key !== s) {
										i.next = 26;
										break
									}
									if (_ = this._controller.getPhotosArray(), !_.length) {
										i.next = 23;
										break
									}
									d = l.data("key"), u = this._controller.getPhotoByKey(d), this._exitCropControlMode(), this._selectPhoto(d), i.next = 26;
									break;
								case 23:
									return this._closeList(), this._controller.alert(L["default"].getMessage("txt_notice_no_images_editable"), L["default"].getMessage("txt_notice_edit_mode_finish"), function () {
										p._controller.isOnlyEditingMode ? p._controller.close() : p._controller.finishEditing()
									}), i.abrupt("return");
								case 26:
									n = this._controller.getCurrentPhoto(), this._renderImageNum(n), this._adjustListScroll(n), this._checkEnableListScrollBtn();
								case 30:
								case"end":
									return i.stop()
							}
						}, i, this)
					}));
					return t
				}(), t.prototype._checkEnableListScrollBtn = function () {
					var t = this.$list, e = this.$listPrevBtn, i = this.$listNextBtn;
					t.scrollLeft() ? e.removeClass(g["default"].DISABLE_TOGGLE_CLASS) : e.addClass(g["default"].DISABLE_TOGGLE_CLASS), t.scrollLeft() + t.innerWidth() < t.get(0).scrollWidth ? i.removeClass(g["default"].DISABLE_TOGGLE_CLASS) : i.addClass(g["default"].DISABLE_TOGGLE_CLASS);
				}, t.prototype._adjustListScroll = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null;
					t = t || this._controller.getCurrentPhoto();
					var e = this.$list, i = e.find(g["default"].EDITOR_LIST.LIST_ITEM),
						n = i.filter("*[data-key='" + t.key + "']"), o = n.outerWidth(), a = n.offset().left,
						s = e.innerWidth(), r = parseInt(e.css("padding-left"), 10),
						l = parseInt(e.css("padding-right"), 10), _ = e.offset().left + r, d = {duration: 0};
					a < _ && e.stop(!0, !0).animate({scrollLeft: "-=" + (_ - a)}, d), _ + s < a + o - l && e.stop(!0, !0).animate({scrollLeft: "+=" + (a + o - (_ + s - l))}, d)
				}, t.prototype._onKeydown = function (t) {
					var e = t.keyCode, i = this.$listWrap.hasClass("open");
					i && this._hasLeftRightKeyCode(e) && this._selectPhotoByKeyboard(t, e)
				}, t.prototype._hasLeftRightKeyCode = function (t) {
					return [E["default"].KEYCODES.LEFT, E["default"].KEYCODES.RIGHT].indexOf(t) !== -1
				}, t.prototype._selectPhotoByKeyboard = function (t, e) {
					var i = t.target;
					if (!(0, b["default"])(i).is("input") && !(0, b["default"])(i).is("textarea") && "true" !== (0, b["default"])(i).attr("contenteditable")) {
						var n = this._controller.photos.length, o = this._controller.getCurrentPhoto(), a = o.sortIndex,
							s = this.$list, r = void 0;
						e === E["default"].KEYCODES.LEFT && a--, e === E["default"].KEYCODES.RIGHT && a++, 0 <= a && a < n && (t.preventDefault(), r = s.find(g["default"].EDITOR_LIST.LIST_ITEM), r.eq(a).trigger("click"))
					}
				}, t.prototype._onChangeListMode = function (t) {
					t === E["default"].LIST_MODE.EDITOR_LIST && (this._restoreSortState(), this._setListMode(), this._openList()), t === E["default"].LIST_MODE.SELECT && (this._saveSortState(), this._setSelectMode(), this._openList()), t === E["default"].LIST_MODE.SORT && (this._saveSortState(), this._setSortMode(), this._openList()), this._renderBtnDisable()
				}, t.prototype._setListMode = function () {
					this._mode = E["default"].LIST_MODE.EDITOR_LIST, this._controller._listMode = this._mode, this.$listWrap.removeClass("multi").removeClass("select").removeClass("edit_order"), this.$editorWrapper.removeClass(g["default"].EDITOR_LIST.SELECT_MODE_WRAP_TOGGLE_CLASS), this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).prop("draggable", !0), this._activateAllItems(), this._controller.unsetDimmed(), this._checkEnableListScrollBtn()
				}, t.prototype._isListMode = function () {
					return this._mode === E["default"].LIST_MODE.EDITOR_LIST
				}, t.prototype._setSelectMode = function () {
					this._mode = E["default"].LIST_MODE.SELECT, this._controller._listMode = this._mode, this.$listWrap.addClass("multi").addClass("select").removeClass("edit_order"), this.$editorWrapper.addClass(g["default"].EDITOR_LIST.SELECT_MODE_WRAP_TOGGLE_CLASS), this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).prop("draggable", !1), this._deactivateNotEditableItems(), this._resizeListHeight(), this._renderMultiSelectImageNum(), this._controller.setDimmed()
				}, t.prototype._isSelectMode = function () {
					return this._mode === E["default"].LIST_MODE.SELECT
				}, t.prototype._activateAllItems = function () {
					var t = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM);
					t.removeClass(g["default"].DISABLE_TOGGLE_CLASS)
				}, t.prototype._deactivateNotEditableItems = function () {
					var t = this, e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM);
					e.each(function (e, i) {
						var n = (0, b["default"])(i).data("key"), o = t._controller.getPhotoByKey(n);
						(0, b["default"])(i).toggleClass(g["default"].DISABLE_TOGGLE_CLASS, !o.isEditable)
					})
				}, t.prototype._setSortMode = function () {
					this._mode = E["default"].LIST_MODE.SORT, this._controller._listMode = this._mode, this.$listWrap.addClass("multi").removeClass("select").addClass("edit_order"), this.$editorWrapper.addClass(g["default"].EDITOR_LIST.SELECT_MODE_WRAP_TOGGLE_CLASS), this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).removeClass(g["default"].ACTIVE_TOGGLE_CLASS).prop("draggable", !0), this._resizeListHeight(), this._renderMultiSelectImageNum(), this._controller.setDimmed()
				}, t.prototype._isSortMode = function () {
					return this._mode === E["default"].LIST_MODE.SORT
				}, t.prototype._resizeListHeight = function () {
					this.$listArea.css("max-height", this.$editorWrapper.height() - this.$listHeader.height())
				}, t.prototype._getSortState = function () {
					var t = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM), e = {keys: []};
					return t.each(function () {
						e.keys.push((0, b["default"])(this).data("key"))
					}), e
				}, t.prototype._saveSortState = function () {
					this._sortState = this._getSortState()
				}, t.prototype._restoreSortState = function () {
					var t = this;
					if (this._sortState) {
						var e = this._controller.getCurrentPhoto(), i = this._sortState, n = this.$list,
							o = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM);
						i.keys.forEach(function (e, i) {
							var a = o.filter("[data-key='" + e + "']"), s = t._controller.getPhotoByKey(e);
							s.sortIndex = i, a.appendTo(n)
						}), this._onChangeCurrentPhoto(), this._adjustListScroll(), this._renderImageNum(e), this._sortState = null
					}
				}, t.prototype._isSortStateChanged = function () {
					var t = this._sortState && (0, a["default"])(this._getSortState()) !== (0, a["default"])(this._sortState),
						e = !!this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM).filter("." + g["default"].ACTIVE_TOGGLE_CLASS).length;
					return t || e
				}, t.prototype._deselectAllPhotos = function () {
					var t = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM),
						e = t.filter("." + g["default"].ACTIVE_TOGGLE_CLASS);
					e.length && this.$list.selectonic("unselect", e), this._renderMultiSelectImageNum()
				}, t.prototype._renderMultiSelectImageNum = function () {
					var t = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM),
						e = t.filter("." + g["default"].ACTIVE_TOGGLE_CLASS).length;
					this.$listSelectNum.text(e), e ? this.$listSelectNumWrap.show() : this.$listSelectNumWrap.hide()
				}, t.prototype._onClickDimmedArea = function (t) {
					(0, b["default"])(t.target).closest(this.$listWrap).length || this._isListMode() || this._isSortStateChanged() || (this._isSelectMode() ? this.$listSelectCancelBtn.trigger("click") : this._isSortMode() && this.$listSortCancelBtn.trigger("click"))
				}, t.prototype._onDeletePhoto = function (t) {
					var e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM),
						i = e.filter("[data-key='" + t.key + "']") || null;
					i && i.remove()
				}, t.prototype._onSetBatchApplyToThumbnail = function () {
					var t = this;
					if (this._controller._state.selectedTab === E["default"].TAB_LIST.EDIT) {
						var e = this.$list.find(g["default"].EDITOR_LIST.LIST_ITEM);
						void 0, e.each(function (e, i) {
							var n = (0, b["default"])(i).data("key"), o = t._controller.getPhotoByKey(n);
							t._renderImageThumbnail(o)
						})
					}
				}, t
			}();
			e["default"] = y
		}, 263: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(76), a = n(o), s = i(79), r = n(s), l = i(70), _ = n(l), d = i(108), u = n(d), p = i(257),
				c = n(p), h = i(124), f = n(h), T = i(114), g = n(T), m = i(125), E = n(m), C = i(122), S = n(C),
				I = i(264), L = n(I), A = i(123), b = n(A), y = i(113), v = n(y);
			i(262), f["default"].UPLOADER_LIST = {
				LIST_WRAP: ".npu_image_list_wrap",
				LIST_AREA: ".npu_image_list_area",
				LIST: ".npu_image_list",
				LIST_ITEM: ".npu_image_item[draggable]",
				LIST_ITEM_IMG: ".npu_image_list_thumb_img",
				LIST_ITEM_THUMB_WRAP: ".npu_image_list_thumb_wrap",
				LIST_ITEM_DEL_BTN: ".npu_btn_image_del",
				LIST_NUMS: ".npu_image_list_num",
				LIST_SIZES: ".npu_image_list_size",
				LIST_HEADER: ".npu_image_list_header",
				LIST_TOOLTIP: ".npu_image_list_tooltip",
				LIST_ALL_ITEM_DEL_BTN: ".npu_btn_delall",
				LIST_SORT_REVERSE_BTN: ".npu_btn_inverse",
				LIST_BLANK_IMAGE_TEMPLATE: ".npu_image_blank_template",
				LIST_BLANK_IMAGE_ITEM: "._npu_image_item_blank",
				LIST_CHECK_ALL_BTN: ".npu_btn_check_all",
				LIST_UPLOAD_AREA: ".npu_image_upload_area",
				LIST_UPLOAD_AREA_INNER: ".npu_image_upload",
				LIST_SIZE_AREA: ".npu_image_size_area",
				LIST_SIZE_UP_BTN: ".npu_btn_image_size_up",
				LIST_SIZE_DOWN_BTN: ".npu_btn_image_size_down",
				ROTATE_BTN: ".npu_btn_rotation",
				EDIT_BTN: ".npu_btn_edit",
				LIST_SIZE_3: "npu_cols_3",
				LIST_SIZE_4: "npu_cols_4",
				LIST_SIZE_5: "npu_cols_5",
				LIST_SIZE_6: "npu_cols_6",
				LIST_SIZE_7: "npu_cols_7",
				LIST_SIZE_8: "npu_cols_8",
				LIST_SIZE_9: "npu_cols_9",
				LIST_SIZE_10: "npu_cols_10",
				LIST_SINGLE_CLASS: "npu_single_list"
			};
			var O = [f["default"].UPLOADER_LIST.LIST_SIZE_3, f["default"].UPLOADER_LIST.LIST_SIZE_4, f["default"].UPLOADER_LIST.LIST_SIZE_5, f["default"].UPLOADER_LIST.LIST_SIZE_6, f["default"].UPLOADER_LIST.LIST_SIZE_7, f["default"].UPLOADER_LIST.LIST_SIZE_8, f["default"].UPLOADER_LIST.LIST_SIZE_9, f["default"].UPLOADER_LIST.LIST_SIZE_10],
				x = function () {
					function t(e) {
						(0, _["default"])(this, t), this._controller = e, this._storage = this._controller._storage, this.init()
					}

					return t.prototype.init = function () {
						var t = this;
						this._sizePointer = 3, this._source = null, this._showTooltip = !0, this._noticeModalIsVisible = !1, this._blankImageTemplate = (0, v["default"])(f["default"].UPLOADER_LIST.LIST_BLANK_IMAGE_TEMPLATE).html();
						var e = this.$editorWrapper = (0, v["default"])(f["default"].PHOTOUPLOADER_WRAP);
						this.$listWrap = e.find(f["default"].UPLOADER_LIST.LIST_WRAP), this.$listArea = this.$listWrap.find(f["default"].UPLOADER_LIST.LIST_AREA), this.$listHeader = this.$listWrap.find(f["default"].UPLOADER_LIST.LIST_HEADER), this.$list = this.$listWrap.find(f["default"].UPLOADER_LIST.LIST), this.$listNums = e.find(f["default"].UPLOADER_LIST.LIST_NUMS), this.$listSizes = e.find(f["default"].UPLOADER_LIST.LIST_SIZES), this.$listTooltip = this.$listWrap.find(f["default"].UPLOADER_LIST.LIST_TOOLTIP), this.$listSortReverseBtn = this.$listWrap.find(f["default"].UPLOADER_LIST.LIST_SORT_REVERSE_BTN), this.$listCheckAllBtn = this.$listWrap.find(f["default"].UPLOADER_LIST.LIST_CHECK_ALL_BTN), this.$listUploadArea = this.$listWrap.find(f["default"].UPLOADER_LIST.LIST_UPLOAD_AREA), this.$listUploadDropzones = this.$listArea.add(this.$listUploadArea), this.$listSizeArea = e.find(f["default"].UPLOADER_LIST.LIST_SIZE_AREA), this.$listSizeUpBtn = e.find(f["default"].UPLOADER_LIST.LIST_SIZE_UP_BTN), this.$listSizeDownBtn = e.find(f["default"].UPLOADER_LIST.LIST_SIZE_DOWN_BTN), this.$rotateBtn = e.find(f["default"].UPLOADER_LIST.ROTATE_BTN), this.$editBtn = e.find(f["default"].UPLOADER_LIST.EDIT_BTN), this.$deleteAllBtn = e.find(f["default"].UPLOADER_LIST.LIST_ALL_ITEM_DEL_BTN), this._dropzone = new L["default"]("body", this.$listUploadDropzones, {
							beforeEnter: function (e) {
								return 0 !== (0, v["default"])(e).closest(t.$editorWrapper).length
							}, beforeDrop: function (e) {
								return 0 !== (0, v["default"])(e).closest(t.$editorWrapper).length
							}
						}), this.$list.selectonic({
							multi: !0,
							keyboard: !1,
							focusBlur: !0,
							selectionBlur: !1,
							selectedClass: f["default"].ACTIVE_TOGGLE_CLASS,
							mouseMode: "toggle",
							before: function (t) {
								if (t && (0, v["default"])(t.target).closest(f["default"].UPLOADER_LIST.LIST_BLANK_IMAGE_ITEM).length) return this.selectonic("cancel"), !1
							},
							select: function () {
								var e = t.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).filter("." + f["default"].ACTIVE_TOGGLE_CLASS);
								t._controller._state.selectedPhotoKeyInUploader = e.first().data("key"), t._renderBtnDisable()
							},
							unselect: this._renderBtnDisable.bind(this),
							unselectAll: function () {
								t._controller._state.selectedPhotoKeyInUploader = null
							}
						}), this._modal = new b["default"](this._controller._storage), this._renderUIByOptions()
					}, t.prototype._renderUIByOptions = function () {
						var t = this._controller.options;
						this.$listSortReverseBtn.toggle(!t.useSingleImageFitScreen), this.$editBtn.toggle(t.tabList.indexOf(g["default"].TAB_LIST.EDIT) !== -1)
					}, t.prototype.activate = function () {
						this.$listArea.on("click.uploaderList", this._onClickImageListArea.bind(this)), this.$list.on("dblclick.uploaderList", f["default"].UPLOADER_LIST.LIST_ITEM, this._onDoubleClickImageListItem.bind(this)), this.$list.on("mouseenter.uploaderList", f["default"].UPLOADER_LIST.LIST_ITEM, this._onMouseenterImageListItem.bind(this)), this.$list.on("mouseleave.uploaderList", f["default"].UPLOADER_LIST.LIST_ITEM, this._onMouseleaveImageListItem.bind(this)), this.$listSortReverseBtn.on("click.uploaderList", this._onClickSortReverseBtn.bind(this)), this.$list.on("click.uploaderList", f["default"].UPLOADER_LIST.LIST_ITEM_DEL_BTN, this._onClickImageDelBtn.bind(this)), this.$listCheckAllBtn.on("click.uploaderList", this._onClickCheckAllBtn.bind(this)), this.$rotateBtn.on("click.uploaderList", this._onClickRotateBtn.bind(this)), this.$editBtn.on("click.uploaderList", this._onClickEditBtn.bind(this)), this.$deleteAllBtn.on("click.uploaderList", this._onClickAllImageDelBtn.bind(this)), this.$listSizeUpBtn.on("click.uploaderList", this._onClickListSizeUpBtn.bind(this)), this.$listSizeDownBtn.on("click.uploaderList", this._onClickListSizeDownBtn.bind(this)), this.$list.on("dragstart.uploaderList", "li[draggable]", this._onListDragStart.bind(this)), this.$list.on("dragenter.uploaderList", "li[draggable]", this._onListDragEnter.bind(this)), this.$list.on("dragend.uploaderList", "li[draggable]", this._onListDragEnd.bind(this)), this.$listWrap.on("dragover.uploaderList", this._onListDragOver.bind(this)), this.$list.on("drop.uploaderList", this._onListDrop.bind(this)), this._dropzone.activate(), this._dropzone.on("addFiles", this._onAddFilesOnDropzone.bind(this)), (0, v["default"])(window).on("keydown.uploaderList", this._onKeydown.bind(this)), (0, v["default"])(window).on("resize.uploaderList", this._onResizeWindow.bind(this)), this._controller.on("open", this._onOpen.bind(this)), this._controller.on("changeTabToBase", this._onChangeTabToBase.bind(this)), this._controller.on("updatePhotos", this._onUpdatePhotos.bind(this)), this._controller.on("deleteAllPhotos", this._onDeleteAllPhotos.bind(this)), this._controller.on("deletePhoto", this._onDeletePhoto.bind(this)), this._controller.on("setBatchApplyToThumbnail", this._onSetBatchApplyToThumbnail.bind(this))
					}, t.prototype.deactivate = function () {
						this.$listArea.off(".uploaderList"), this.$list.off(), this.$list.off(".uploaderList"), this.$listWrap.off(".uploaderList"), this.$listSortReverseBtn.off(".uploaderList"), this.$editorWrapper.off(".uploaderList"), this.$listCheckAllBtn.off(".uploaderList"), this.$rotateBtn.off(".uploaderList"), this.$editBtn.off(".uploaderList"), this.$deleteAllBtn.off(".uploaderList"), this.$listSizeUpBtn.off(".uploaderList"), this.$listSizeDownBtn.off(".uploaderList"), this._dropzone.deactivate(), (0, v["default"])(window).off("keydown.uploaderList"), (0, v["default"])(window).off("resize.uploaderList")
					}, t.prototype._render = function (t, e) {
						c["default"].render(t, e)
					}, t.prototype._onOpen = function () {
						this._controller._state.selectedTab === g["default"].TAB_LIST.BASE && this._showNoticeModal()
					}, t.prototype._showNoticeModal = function () {
						var t = this, e = this._controller.options, i = e.allowedImageTypes.join(", ").toUpperCase(),
							n = u["default"].convertByteToMB(e.maxFileSize),
							o = u["default"].convertByteToMB(e.maxTotalSize);
						this._modal.popup({
							title: S["default"].getMessage("txt_notice_file_upload", i, n, o),
							content: S["default"].getMessage("txt_notice_copyright"),
							smallTitle: !0,
							longDescription: !0,
							useCheckHideKey: g["default"].COOKIES.NOTICE_HIDE_FLAG,
							beforeOpen: function () {
								t._controller.setDimmed(), t._noticeModalIsVisible = !0
							},
							afterClose: function () {
								t._controller.unsetDimmed(), t._noticeModalIsVisible = !1, t._renderUploadDropzone()
							}
						})
					}, t.prototype._onChangeTabToBase = function () {
						this._setSortMode(), this._renderImageList(), this._renderImageNums(), this._renderImageSizes(), this._checkSingleImageFitScreen()
					}, t.prototype._setSortMode = function () {
						this.$listWrap.addClass("multi").removeClass("select").addClass("edit_order"), this._deselectAllPhotos()
					}, t.prototype._onListDragStart = function (t) {
						window.getSelection().removeAllRanges();
						var e = (0, v["default"])(t.target), i = u["default"].getIEVersion(),
							n = t.originalEvent.dataTransfer;
						e.hasClass(f["default"].ACTIVE_TOGGLE_CLASS) || e.hasClass(f["default"].DISABLE_TOGGLE_CLASS) || this.$list.selectonic("select", e), this._source = t.currentTarget, n.effectAllowed = "move", i || n.setData("text/plain", null)
					}, t.prototype._onListDragEnter = function (t) {
						this._source && (t.preventDefault(), (0, v["default"])(this._source).addClass(f["default"].UPLOADER_LIST.LIST_DRAG_ITEM_CLASS))
					}, t.prototype._onListDragEnd = function (t) {
						this._source && ((0, v["default"])(this._source).removeClass(f["default"].UPLOADER_LIST.LIST_DRAG_ITEM_CLASS), this._source = null), this._hideListDragBar()
					}, t.prototype._onListDragOver = function (t) {
						if (this._source) {
							t.preventDefault();
							var e = this._source, i = (0, v["default"])(t.target).closest("li[draggable]").get(0);
							if (t.originalEvent.dataTransfer.dropEffect = "move", i) {
								var n = (0, v["default"])(i), o = this._isBefore(t, i) ? "left_bar" : "right_bar";
								n.hasClass(o) || this._hideListDragBar(), n.addClass(o)
							} else this._hideListDragBar();
							if (!this.$listArea.is(":animated")) {
								var a = t.clientY - this.$listArea.offset().top, s = this.$listArea.outerHeight(),
									r = (0, v["default"])(e).outerHeight(!0);
								a < r / 2 && this.$listArea.stop().animate({scrollTop: "-=" + r + "px"}), a > s - r / 2 && this.$listArea.stop().animate({scrollTop: "+=" + r + "px"})
							}
						}
					}, t.prototype._hideListDragBar = function () {
						this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).removeClass("left_bar").removeClass("right_bar")
					}, t.prototype._onListDrop = function (t) {
						this._source && (t.preventDefault && t.preventDefault(), t.stopPropagation && t.stopPropagation(), this._multiModeDrop(t), this._source = null)
					}, t.prototype._multiModeDrop = function (t) {
						var e = (this._source, t.target), i = (0, v["default"])(e).closest("li[draggable]").get(0),
							n = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).filter("." + f["default"].ACTIVE_TOGGLE_CLASS);
						if (n.length && i) {
							if (this._startSortAnimation(), this._isBefore(t, i) || (i = i.nextSibling), (0, v["default"])(i).hasClass(f["default"].ACTIVE_TOGGLE_CLASS)) {
								var o = (0, v["default"])(i).nextAll(":not(." + f["default"].ACTIVE_TOGGLE_CLASS + ")").get(0);
								o || (o = (0, v["default"])(i).nextAll().last().get(0), o = o ? o.nextSibling : null), i = o
							}
							i ? (0, v["default"])(i).before(n) : this.$list.append(n), (0, v["default"])(this._source).removeClass(f["default"].UPLOADER_LIST.LIST_DRAG_ITEM_CLASS), this._resetPhotosIndex(), this._updateSortAnimation(), E["default"].log("PTE_L_DROP", e, t)
						}
					}, t.prototype._startSortAnimation = function () {
						var t = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM),
							e = (0, v["default"])(t.get().reverse());
						e.each(function (t, e) {
							(0, v["default"])(e).data("position", (0, v["default"])(e).position())
						})
					}, t.prototype._updateSortAnimation = function () {
						var t = this, e = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM);
						e.each(function (i, n) {
							var o = (0, v["default"])(n), a = o.data("position"), s = o.position();
							a.left === s.left && a.top === s.top || (o.css({
								"-webkit-transform": "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)",
								"-moz-transform": "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)",
								"-ms-transform": "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)",
								"-o-transform": "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)",
								transform: "translate(" + (a.left - s.left) + "px," + (a.top - s.top) + "px)"
							}), o.addClass("moving"), o.one("webkitAnimationEnd oanimationend msAnimationEnd animationend", function (i) {
								(0, v["default"])(i.target).css({
									"-webkit-transform": "translate(0,0)",
									"-moz-transform": "translate(0,0)",
									"-ms-transform": "translate(0,0)",
									"-o-transform": "translate(0,0)",
									transform: "translate(0,0)"
								}), (0, v["default"])(i.target).removeClass("moving"), e.filter(":animated").length || t._endSortAnimation()
							}))
						})
					}, t.prototype._endSortAnimation = function () {
						this._deselectAllPhotos()
					}, t.prototype._resetPhotosIndex = function () {
						var t = this, e = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM);
						e.each(function (e, i) {
							var n = (0, v["default"])(i).data("key"), o = t._controller.getPhotoByKey(n);
							o.sortIndex = e
						})
					}, t.prototype._isBefore = function (t, e) {
						var i = (0, v["default"])(e), n = i.offset().left, o = i.outerWidth(), a = t.clientX;
						return a < n + o / 2
					}, t.prototype._convertPhotosArrayForRender = function (t) {
						return t.length && this._controller.options.useSingleImageFitScreen ? [v["default"].extend(!0, t[0].getCloneData(), {thumbnailSrc: t[0].thumbnailLargeSrc || t[0].domain + t[0].path})] : t
					}, t.prototype._renderImageList = function () {
						var t = this._controller.getPhotosArray();
						this._render(this.$list, {list: this._convertPhotosArrayForRender(t)}), this._fillBlanks(), this._renderBtnDisable(), this._renderUploadDropzone()
					}, t.prototype._renderUploadDropzone = function () {
						var t = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM);
						0 === t.length ? (this.$listArea.removeClass(f["default"].ACTIVE_TOGGLE_CLASS), this.$listSizeArea.removeClass(f["default"].ACTIVE_TOGGLE_CLASS), this._noticeModalIsVisible || this.$listUploadArea.addClass(f["default"].ACTIVE_TOGGLE_CLASS), this.$listHeader.hide()) : (this.$listArea.addClass(f["default"].ACTIVE_TOGGLE_CLASS), this.$listSizeArea.addClass(f["default"].ACTIVE_TOGGLE_CLASS), this.$listUploadArea.removeClass(f["default"].ACTIVE_TOGGLE_CLASS), this.$listHeader.show())
					}, t.prototype._renderImageListAdded = function (t) {
						var e = this.$list;
						e.addClass("_topdown"), this._render(e, {list: this._convertPhotosArrayForRender(t)}), e.removeClass("_topdown")
					}, t.prototype._renderImageListUpdated = function (t) {
						var e = this;
						t = this._convertPhotosArrayForRender(t), t.forEach(function (t, i) {
							e._renderImage(t)
						})
					}, t.prototype._renderImage = function (t) {
						if (!this._controller.isUploading()) {
							var e = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).filter("*[data-key='" + t.key + "']");
							this._deselectAllPhotos(), e.addClass(f["default"].ACTIVE_TOGGLE_CLASS), this._render(e, t)
						}
					}, t.prototype._renderImageNums = function () {
						var t = this._controller.getPhotosArray().length;
						this._render(this.$listNums, {now: t, total: this._controller.options.maxFileCount})
					}, t.prototype._renderImageSizes = function () {
						var t = u["default"].convertByteToMB(this._controller.getTotalSize());
						this._render(this.$listSizes, {
							now: t,
							total: u["default"].convertByteToMB(this._controller.options.maxTotalSize)
						})
					}, t.prototype._onUpdatePhotos = function (t) {
						this._renderImageListAdded(t.photosAdded), this._renderImageListUpdated(t.photosUpdated), this._fillBlanks(), this._renderUploadDropzone(), this._renderBtnDisable(), this._renderImageNums(), this._renderImageSizes(), this._showListTooltip(), this._checkSingleImageFitScreen()
					}, t.prototype._checkSingleImageFitScreen = function () {
						var t = this._controller.getPhotosArray(), e = t[0];
						if (e && this._controller.options.useSingleImageFitScreen) {
							this.$listArea.addClass(f["default"].UPLOADER_LIST.LIST_SINGLE_CLASS);
							var i = e.cropWidth || e.width, n = e.cropHeight || e.height, o = e.getBatchOption(),
								a = o.rotate || 0, s = this.$list.width(), r = this.$list.height() - 140;
							if (a / 90 % 2 === 1) {
								var l = i;
								i = n, n = l
							}
							var _ = u["default"].getThumbnailSize(i, n, s, r), d = _[0], p = _[1];
							this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).css({
								width: Math.min(d, i),
								height: Math.min(p, n)
							})
						}
					}, t.prototype._showListTooltip = function () {
						var t = this;
						if (this._showTooltip && !this._controller.options.useSingleImageFitScreen && 1 !== this._controller.options.maxFileCount) {
							var e = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).first(), i = e.position(),
								n = i.left, o = i.top + e.outerHeight();
							this._showTooltip = !1, this.$listTooltip.addClass(f["default"].ACTIVE_TOGGLE_CLASS).css({
								left: n,
								top: o
							}), this.$editorWrapper.one("mousedown", function () {
								t.$listTooltip.removeClass(f["default"].ACTIVE_TOGGLE_CLASS)
							})
						}
					}, t.prototype._onClickImageListArea = function (t) {
						t.preventDefault();
						(0, v["default"])(t.target).closest(f["default"].UPLOADER_LIST.LIST_ITEM).length || this._deselectAllPhotos()
					}, t.prototype._onDoubleClickImageListItem = function (t) {
						if (this._controller.options.tabList.indexOf(g["default"].TAB_LIST.EDIT) !== -1) {
							var e = (0, v["default"])(t.currentTarget);
							this._controller._state.selectedPhotoKeyInUploader = e.data("key"), this._controller.changeTabToEdit(), this._controller._state.selectedPhotoKeyInUploader = null, E["default"].log("PTE_U_EDIT_DIRECT", t.currentTarget, t)
						}
					}, t.prototype._onMouseenterImageListItem = function (t) {
						var e = (0, v["default"])(t.currentTarget);
						e.addClass(f["default"].HOVER_TOGGLE_CLASS)
					}, t.prototype._onMouseleaveImageListItem = function (t) {
						var e = (0, v["default"])(t.currentTarget);
						e.removeClass(f["default"].HOVER_TOGGLE_CLASS)
					}, t.prototype._onClickSortReverseBtn = function (t) {
						this._reverseImageListItem(), E["default"].log("PTE_U_REVERSE", t.currentTarget, t)
					}, t.prototype._onClickAllImageDelBtn = function () {
						function t(t) {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i(t) {
							var e, n, o, s, r, l = this;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										if (e = this._controller.getPhotosArray(), n = S["default"].getMessage("txt_confirm_delete_all_tit"), o = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).filter(":not(." + f["default"].DISABLE_TOGGLE_CLASS + ")"), s = o.filter("." + f["default"].ACTIVE_TOGGLE_CLASS), r = o && o.length === s.length, i.t0 = e.length, !i.t0) {
											i.next = 10;
											break
										}
										return i.next = 9, this._controller._asyncConfirm(n);
									case 9:
										i.t0 = i.sent;
									case 10:
										if (!i.t0) {
											i.next = 19;
											break
										}
										if (E["default"].log("PTE_U_DELETE_ALL", t.currentTarget, t), !r) {
											i.next = 17;
											break
										}
										return i.next = 15, this._controller.deleteAllPhotos();
									case 15:
										i.next = 19;
										break;
									case 17:
										s.each(function (t, e) {
											l._controller.deletePhotoByKey((0, v["default"])(e).data("key"))
										}), s.remove();
									case 19:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype._onClickImageDelBtn = function () {
						function t(t) {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i(t) {
							var e, n;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										e = (0, v["default"])(t.currentTarget).closest("li[draggable]"), n = e.data("key"), E["default"].log("PTE_U_DELETE", t.currentTarget, t), this._controller.deletePhotoByKey(n), e.remove();
									case 5:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype._onClickCheckAllBtn = function (t) {
						var e = (this.$listCheckAllBtn, this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).filter(":not(." + f["default"].DISABLE_TOGGLE_CLASS + ")")),
							i = e.filter("." + f["default"].ACTIVE_TOGGLE_CLASS);
						e.length === i.length ? this.$list.selectonic("unselect", e) : this.$list.selectonic("select", e)
					}, t.prototype._btnToggleDisable = function (t, e) {
						e = Boolean(e), t.toggleClass(f["default"].DISABLE_TOGGLE_CLASS, e), t.prop("disabled", e)
					}, t.prototype._renderBtnDisable = function () {
						var t = (this.$listCheckAllBtn, this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).filter(":not(." + f["default"].DISABLE_TOGGLE_CLASS + ")").filter(":not(" + f["default"].UPLOADER_LIST.LIST_BLANK_IMAGE_ITEM + ")")),
							e = t.filter("." + f["default"].ACTIVE_TOGGLE_CLASS);
						this.$listSizeArea.toggle(!(this._controller.options.useSingleImageFitScreen || !t.length)), this._btnToggleDisable(this.$listCheckAllBtn, !t.length), this.$listCheckAllBtn.toggleClass(f["default"].ACTIVE_TOGGLE_CLASS, !(!t.length || t.length !== e.length)), this._btnToggleDisable(this.$rotateBtn, !e.length || !this._hasEditableItems(e)), this._btnToggleDisable(this.$listSortReverseBtn, t.length < 2), this._btnToggleDisable(this.$editBtn, !t.length), this._btnToggleDisable(this.$deleteAllBtn, !e.length)
					}, t.prototype._reverseImageListItem = function () {
						this._controller.reversePhotos(), this._renderImageList()
					}, t.prototype._hasEditableItems = function (t) {
						var e = this, i = !1;
						return t.each(function (t, n) {
							var o = (0, v["default"])(n).data("key"), a = e._controller.getPhotoByKey(o);
							a.isEditable && (i = !0)
						}), i
					}, t.prototype._onKeydown = function (t) {
						var e = t.keyCode, i = this.$listWrap.hasClass("open");
						i && this._hasLeftRightKeyCode(e) && this._selectPhotoByKeyboard(t, e)
					}, t.prototype._onResizeWindow = function () {
						this._checkSingleImageFitScreen()
					}, t.prototype._hasLeftRightKeyCode = function (t) {
						return [g["default"].KEYCODES.LEFT, g["default"].KEYCODES.RIGHT].indexOf(t) !== -1
					}, t.prototype._selectPhotoByKeyboard = function (t, e) {
						var i = t.target;
						if (!(0, v["default"])(i).is("input") && !(0, v["default"])(i).is("textarea") && "true" !== (0, v["default"])(i).attr("contenteditable")) {
							var n = this._controller.photos.length, o = this._controller.getCurrentPhoto(),
								a = o.sortIndex, s = this.$list, r = void 0;
							e === g["default"].KEYCODES.LEFT && a--, e === g["default"].KEYCODES.RIGHT && a++, 0 <= a && a < n && (t.preventDefault(), r = s.find(f["default"].UPLOADER_LIST.LIST_ITEM), r.eq(a).trigger("click"))
						}
					}, t.prototype._deselectAllPhotos = function () {
						var t = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM),
							e = t.filter("." + f["default"].ACTIVE_TOGGLE_CLASS);
						e.length && this.$list.selectonic("unselect", e)
					}, t.prototype._onAddFilesOnDropzone = function (t) {
						this._controller.addPhotos("file", t)
					}, t.prototype._onDeleteAllPhotos = function () {
						this._renderImageList(), this._renderImageNums(), this._renderImageSizes()
					}, t.prototype._onDeletePhoto = function (t) {
						var e = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM),
							i = e.filter("[data-key='" + t.key + "']") || null;
						i && i.remove(), this._renderUploadDropzone(), this._renderImageNums(), this._renderImageSizes(), this._renderBtnDisable()
					}, t.prototype._fillBlanks = function () {
						var t = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM),
							e = this.$list.find(f["default"].UPLOADER_LIST.LIST_BLANK_IMAGE_ITEM), i = t.length,
							n = e.length, o = this._controller.options.maxFileCount;
						i + n > o ? e.eq(o - i).nextAll().andSelf().remove() : this.$list.append(u["default"].strRepeat(this._blankImageTemplate, o - (i + n)))
					}, t.prototype._onClickRotateBtn = function () {
						function t(t) {
							return e.apply(this, arguments)
						}

						var e = (0, r["default"])(a["default"].mark(function i(t) {
							var e, n, o, s, r, l, _;
							return a["default"].wrap(function (i) {
								for (; ;) switch (i.prev = i.next) {
									case 0:
										if (!this._controller.waitAsyncResponseEvent("externalRotateInUploader")) {
											i.next = 2;
											break
										}
										return i.abrupt("return");
									case 2:
										e = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM).filter(":not(." + f["default"].DISABLE_TOGGLE_CLASS + ")"), n = e.filter("." + f["default"].ACTIVE_TOGGLE_CLASS), o = n.length, s = 0;
									case 6:
										if (!(s < o)) {
											i.next = 17;
											break
										}
										if (r = n.eq(s).data("key"), l = this._controller.getPhotoByKey(r), _ = l.getBatchOption(), !l.isEditable) {
											i.next = 14;
											break
										}
										return _.rotate = (_.rotate || 0) + 90, i.next = 14, this._controller.setBatchApplyToThumbnail([l]);
									case 14:
										s++, i.next = 6;
										break;
									case 17:
										this._checkSingleImageFitScreen(), this._controller.removeAsyncReponseEvent("externalRotateInUploader"), E["default"].log("PTE_U_ROTATE", t.currentTarget, t);
									case 20:
									case"end":
										return i.stop()
								}
							}, i, this)
						}));
						return t
					}(), t.prototype._isDisabledOrHolded = function (t) {
						var e = this._controller.isHolded(), i = (0, v["default"])(t);
						return e || i.hasClass(f["default"].DISABLE_TOGGLE_CLASS)
					}, t.prototype._onClickEditBtn = function (t) {
						var e = this._controller.getPhotosArray();
						0 === e.length || this._isDisabledOrHolded(t.currentTarget) || (this._controller.changeTabToEdit(), t.preventDefault(), E["default"].log("PTE_U_EDIT", t.currentTarget, t))
					}, t.prototype._onClickListSizeUpBtn = function (t) {
						var e = (0, v["default"])(t.currentTarget);
						if (!e.hasClass(f["default"].DISABLE_TOGGLE_CLASS)) {
							var i = this._sizePointer > 0 ? this._sizePointer - 1 : this._sizePointer;
							this._changeListSize(i), E["default"].log("PTE_U_SIZE_UP", t.currentTarget, t)
						}
					}, t.prototype._onClickListSizeDownBtn = function (t) {
						var e = (0, v["default"])(t.currentTarget);
						if (!e.hasClass(f["default"].DISABLE_TOGGLE_CLASS)) {
							var i = O.length - 1, n = this._sizePointer < i ? this._sizePointer + 1 : this._sizePointer;
							this._changeListSize(n), E["default"].log("PTE_U_SIZE_DOWN", t.currentTarget, t)
						}
					}, t.prototype._changeListSize = function (t) {
						var e = O[t];
						this.$listSizeUpBtn.toggleClass(f["default"].DISABLE_TOGGLE_CLASS, 0 === t), this.$listSizeDownBtn.toggleClass(f["default"].DISABLE_TOGGLE_CLASS, t === O.length - 1), this.$list.removeClass(O.join(" ")).addClass(e), this._sizePointer = t
					}, t.prototype._renderImageThumbnail = function (t) {
						if (t) {
							var e = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM),
								i = e.filter("*[data-key='" + t.key + "']");
							this._render(i, {thumbnailSrc: t.thumbnailSrc})
						}
					}, t.prototype._onSetBatchApplyToThumbnail = function () {
						var t = this;
						if (this._controller._state.selectedTab === g["default"].TAB_LIST.BASE) {
							var e = this.$list.find(f["default"].UPLOADER_LIST.LIST_ITEM);
							void 0, e.each(function (e, i) {
								var n = (0, v["default"])(i).data("key"), o = t._controller.getPhotoByKey(n);
								t._renderImageThumbnail(o)
							})
						}
					}, t
				}();
			e["default"] = x
		}, 264: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(96), r = n(s), l = i(97), _ = n(l), d = i(105), u = n(d), p = i(108),
				c = (n(p), i(124)), h = n(c), f = i(113), T = n(f);
			h["default"].DROPZONE = {DROPZONE_AREA: ".npe_dropzone", DROPZONE_HIGHLIGHT_CLASS: "dragndrop"};
			var g = function (t) {
				function e(i, n, o) {
					(0, a["default"])(this, e);
					var s = (0, r["default"])(this, t.call(this));
					return s.setTarget(i, n), s.setOption(o), s
				}

				return (0, _["default"])(e, t), e.prototype.setTarget = function (t, e) {
					t && (this._$dropzone = t instanceof T["default"] ? t : (0, T["default"])(t)), this._$highlightZone = e ? e instanceof T["default"] ? e : (0, T["default"])(e) : this._$dropzone
				}, e.prototype.setOption = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : [];
					this._options = T["default"].extend(!0, this._options || {
						beforeEnter: function () {
							return !0
						}, beforeDrop: function () {
							return !0
						}
					}, t)
				}, e.prototype.activate = function () {
					this._$dropzone.on("dragenter.Dropzone", this._onDragEnter.bind(this)), this._$dropzone.on("dragover.Dropzone", this._onDragOver.bind(this)), this._$dropzone.on("drop.Dropzone", this._onDrop.bind(this)), this._$dropzone.on("dragleave.Dropzone", this._onDragLeave.bind(this))
				},
					e.prototype.deactivate = function () {
						this._$dropzone.off(".Dropzone"), this.removeAllListeners()
					}, e.prototype._showDropZone = function () {
					this._$highlightZone.addClass(h["default"].DROPZONE.DROPZONE_HIGHLIGHT_CLASS)
				}, e.prototype._hideDropZone = function () {
					this._$highlightZone.removeClass(h["default"].DROPZONE.DROPZONE_HIGHLIGHT_CLASS)
				}, e.prototype._isNotFileType = function (t) {
					return Array.prototype.indexOf.call(t, "Files") < 0
				}, e.prototype._onDragOver = function (t) {
					t.preventDefault()
				}, e.prototype._onDragEnter = function (t) {
					if (this._options.beforeEnter(t.target)) {
						var e = t.originalEvent.dataTransfer.types;
						this._enterTarget = t.target, this._isNotFileType(e) || this._showDropZone()
					}
				}, e.prototype._onDragLeave = function (t) {
					this._enterTarget === t.target && this._hideDropZone()
				}, e.prototype._onDrop = function (t) {
					if (t.preventDefault(), this._options.beforeDrop(t.target)) {
						this._hideDropZone();
						var e = t.originalEvent.dataTransfer, i = e.files;
						e.types;
						this.emit("addFiles", i)
					}
				}, e
			}(u["default"]);
			e["default"] = g
		}, 265: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = (n(s), i(108)), l = n(r), _ = i(257), d = n(_), u = i(122),
				p = (n(u), i(124)), c = n(p), h = i(114), f = n(h), T = i(125), g = n(T), m = i(113), E = n(m),
				C = function () {
					function t(e) {
						(0, a["default"])(this, t), this._controller = e, this._sideMenuPosition = e.options.sideMenuPosition, this.init()
					}

					return t.prototype.init = function () {
						var t = this.$editorWrapper = (0, E["default"])(c["default"].PHOTOEDITOR_WRAP);
						this.$controlWrap = t.find(c["default"].CONTROL_WRAP), this.$controlBtns = t.find(c["default"].CONTROL_BTN), this.$controlDetails = t.find(c["default"].CONTROL_DETAIL)
					}, t.prototype._ready = function () {
						this.$editorWrapper;
						this._render(this.$controlWrap, this._controller.options.functions)
					}, t.prototype.activate = function () {
						this._ready(), this.$controlBtns.on("click", this._onClickControlBtn.bind(this)), l["default"].isNeedPolyfill() && this.$controlDetails.on("click mousemove mousedown mouseup", "*", this._onPointerEvents), this._controller.on("changeTab", this._onChangeTab.bind(this)), this._controller.on("canvasReady", this._onCanvasReady.bind(this)), this._controller.on("changeControl", this._onChangeControl.bind(this))
					}, t.prototype.deactivate = function () {
						this.$controlBtns.off("click"), l["default"].isNeedPolyfill() && this.$controlDetails.off("click mousemove mousedown mouseup")
					}, t.prototype._render = function (t, e) {
						"left" === this._sideMenuPosition ? this.$controlWrap.addClass(c["default"].CONTROL_LEFT_CLASS) : this.$controlWrap.addClass(c["default"].CONTROL_RIGHT_CLASS), d["default"].render(t, e)
					}, t.prototype._onChangeTab = function (t) {
						t === f["default"].TAB_LIST.EDIT && this.$controlDetails.removeClass(c["default"].OUT_ANIMATION_CLASS)
					}, t.prototype._onCanvasReady = function (t) {
						this._checkEditable()
					}, t.prototype._onPointerEvents = function (t) {
						if ("none" === (0, E["default"])(this).css("pointer-events")) {
							var e = (0, E["default"])(this).css("display");
							(0, E["default"])(this).css("display", "none");
							var i = document.elementFromPoint(t.clientX, t.clientY);
							return (0, E["default"])(this).css("display", e || ""), t.target = i, (0, E["default"])(i).trigger(t), !1
						}
						return !0
					}, t.prototype._onClickControlBtn = function (t) {
						t.preventDefault();
						var e = t.currentTarget, i = (0, E["default"])(e), n = i.data("targetcontrol");
						l["default"].isHold(e) || i.hasClass(c["default"].DISABLE_TOGGLE_CLASS) || (i.hasClass(c["default"].ACTIVE_TOGGLE_CLASS) && (n = null), this._controller.selectControl(n), n && g["default"].log("PTE_S_" + n.toUpperCase(), e, t))
					}, t.prototype._onChangeControl = function (t) {
						var e = this.$controlBtns, i = e.filter(function () {
								return (0, E["default"])(this).data("targetcontrol") === t
							}), n = this.$controlDetails,
							o = (0, E["default"])(c["default"].CONTROL_DETAIL + '[data-control="' + t + '"]'),
							a = (0, E["default"])(c["default"].CONTROL_DETAIL + "." + c["default"].ACTIVE_TOGGLE_CLASS),
							s = (0, E["default"])(c["default"].CONTROL_DETAIL_WRAP);
						t && i.hasClass(c["default"].ACTIVE_TOGGLE_CLASS) || !t && 0 === e.filter("." + c["default"].ACTIVE_TOGGLE_CLASS).length || (e.removeClass(c["default"].ACTIVE_TOGGLE_CLASS), n.removeClass(c["default"].ACTIVE_TOGGLE_CLASS), t ? (i.addClass(c["default"].ACTIVE_TOGGLE_CLASS), o.addClass(c["default"].ACTIVE_TOGGLE_CLASS), s.addClass(c["default"].ACTIVE_TOGGLE_CLASS)) : (a.one("webkitAnimationEnd oanimationend msAnimationEnd animationend", function (t) {
							(0, E["default"])(t.target).removeClass(c["default"].OUT_ANIMATION_CLASS)
						}), a.addClass(c["default"].OUT_ANIMATION_CLASS), s.removeClass(c["default"].ACTIVE_TOGGLE_CLASS)))
					}, t.prototype._checkEditable = function () {
						var t = this._controller.getCurrentPhoto(), e = this.$controlBtns;
						t.isEditable ? e.removeClass(c["default"].DISABLE_TOGGLE_CLASS).prop("disabled", !1) : e.addClass(c["default"].DISABLE_TOGGLE_CLASS).prop("disabled", !0)
					}, t
				}();
			e["default"] = C
		}, 266: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = n(s), l = i(108), _ = n(l), d = i(257), u = n(d), p = i(122),
				c = (n(p), i(124)), h = n(c), f = i(114), T = n(f), g = i(125), m = n(g), E = i(267), C = n(E),
				S = i(113), I = n(S);
			h["default"].FILTER = {
				DETAIL_FILTER_BTN: ".npe_btn_detail_filter",
				DETAIL_FILTER_THUMB: ".npe_control_filter .npe_detail_thumb",
				DETAIL_FILTER_THUMB_CANVAS: ".npe_control_filter .npe_detail_thumb_img",
				DETAIL_FILTER_APPLY_ALL_BTN: ".npe_control_filter .npe_btn_apply_all",
				DETAIL_FILTER_APPLY_SELECT_BTN: ".npe_control_filter .npe_btn_apply_select",
				FILTER_SLIDE: ".npe_slide_filter",
				FILTER_SLIDE_AREA: ".npe_control_filter .npe_slide_area",
				LIST_AREA: ".npe_control_filter .npe_detail_filter_area",
				LIST_PREV_BTN: ".npe_control_filter .npe_filter_list_prev",
				LIST_NEXT_BTN: ".npe_control_filter .npe_filter_list_next"
			};
			var L = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this._currentFilterIndex = -1, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$editorWrapper = (0, I["default"])(h["default"].PHOTOEDITOR_WRAP);
					this.$controlWrap = t.find(h["default"].CONTROL_WRAP), this.$controlDetails = t.find(h["default"].CONTROL_DETAIL), this.$filterSlide = t.find(h["default"].FILTER.FILTER_SLIDE), this.$filterSlideArea = t.find(h["default"].FILTER.FILTER_SLIDE_AREA), this.$detailFilterApplyAllBtn = t.find(h["default"].FILTER.DETAIL_FILTER_APPLY_ALL_BTN), this.$detailFilterApplySelectBtn = t.find(h["default"].FILTER.DETAIL_FILTER_APPLY_SELECT_BTN), this.$filterListArea = t.find(h["default"].FILTER.LIST_AREA), this.$filterListPrevBtn = t.find(h["default"].FILTER.LIST_PREV_BTN), this.$filterListNextBtn = t.find(h["default"].FILTER.LIST_NEXT_BTN), this._filterSlider = new C["default"], this._filterSlider.setTarget(this.$filterSlide, {
						base: Number(this.$filterSlide.data("base")),
						min: Number(this.$filterSlide.attr("min")),
						max: Number(this.$filterSlide.attr("max")),
						baseData: Number(this.$filterSlide.data("basedata")),
						minData: Number(this.$filterSlide.data("mindata")),
						maxData: Number(this.$filterSlide.data("maxdata")),
						center: 0
					})
				}, t.prototype._ready = function () {
					var t = this.$editorWrapper;
					this._render(this.$controlDetails, {filters: r["default"].filters}), this.$detailFilterThumb = t.find(h["default"].FILTER.DETAIL_FILTER_THUMB), this.$detailFilterThumbCanvas = t.find(h["default"].FILTER.DETAIL_FILTER_THUMB_CANVAS), this.$detailFilterBtns = t.find(h["default"].FILTER.DETAIL_FILTER_BTN)
				}, t.prototype.activate = function () {
					this._ready(), this.$controlDetails.on("click", h["default"].FILTER.DETAIL_FILTER_BTN, this._onClickFilterBtn.bind(this)), this.$filterSlide.on("mousedown", this._onMousedownFilterSlide.bind(this)), this.$detailFilterApplyAllBtn.on("click", this._onClickFilterApplyAllBtn.bind(this)), this.$detailFilterApplySelectBtn.on("click", this._onClickFilterApplySelectBtn.bind(this)), this.$filterListArea.on("scroll", this._checkEnableListScrollBtn.bind(this)), this.$filterListPrevBtn.on("click", this._onClickFilterListArrowBtn.bind(this, -1)), this.$filterListNextBtn.on("click", this._onClickFilterListArrowBtn.bind(this, 1)), this._filterSlider.activate(), this._filterSlider.on("slideStart", this._onFilterSlideStart.bind(this)), this._filterSlider.on("slide", this._onFilterSlide.bind(this)), this._filterSlider.on("slideEnd", this._onFilterSlideEnd.bind(this)), this._controller.on("canvasReady", this._onCanvasReady.bind(this)), this._controller.on("changeFilter", this._onChangeFilter.bind(this)), this._controller.on("updatePhotos", this._onUpdatePhotos.bind(this)), this._controller.on("initControlValues", this._onInitControlValues.bind(this)), this._controller.on("changeControl", this._onChangeControl.bind(this))
				}, t.prototype.deactivate = function () {
					this.$controlDetails.off("click", h["default"].FILTER.DETAIL_FILTER_BTN), this.$filterSlide.off("mousedown"), this.$detailFilterApplyAllBtn.off("click"), this.$detailFilterApplySelectBtn.off("click"), this.$filterListPrevBtn.off("click"), this.$filterListNextBtn.off("click"), this._filterSlider.deactivate()
				}, t.prototype._render = function (t, e) {
					u["default"].render(t, e)
				}, t.prototype._onCanvasReady = function (t) {
					this._renderFilterThumbnails(), this._renderFilterSlider()
				}, t.prototype._onChangeControl = function (t) {
					t === T["default"].CONTROLS.FILTER && this._adjustListScroll(this._currentFilterIndex)
				}, t.prototype._onInitControlValues = function () {
					this._checkApplyAllBtnState()
				}, t.prototype._onClickFilterBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, I["default"])(e).data("filter"), n = (0, I["default"])(e);
					n.hasClass(h["default"].ACTIVE_TOGGLE_CLASS) || n.hasClass(h["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setEditorFilter(i), this._controller.pushHistory(), i === -1 ? m["default"].log("PTE_F_ORIGINAL", e, t) : m["default"].log("PTE_F_FIL" + i, e, t))
				}, t.prototype._onChangeFilter = function (t) {
					var e = this.$detailFilterBtns.filter("[data-filter='" + t.index + "']");
					this._currentFilterIndex = t.index, e.hasClass(h["default"].ACTIVE_TOGGLE_CLASS) || e.addClass(h["default"].ACTIVE_TOGGLE_CLASS).siblings().removeClass(h["default"].ACTIVE_TOGGLE_CLASS), this._checkApplyAllBtnState(), this._renderFilterSlider(), this._adjustListScroll(this._currentFilterIndex)
				}, t.prototype._onUpdatePhotos = function () {
					this._checkApplyAllBtnState()
				}, t.prototype._checkApplyAllBtnState = function () {
					var t = this, e = this.$detailFilterApplyAllBtn, i = this.$detailFilterApplySelectBtn,
						n = this._controller.photos, o = !1;
					return n.length <= 1 ? (e.addClass(h["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0), void i.addClass(h["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0)) : this._currentFilterIndex !== -1 || (n.forEach(function (e) {
						t._isPhotoAppliedFilter(e) && (o = !0)
					}), o) ? (e.removeClass(h["default"].DISABLE_TOGGLE_CLASS).removeAttr("disabled"), void i.removeClass(h["default"].DISABLE_TOGGLE_CLASS).removeAttr("disabled")) : (e.addClass(h["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0), void i.addClass(h["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0))
				}, t.prototype._isPhotoAppliedFilter = function (t) {
					var e = t.snapshot, i = t.batchOptions, n = !1;
					return i.filter && i.filter.index === -1 || (e && e.filter && "number" == typeof e.filter.index || i.filter && "number" == typeof i.filter.index) && (n = !0), n
				}, t.prototype._renderFilterThumbnails = function () {
					var t = this, e = this.$detailFilterThumbCanvas, i = this.$detailFilterThumb,
						n = this._controller.getCurrentPhoto(), o = parseInt(i.css("width")),
						a = parseInt(i.css("height")), s = void 0, r = void 0,
						l = _["default"].getThumbnailImageSizeForCover(n.width, n.height, o, a);
					s = l[0], r = l[1], e.attr({
						width: s,
						height: r
					}), s < r ? e.css({
						"margin-top": Math.round((r - a) / 2) * -1,
						"margin-left": 0
					}) : e.css({
						"margin-top": 0,
						"margin-left": Math.round((s - o) / 2) * -1
					}), this._render(e.eq(0), {originalSrc: n.domain + n.path}), setTimeout(function () {
						t._controller.drawFilterThumbnails(e.filter("canvas"))
					}, 10)
				}, t.prototype._renderFilterSlider = function () {
					var t = this._controller.getEditorFilterIndex(), e = this._controller.getEditorFilterValue();
					t === -1 ? (this._filterSlider.disabled = !0, this._filterSlider.setValue(this.$filterSlide.data("base"))) : (this._filterSlider.disabled = !1, this._filterSlider.setValueByData(e))
				}, t.prototype._onFilterSlide = function (t) {
					var e = t.currentTarget;
					(0, I["default"])(e).data("adjust");
					this._controller.setEditorFilterValue(t.dataValue), this._controller.checkAdjustModified()
				}, t.prototype._onFilterSlideStart = function (t) {
					this._controller.setEditorPreview(!0), this._rangeStartPoint = t.currentTarget.value
				}, t.prototype._onFilterSlideEnd = function (t) {
					var e = t.currentTarget;
					this._controller.setEditorPreview(!1), this._controller.pushHistory(), this._rangeMoved = e.value - this._rangeStartPoint, 0 !== this._rangeMoved && (0, I["default"])(e).trigger("input")
				}, t.prototype._onMousedownFilterSlide = function (t) {
					m["default"].log("PTE_F_BAR", t.currentTarget, t)
				}, t.prototype._onClickFilterApplyAllBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, I["default"])(e);
					i.hasClass(h["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setBatchFilterApply(), this._checkApplyAllBtnState(), m["default"].log("PTE_F_BATCH", e, t))
				}, t.prototype._onClickFilterApplySelectBtn = function (t) {
					var e = this;
					t.preventDefault();
					var i = t.currentTarget, n = (0, I["default"])(i);
					n.hasClass(h["default"].DISABLE_TOGGLE_CLASS) || (this._controller.asyncMultiSelectPhotos().then(function (t) {
						t && t.length && e._controller.setBatchFilterApply(t)
					}), this._checkApplyAllBtnState(), m["default"].log("PTE_F_PORTION", i, t))
				}, t.prototype._moveListScroll = function (t) {
					var e = this.$filterListArea, i = t > 0 ? "+=" : "-=", n = e.innerWidth(), o = e.scrollLeft(),
						a = e.children(h["default"].FILTER.DETAIL_FILTER_BTN).first().outerWidth(), s = void 0;
					t > 0 && (s = Math.floor((o + n) / a) * a - o), t < 0 && (s = n - (Math.ceil(o / a) * a - o)), s && e.stop(!0, !0).animate({scrollLeft: i + s}, {
						duration: 150,
						specialEasing: {width: "linear", height: "easeOut"}
					})
				}, t.prototype._checkEnableListScrollBtn = function () {
					var t = this.$filterListArea, e = this.$filterListPrevBtn, i = this.$filterListNextBtn;
					t.scrollLeft() ? e.removeClass(h["default"].DISABLE_TOGGLE_CLASS) : e.addClass(h["default"].DISABLE_TOGGLE_CLASS), t.scrollLeft() + t.innerWidth() < t.get(0).scrollWidth ? i.removeClass(h["default"].DISABLE_TOGGLE_CLASS) : i.addClass(h["default"].DISABLE_TOGGLE_CLASS)
				}, t.prototype._adjustListScroll = function (t) {
					var e = this.$filterListArea, i = e.find(h["default"].FILTER.DETAIL_FILTER_BTN),
						n = i.filter("*[data-filter='" + t + "']"), o = n.outerWidth() + 2, a = n.offset().left - 1,
						s = e.innerWidth(), r = e.offset().left, l = {duration: 0};
					a < r && e.stop(!0, !0).animate({scrollLeft: "-=" + (r - a)}, l), r + s < a + o && e.stop(!0, !0).animate({scrollLeft: "+=" + (a + o - (r + s) + 1)}, l), this._checkEnableListScrollBtn()
				}, t.prototype._onClickFilterListArrowBtn = function (t, e) {
					this._moveListScroll(t)
				}, t
			}();
			e["default"] = L
		}, 267: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(71), r = n(s), l = i(96), _ = n(l), d = i(97), u = n(d), p = i(105),
				c = n(p), h = i(108), f = (n(h), i(124)), T = n(f), g = i(113), m = n(g);
			T["default"].SLIDE = {
				SLIDE_AREA: ".npe_slide_area",
				SLIDE_INPUT: ".npe_slide",
				SLIDE_NUM: ".npe_slide_number",
				SLIDE_THUMB: ".npe_slide_background_thumb",
				SLIDE_TRACK: ".npe_slide_background_track"
			};
			var E = function (t) {
				function e(i, n) {
					(0, a["default"])(this, e);
					var o = (0, _["default"])(this, t.call(this));
					return o._$wrapper = null, o._$target = null, o._options = null, o._disabled = !1, o._initialize(i, n), o
				}

				return (0, u["default"])(e, t), e.prototype._initialize = function (t, e) {
					this.setTarget(t, e)
				}, e.prototype._setOptions = function (t) {
					this._options = m["default"].extend({
						base: 0,
						min: 0,
						max: 100,
						baseData: 0,
						minData: 0,
						maxData: 100,
						center: 50
					}, t), this._$target.prop("min", this._options.min), this._$target.prop("max", this._options.max)
				}, e.prototype.setTarget = function (t, e) {
					t && (this._$target = t instanceof m["default"] ? t : (0, m["default"])(t), this._$wrapper = this._$target.closest(T["default"].SLIDE.SLIDE_AREA), this._setOptions(e), this._render(), this.activate())
				}, e.prototype.setValueByData = function (t) {
					if (this._$target) {
						var e = this._getValueFromData(t);
						this._$target.val(e), this._render()
					}
				}, e.prototype.setValue = function (t) {
					this._$target && (this._$target.val(t), this._render())
				}, e.prototype.getDataValue = function () {
					if (this._$target) {
						var t = Number(this._$target.val());
						return this._getDataFromValue(t)
					}
				}, e.prototype.getValue = function () {
					if (this._$target) {
						var t = Number(this._$target.val());
						return t
					}
				}, e.prototype._getDataFromValue = function (t) {
					var e = this._options.baseData, i = void 0;
					return t < this._options.base ? (i = (t - this._options.min) / (this._options.base - this._options.min), e = this._options.minData + (this._options.baseData - this._options.minData) * i) : t > this._options.base && (i = (t - this._options.base) / (this._options.max - this._options.base), e = this._options.baseData + (this._options.maxData - this._options.baseData) * i), e
				}, e.prototype._getValueFromData = function (t) {
					var e = this._options.base, i = void 0;
					return t = Number(t), t < this._options.baseData ? (i = Math.abs(this._options.baseData - t) / Math.abs(this._options.baseData - this._options.minData), e = this._options.base - Math.abs(this._options.base - this._options.min) * i) : t > this._options.baseData && (i = Math.abs(t - this._options.baseData) / Math.abs(this._options.maxData - this._options.baseData), e = this._options.base + Math.abs(this._options.max - this._options.base) * i), e
				}, e.prototype.activate = function () {
					this._$wrapper && this._$wrapper.off("mousedown.Slider input.Slider change.Slider mouseup.Slider").on("mousedown.Slider input.Slider change.Slider mouseup.Slider", T["default"].SLIDE.SLIDE_INPUT, this._onSlide.bind(this))
				}, e.prototype.deactivate = function () {
					this._$wrapper && this._$wrapper.off("mousedown.Slider input.Slider change.Slider mouseup.Slider"), this.removeAllListeners()
				}, e.prototype._render = function () {
					var t = Number(this._$target.val()),
						e = (t - this._options.min) / (this._options.max - this._options.min) * 100,
						i = this._options.center, n = e - i, o = i;
					e <= i && (n *= -1, o = e), this._$wrapper.find(T["default"].SLIDE.SLIDE_NUM).css("left", e + "%"), this._$wrapper.find(T["default"].SLIDE.SLIDE_THUMB).css("left", e + "%"), i > 0 && this._$wrapper.find(T["default"].SLIDE.SLIDE_TRACK).css("left", o + "%"), this._$wrapper.find(T["default"].SLIDE.SLIDE_TRACK).css("width", n + "%"), this._$wrapper.find(T["default"].SLIDE.SLIDE_NUM).html(t)
				}, e.prototype._onSlide = function (t) {
					var e = t.type;
					if (!this._disabled) {
						switch (e) {
							case"mousedown":
								this.emit("slideStart", t);
								break;
							case"mouseup":
								this.emit("slideEnd", t);
								break;
							case"change":
							case"input":
								t.preventDefault(), t.dataValue = this.getDataValue(), t.value = this.getValue(), this.emit("slide", t)
						}
						this._render()
					}
				}, e.prototype.show = function () {
					this._$wrapper.show()
				}, e.prototype.hide = function () {
					this._$wrapper.hide()
				}, (0, r["default"])(e, [{
					key: "disabled", get: function () {
						return this._disabled
					}, set: function (t) {
						this._disabled = t, this._$wrapper.toggleClass(T["default"].DISABLE_TOGGLE_CLASS, t)
					}
				}]), e
			}(c["default"]);
			e["default"] = E
		}, 268: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = n(s), l = i(108), _ = n(l), d = i(257), u = n(d), p = i(122),
				c = n(p), h = i(124), f = n(h), T = i(114), g = n(T), m = i(125), E = n(m), C = i(113), S = n(C);
			f["default"].RESIZE = {
				DETAIL_RESIZE_BTN: ".npe_btn_detail_resize[data-resize]",
				DETAIL_RESIZE_CUSTOM_BTN: ".npe_btn_direct_input",
				DETAIL_RESIZE_CUSTOM_INPUT: "input[type=text]",
				DETAIL_RESIZE_CUSTOM_CONFIRM_BTN: ".npe_btn_direct_input_confirm",
				DETAIL_RESIZE_APPLY_ALL_BTN: ".npe_control_resize .npe_btn_apply_all",
				DETAIL_RESIZE_ORIGINAL_TEXT: ".npe_original_text",
				DETAIL_RESIZE_ORIGINAL_SIZE: ".npe_original_size",
				DETAIL_RESIZE_APPLY_SELECT_BTN: ".npe_control_resize .npe_btn_apply_select"
			};
			var I = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$editorWrapper = (0, S["default"])(f["default"].PHOTOEDITOR_WRAP);
					this.$controlWrap = t.find(f["default"].CONTROL_WRAP), this.$controlDetails = t.find(f["default"].CONTROL_DETAIL), this.$detailResizeApplyAllBtn = t.find(f["default"].RESIZE.DETAIL_RESIZE_APPLY_ALL_BTN), this.$detailResizeApplySelectBtn = t.find(f["default"].RESIZE.DETAIL_RESIZE_APPLY_SELECT_BTN), this.$detailResizeOriginalText = t.find(f["default"].RESIZE.DETAIL_RESIZE_ORIGINAL_TEXT), this.$detailResizeOriginalSize = t.find(f["default"].RESIZE.DETAIL_RESIZE_ORIGINAL_SIZE), this._originalWidth = null, this._originalHeight = null
				}, t.prototype._ready = function () {
					var t = this.$editorWrapper;
					this._render(this.$controlDetails, {
						resizePreset: this._controller.options.resizePreset,
						useResizeCustom: this._controller.options.resizeCustom
					}), this.$detailResizeBtns = t.find(f["default"].RESIZE.DETAIL_RESIZE_BTN), this.$detailResizeCustomBtn = t.find(f["default"].RESIZE.DETAIL_RESIZE_CUSTOM_BTN), this.$detailResizeCustomInput = this.$detailResizeCustomBtn.children(f["default"].RESIZE.DETAIL_RESIZE_CUSTOM_INPUT), this.$detailResizeCustomConfirmBtn = this.$detailResizeCustomBtn.children(f["default"].RESIZE.DETAIL_RESIZE_CUSTOM_CONFIRM_BTN)
				}, t.prototype.activate = function () {
					this._ready(), this.$detailResizeBtns.on("mousedown", this._onClickResizeBtn.bind(this)), this.$detailResizeCustomInput.on("focusin", this._onFocusinResizeCustomInput.bind(this)), this.$detailResizeCustomInput.on("focusout", this._onFocusoutResizeCustomInput.bind(this)), this.$detailResizeCustomInput.on("keydown", this._onKeydownResizeCustomInput.bind(this)), this.$detailResizeCustomInput.on("input keyup change", this._onChangeResizeCustom.bind(this)), this.$detailResizeCustomConfirmBtn.on("click", this._onClickResizeCustomConfirmBtn.bind(this)), this.$detailResizeApplyAllBtn.on("click", this._onClickResizeApplyAllBtn.bind(this)), this.$detailResizeApplySelectBtn.on("click", this._onClickResizeApplySelectBtn.bind(this)), (0, S["default"])(document.body).on("click.pe", this._onClickBody.bind(this)), this._controller.on("changeResize", this._onChangeResize.bind(this)), this._controller.on("changeBitmapdata", this._onChangeBitmapdata.bind(this))
				}, t.prototype.deactivate = function () {
					this.$detailResizeBtns.off("mousedown"), this.$detailResizeCustomInput.off("focusin"), this.$detailResizeCustomInput.off("focusout"), this.$detailResizeCustomInput.off("keydown"), this.$detailResizeCustomInput.off("input keyup change"), this.$detailResizeCustomConfirmBtn.off("click"), this.$detailResizeApplyAllBtn.off("click"), this.$detailResizeApplySelectBtn.off("click"), (0, S["default"])(document.body).off("click.pe")
				}, t.prototype._render = function (t, e) {
					u["default"].render(t, e)
				}, t.prototype._onClickResizeBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, S["default"])(e), n = i.data("resize");
					return n === g["default"].CONTROL.RESIZE.CUSTOM ? (this._controller.isWaitingAsyncResponseEvent() || this.$detailResizeCustomInput.trigger("focus"), !1) : void(i.hasClass(f["default"].ACTIVE_TOGGLE_CLASS) || i.hasClass(f["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setEditorResize(n), n === g["default"].CONTROL.RESIZE.ORIGINAL ? E["default"].log("PTE_W_ORIGINAL", e, t) : E["default"].log("PTE_W_SIZE", e, t)))
				}, t.prototype._onChangeResize = function (t) {
					var e = this.$detailResizeBtns, i = this.$detailResizeBtns.filter("[data-resize='" + t + "']"),
						n = this.$detailResizeCustomBtn,
						o = this.$detailResizeBtns.filter("[data-resize='" + g["default"].CONTROL.RESIZE.ORIGINAL + "']"),
						a = this.$detailResizeApplyAllBtn, s = this.$detailResizeApplySelectBtn,
						r = t === g["default"].CONTROL.RESIZE.ORIGINAL || t === this._originalWidth,
						l = this._controller.photos.length;
					r || l <= 1 ? (a.addClass(f["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0), s.addClass(f["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0)) : (a.removeClass(f["default"].DISABLE_TOGGLE_CLASS).removeAttr("disabled"), s.removeClass(f["default"].DISABLE_TOGGLE_CLASS).removeAttr("disabled")), e.removeClass(f["default"].ACTIVE_TOGGLE_CLASS), r ? (o.addClass(f["default"].ACTIVE_TOGGLE_CLASS), this._setResizeCustomInputValue("")) : i.length ? (i.addClass(f["default"].ACTIVE_TOGGLE_CLASS), this._setResizeCustomInputValue("")) : (n.addClass(f["default"].ACTIVE_TOGGLE_CLASS), this._setResizeCustomInputValue(t))
				}, t.prototype._setResizeCustomInputValue = function (t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
						i = this.$detailResizeCustomInput, n = i.data("placeholder");
					e || t || (t = n), i.val(t)
				}, t.prototype._onFocusinResizeCustomInput = function (t) {
					var e = this.$detailResizeBtns, i = t.currentTarget, n = this.$detailResizeCustomBtn,
						o = this.$detailResizeCustomInput, a = Number(o.val()) || "";
					e.addClass(f["default"].DISABLE_TOGGLE_CLASS), n.addClass(f["default"].FOCUS_TOGGLE_CLASS), this._setResizeCustomInputValue(a, !0), E["default"].log("PTE_W_INPUT", i, t)
				}, t.prototype._setResizeCustomInputMaxAttr = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : null,
						e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : null,
						i = this.$detailResizeCustomInput, n = this._controller.getCurrentPhoto();
					t = t || n.getMaximumWidth(), e = e || n.getMinimumWidth(), i.attr({max: t, min: e})
				}, t.prototype._onFocusoutResizeCustomInput = function (t) {
					t.preventDefault();
					var e = this.$detailResizeBtns, i = this.$detailResizeCustomBtn, n = this.$detailResizeCustomInput,
						o = parseInt(n.val(), 10), a = Number(n.attr("min"));
					o < a && (o = a, this._setResizeCustomInputValue(a)), e.removeClass(f["default"].ACTIVE_TOGGLE_CLASS), i.removeClass(f["default"].FOCUS_TOGGLE_CLASS).addClass(f["default"].ACTIVE_TOGGLE_CLASS), this._controller.setEditorResize(o), this._disableResizePresetLargerThanPhoto()
				}, t.prototype._onKeydownResizeCustomInput = function (t) {
					var e = t.keyCode, i = t.shiftKey, n = t.ctrlKey, o = g["default"].KEYCODES;
					return e === o.ENTER || e === o.ESC ? (t.preventDefault(), this.$detailResizeCustomInput.trigger("blur"), !1) : void(S["default"].inArray(e, [46, 8, 9, 116]) !== -1 || 65 === e && n === !0 || 67 === e && n === !0 || 88 === e && n === !0 || e >= 35 && e <= 39 || (i || e < 48 || e > 57) && (e < 96 || e > 105) && t.preventDefault())
				}, t.prototype._onChangeResizeCustom = function (t) {
					var e = this._controller.getCurrentPhoto(), i = this.$detailResizeCustomInput, n = i.val(),
						o = Number(n), a = Number(i.attr("max"));
					if (o > a) {
						var s = void 0;
						s = e.width > r["default"].maxImageSize ? c["default"].getMessage("txt_max") : c["default"].getMessage("txt_original");
						var l = c["default"].getMessage("txt_notice_resize", s, a);
						this._controller.showToastMessage(l), this._setResizeCustomInputValue(a)
					}
					/^0[0-9]+/.test(n) && this._setResizeCustomInputValue(n.replace(/^0/, ""))
				}, t.prototype._onClickResizeCustomConfirmBtn = function (t) {
					t.preventDefault(), this.$detailResizeCustomInput.trigger("blur")
				}, t.prototype._onClickResizeApplyAllBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, S["default"])(e),
						n = this.$detailResizeBtns.filter("." + f["default"].ACTIVE_TOGGLE_CLASS + "[data-resize]").data("resize");
					i.hasClass(f["default"].DISABLE_TOGGLE_CLASS) || (n === g["default"].CONTROL.RESIZE.CUSTOM && (n = Number(this.$detailResizeCustomInput.val())), this._controller.setBatchResizeApply(n), E["default"].log("PTE_W_BATCH", e, t))
				}, t.prototype._onClickResizeApplySelectBtn = function (t) {
					var e = this;
					t.preventDefault();
					var i = t.currentTarget, n = (0, S["default"])(i),
						o = this.$detailResizeBtns.filter("." + f["default"].ACTIVE_TOGGLE_CLASS + "[data-resize]").data("resize");
					n.hasClass(f["default"].DISABLE_TOGGLE_CLASS) || (o === g["default"].CONTROL.RESIZE.CUSTOM && (o = Number(this.$detailResizeCustomInput.val())), this._controller.asyncMultiSelectPhotos().then(function (t) {
						t && t.length && e._controller.setBatchResizeApply(o, t)
					}), E["default"].log("PTE_W_PORTION", i, t))
				}, t.prototype._renderResizeOriginalBtn = function (t) {
					var e = this._controller.getCurrentPhoto(), i = e.width, n = e.height, o = void 0;
					t && (i = t.cropWidth || i, n = t.cropHeight || n), this._originalWidth = i, this._originalHeight = n, o = e.width > r["default"].maxImageSize ? c["default"].getMessage("txt_max") : c["default"].getMessage("txt_original"), this._render(this.$detailResizeOriginalText, {txt_original_btn: o}), this._render(this.$detailResizeOriginalSize, {
						width: i,
						height: n
					})
				}, t.prototype._onChangeCurrentPhoto = function () {
					this._setResizeCustomInputMaxAttr()
				}, t.prototype._onChangeBitmapdata = function (t) {
					var e = this._controller.getCurrentPhoto();
					e && (e.cropWidth = t.cropWidth, e.cropHeight = t.cropHeight, this._disableResizePresetLargerThanPhoto(t), this._renderResizeOriginalBtn(t))
				}, t.prototype._disableResizePresetLargerThanPhoto = function (t) {
					var e = this.$detailResizeCustomBtn, i = this.$detailResizeBtns,
						n = (this._controller.getCurrentPhoto(), t && t.cropWidth ? t.cropWidth : this._originalWidth),
						o = t && t.cropHeight ? t.cropHeight : this._originalHeight,
						a = _["default"].getMaximumWidth(n, o), s = this._getCurrentResizeValue();
					s > a && this._onChangeResize(g["default"].CONTROL.RESIZE.ORIGINAL), e.hasClass(f["default"].FOCUS_TOGGLE_CLASS) ? i.addClass(f["default"].DISABLE_TOGGLE_CLASS) : i.each(function () {
						Number((0, S["default"])(this).data("resize")) > Number(a) ? (0, S["default"])(this).addClass(f["default"].DISABLE_TOGGLE_CLASS) : (0, S["default"])(this).removeClass(f["default"].DISABLE_TOGGLE_CLASS)
					}), this._setResizeCustomInputMaxAttr(a), this._controller.checkModified()
				}, t.prototype._getCurrentResizeValue = function () {
					var t = this.$detailResizeCustomInput,
						e = this.$detailResizeBtns.filter("." + f["default"].ACTIVE_TOGGLE_CLASS), i = e.data("resize");
					return i === g["default"].CONTROL.RESIZE.CUSTOM ? Number(t.val()) : i === g["default"].CONTROL.RESIZE.ORIGINAL ? 0 : Number(i)
				}, t.prototype._onClickBody = function (t) {
					var e = this.$detailResizeCustomInput;
					e.is(":focus") && !(0, S["default"])(t.target).closest(f["default"].RESIZE.DETAIL_RESIZE_CUSTOM_BTN).length && e.trigger("blur")
				}, t
			}();
			e["default"] = I
		}, 269: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = n(s), l = i(108), _ = n(l), d = i(257), u = n(d), p = i(122),
				c = (n(p), i(124)), h = n(c), f = i(114), T = n(f), g = i(125), m = n(g), E = i(113), C = n(E);
			h["default"].CROP = {
				CROP_CONFIRM_BTN: ".npe_control_crop .npe_btn_confirm",
				DETAIL_CROP: ".npe_control_crop",
				DETAIL_CROP_RESET_BTN: ".npe_control_crop .npe_btn_reset",
				DETAIL_CROP_BTN: ".npe_btn_detail_crop",
				DETAIL_CROP_ANGLE_WRAP: ".npe_deg_wrap",
				DETAIL_CROP_ANGLE: ".npe_deg",
				DETAIL_CROP_ANGLE_CIRCLE_CLASS: "npe_deg_circle",
				DETAIL_CROP_ANGLE_CIRCLE_BIG_CLASS: "npe_deg_circle_big",
				DETAIL_CROP_ANGLE_CIRCLE_SMALL_CLASS: "npe_deg_circle_small",
				DETAIL_CROP_ANGLE_CIRCLE_NUM_CLASS: "npe_deg_circle_num",
				DETAIL_CROP_ANGLE_AUTO_BTN: ".npe_btn_deg_auto",
				DETAIL_CROP_ANGLE_90_BTN: ".npe_btn_rotate",
				DETAIL_CROP_FLIP_X_BTN: ".npe_btn_horizon",
				DETAIL_CROP_FLIP_Y_BTN: ".npe_btn_vertical",
				CROP_SIZE_WRAP: ".npe_size_wrap",
				CROP_SIZE_WIDTH: ".npe_size_width_num",
				CROP_SIZE_HEIGHT: ".npe_size_height_num",
				CROP_RESIZE_MODE_CLASS: "resize_mode"
			};
			var S = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$editorWrapper = (0, C["default"])(h["default"].PHOTOEDITOR_WRAP);
					this.$canvasWrap = t.find(h["default"].CANVAS_WRAP), this.$canvas = this.$canvasWrap.find(h["default"].CANVAS), this.$controlWrap = t.find(h["default"].CROP.CONTROL_WRAP), this.$controlDetails = t.find(h["default"].CROP.CONTROL_DETAIL), this.$detailCropResetBtn = t.find(h["default"].CROP.DETAIL_CROP_RESET_BTN), this.$cropAngle90Btn = t.find(h["default"].CROP.DETAIL_CROP_ANGLE_90_BTN), this.$cropConfirmBtn = t.find(h["default"].CROP.CROP_CONFIRM_BTN), this.$cropAngleWrap = t.find(h["default"].CROP.DETAIL_CROP_ANGLE_WRAP), this.$cropAngle = this.$cropAngleWrap.find(h["default"].CROP.DETAIL_CROP_ANGLE), this.$cropAngleAutoBtn = this.$cropAngleWrap.find(h["default"].CROP.DETAIL_CROP_ANGLE_AUTO_BTN), this.$cropSizeWrap = t.find(h["default"].CROP.CROP_SIZE_WRAP), this.$cropSizeWidth = t.find(h["default"].CROP.CROP_SIZE_WIDTH), this.$cropSizeHeight = t.find(h["default"].CROP.CROP_SIZE_HEIGHT), this.$detailCropBtns = t.find(h["default"].CROP.DETAIL_CROP_BTN), this.$flipXBtn = t.find(h["default"].CROP.DETAIL_CROP_FLIP_X_BTN), this.$flipYBtn = t.find(h["default"].CROP.DETAIL_CROP_FLIP_Y_BTN), this._renderCropAngleGrid()
				}, t.prototype.activate = function () {
					this.$detailCropBtns.on("click", this._onClickCropBtn.bind(this)), this.$detailCropResetBtn.on("click", this._onClickCropResetBtn.bind(this)), this.$cropConfirmBtn.on("click", this._onClickCropConfirmBtn.bind(this)), this.$cropAngle90Btn.on("click", this._onClickAngle90Btn.bind(this)), this.$cropAngleAutoBtn.on("click", this._onClickAngleAutoBtn.bind(this)), this.$cropAngleWrap.on("mousedown", this._onMousedownOnAngleUI.bind(this)), this.$flipXBtn.on("click", this._onClickFlipXBtn.bind(this)), this.$flipYBtn.on("click", this._onClickFlipYBtn.bind(this)), this._controller.on("canvasReady", this._onCanvasReady.bind(this)), this._controller.on("checkCropModified", this._onCheckCropModified.bind(this)), this._controller.on("checkCropEditable", this._onCheckCropEditable.bind(this)), this._controller.on("changeCrop", this._onChangeCrop.bind(this)), this._controller.on("changeAspectRatio", this._onChangeAspectRatio.bind(this)), this._controller.on("changeCropAngleStart", this._onChangeCropAngleStart.bind(this)), this._controller.on("changeCropAngle", this._onChangeCropAngle.bind(this)),
						this._controller.on("changeCropArea", this._onChangeCropArea.bind(this)), this._controller.on("changeCropAreaStart", this._onChangeCropAreaStart.bind(this)), this._controller.on("changeCropAreaEnd", this._onChangeCropAreaEnd.bind(this)), this._controller.on("checkCropRotation", this._onCheckCropRotaion.bind(this)), this._controller.on("checkCropMinimum", this._onCheckCropMinimum.bind(this)), this._controller.on("aspectRatioMotionStart", this._aspectRatioMotionStart.bind(this)), this._controller.on("changeControl", this._onChangeControl.bind(this))
				}, t.prototype.deactivate = function () {
					this.$detailCropBtns.off("click"), this.$detailCropResetBtn.off("click"), this.$cropConfirmBtn.off("click"), this.$cropAngle90Btn.off("click"), this.$cropAngleAutoBtn.off("click"), this.$cropAngleWrap.off("mousedown"), this.$flipXBtn.off("click"), this.$flipYBtn.off("click")
				}, t.prototype._render = function (t, e) {
					u["default"].render(t, e)
				}, t.prototype._onCanvasReady = function (t) {
					this._renderCropThumbnails()
				}, t.prototype._onCheckCropEditable = function (t) {
					var e = this.$detailCropBtns;
					t ? e.removeClass(h["default"].DISABLE_TOGGLE_CLASS) : e.removeClass(h["default"].ACTIVE_TOGGLE_CLASS).addClass(h["default"].DISABLE_TOGGLE_CLASS)
				}, t.prototype._onClickCropBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, C["default"])(e).data("crop"), n = (0, C["default"])(e);
					n.hasClass(h["default"].ACTIVE_TOGGLE_CLASS) || n.hasClass(h["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setEditorCrop(i), m["default"].log("PTE_C_" + i.toUpperCase().replace(":", ""), e, t))
				}, t.prototype._onChangeCrop = function (t) {
					var e = this.$detailCropBtns, i = e.filter("[data-crop='" + t + "']");
					i.length && (e.removeClass(h["default"].ACTIVE_TOGGLE_CLASS), i.hasClass(h["default"].DISABLE_TOGGLE_CLASS) || i.addClass(h["default"].ACTIVE_TOGGLE_CLASS))
				}, t.prototype._onClickCropResetBtn = function (t) {
					t.preventDefault();
					var e = this.$detailCropResetBtn;
					e.hasClass(h["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setEditorCropReset(), m["default"].log("PTE_C_RE", t.currentTarget, t))
				}, t.prototype._onClickCropConfirmBtn = function (t) {
					t.preventDefault();
					var e = this.$detailCropBtns.filter("." + h["default"].ACTIVE_TOGGLE_CLASS).data("crop");
					this._controller.setEditorCropConfirm(e), m["default"].log("PTE_C_OK", t.currentTarget, t)
				}, t.prototype._onClickAngle90Btn = function (t) {
					t.preventDefault(), this._controller.setEditorRotate(), m["default"].log("PTE_C_ROTATE", t.currentTarget, t)
				}, t.prototype._onCheckCropModified = function (t) {
					var e = this.$detailCropResetBtn;
					t ? e.removeClass(h["default"].DISABLE_TOGGLE_CLASS) : e.addClass(h["default"].DISABLE_TOGGLE_CLASS)
				}, t.prototype._renderCropThumbnails = function () {
					var t = this._controller.getCurrentPhoto(), e = this.$detailCropBtns,
						i = r["default"].cropThumbnailWidth, n = r["default"].cropThumbnailHeight;
					e.each(function () {
						var e = (0, C["default"])(this).find(h["default"].DETAIL_THUMBNAIL_IMG),
							o = (0, C["default"])(this).data("crop"), a = void 0, s = void 0, r = 0, l = 0;
						if (o === T["default"].CONTROL.CROP.ORIGINAL || o === T["default"].CONTROL.CROP.FREE) {
							var d = _["default"].getThumbnailSize(t.width, t.height, i, n);
							r = d[0], l = d[1]
						} else {
							var u = o.split(":");
							a = u[0], s = u[1];
							var p = _["default"].getCroppedThumbnailSize(t.width, t.height, i, n, a, s);
							r = p[0], l = p[1]
						}
						e.css({
							width: r + "px",
							height: l + "px",
							background: 'url("' + t.domain + t.originalThumbnail + '") center center',
							"background-size": "cover"
						})
					})
				}, t.prototype._onChangeAspectRatio = function (t) {
					var e = t.width + ":" + t.height;
					this._onChangeCrop(e)
				}, t.prototype._onClickAngleAutoBtn = function (t) {
					t.preventDefault();
					var e = this.$cropAngleAutoBtn;
					if (!e.hasClass(h["default"].DISABLE_TOGGLE_CLASS)) {
						var i = this._controller.setEditorAutoRotate();
						i || e.addClass(h["default"].DISABLE_TOGGLE_CLASS), m["default"].log("PTE_C_AUTO", t.currentTarget, t)
					}
				}, t.prototype._onMousedownOnAngleUI = function (t) {
					if (!(0, C["default"])(t.target).hasClass(h["default"].CROP.DETAIL_CROP_ANGLE_AUTO_BTN)) {
						var e = this.$canvas[0], i = document.createEvent("MouseEvents");
						return i.initMouseEvent(t.type, !0, !0, t.view, 1, t.screenX, t.screenY, t.clientX, t.clientY, !1, !1, !1, !1, 0, null), e.dispatchEvent(i), !1
					}
				}, t.prototype._renderCropAngleGrid = function () {
					for (var t = this.$cropAngle, e = this.$cropAngleWrap, i = -45; i < 46; i++) {
						var n = (0, C["default"])('<span class="' + h["default"].CROP.DETAIL_CROP_ANGLE_CIRCLE_CLASS + '"></span>'),
							o = Math.PI * (2 * i) / 180, a = t.width() / 2, s = Math.round(-a * Math.cos(o) + a),
							r = Math.round(-a * Math.sin(o) + a);
						i % 5 === 0 ? (n.addClass(h["default"].CROP.DETAIL_CROP_ANGLE_CIRCLE_BIG_CLASS), n.append('<em class="' + h["default"].CROP.DETAIL_CROP_ANGLE_CIRCLE_NUM_CLASS + '">' + i + "</em>"), n.css("transform", "rotate(" + 2 * -i + "deg)")) : n.addClass(h["default"].CROP.DETAIL_CROP_ANGLE_CIRCLE_SMALL_CLASS), n.css("top", r), n.css("right", s), n.attr("data-deg", i), this.$cropAngle.append(n)
					}
					e.find("." + h["default"].CROP.DETAIL_CROP_ANGLE_CIRCLE_CLASS + "[data-deg=0]").addClass(h["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onChangeControl = function (t) {
					"crop" === t ? this.$canvasWrap.addClass(h["default"].CROP.CROP_RESIZE_MODE_CLASS) : (this.$canvasWrap.removeClass(h["default"].CROP.CROP_RESIZE_MODE_CLASS), this._hideCropAngle(), this._hideCropSize())
				}, t.prototype._showCropAngle = function () {
					var t = this._controller.currentControl;
					"crop" !== t || this._isChangingCropArea || !this._controller.isCropEditable() || this._controller.isCropMinimum() ? this._hideCropAngle() : this.$cropAngleWrap.addClass(h["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._hideCropAngle = function () {
					this.$cropAngleWrap.removeClass(h["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._showCropSize = function () {
					this.$cropSizeWrap.addClass(h["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._hideCropSize = function () {
					this.$cropSizeWrap.removeClass(h["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onCheckCropRotaion = function (t) {
					var e = this.$cropAngleAutoBtn, i = _["default"].getIEVersion();
					t || i && i <= 10 ? e.addClass(h["default"].DISABLE_TOGGLE_CLASS) : e.removeClass(h["default"].DISABLE_TOGGLE_CLASS)
				}, t.prototype._onCheckCropMinimum = function () {
					this._showCropAngle()
				}, t.prototype._onChangeCropAngleStart = function (t) {
					m["default"].log("PTE_C_ANGLE", this._controller._canvas, this._controller._latelyMouseDownEvent)
				}, t.prototype._onChangeCropAngle = function (t) {
					var e = this.$cropAngle, i = this.$cropAngleWrap, n = t.rotation;
					n < -45 && (n = -45), 45 < n && (n = 45), e.css("transform", "rotate(" + 2 * n + "deg)"), i.find("." + h["default"].CROP.DETAIL_CROP_ANGLE_CIRCLE_CLASS + '[data-deg="' + Math.round(n) + '"]').addClass(h["default"].ACTIVE_TOGGLE_CLASS).siblings().removeClass(h["default"].ACTIVE_TOGGLE_CLASS), this._controller.checkCropRotation(), this._controller.checkCropModified()
				}, t.prototype._onChangeCropAreaStart = function (t) {
					this._isChangingCropArea = !0, this._onChangeCropArea(t), this._showCropSize(), this._hideCropAngle()
				}, t.prototype._aspectRatioMotionStart = function (t) {
					this._hideCropAngle()
				}, t.prototype._onChangeCropArea = function (t) {
					var e = t.bounds, i = t.dimension;
					e && this.$cropAngleWrap.css({
						left: e.x + e.width + 3,
						top: e.y + e.height / 2
					}), e && i && (this.$cropSizeWrap.css({
						left: e.x + e.width,
						top: e.y
					}), this.$cropSizeWidth.text(Math.ceil(i.width)), this.$cropSizeHeight.text(Math.ceil(i.height))), this._controller.checkCropModified()
				}, t.prototype._onChangeCropAreaEnd = function (t) {
					this._isChangingCropArea && m["default"].log("PTE_C_DROP", this._controller._canvas, this._controller._latelyMouseDownEvent), this._isChangingCropArea = !1, this._hideCropSize(), this._onChangeCropArea(t), this._showCropAngle()
				}, t.prototype._onClickFlipXBtn = function (t) {
					this._controller.setEditorFlipX(), m["default"].log("PTE_C_HRZ", t.currentTarget, t)
				}, t.prototype._onClickFlipYBtn = function (t) {
					this._controller.setEditorFlipY(), m["default"].log("PTE_C_VRT", t.currentTarget, t)
				}, t
			}();
			e["default"] = S
		}, 270: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = (n(s), i(108)), l = (n(r), i(257)), _ = n(l), d = i(122),
				u = (n(d), i(124)), p = n(u), c = i(114), h = n(c), f = i(125), T = n(f), g = i(267), m = n(g),
				E = i(113), C = n(E);
			p["default"].ADJUST = {
				DETAIL_ADJUST_BTN: ".npe_btn_detail_effect[data-adjust]",
				DETAIL_ADJUST_RESET_BTN: ".npe_control_effect .npe_btn_reset",
				ADJUST_SLIDE: ".npe_control_detail_slide_area .npe_slide"
			};
			var S = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$editorWrapper = (0, C["default"])(p["default"].PHOTOEDITOR_WRAP);
					this.$controlWrap = t.find(p["default"].CONTROL_WRAP), this.$controlDetails = t.find(p["default"].CONTROL_DETAIL), this.$adjustSlides = t.find(p["default"].ADJUST.ADJUST_SLIDE), this.$detailAdjustBtns = t.find(p["default"].ADJUST.DETAIL_ADJUST_BTN), this.$detailAdjustResetBtn = t.find(p["default"].ADJUST.DETAIL_ADJUST_RESET_BTN), this._adjustSlider = new m["default"]
				}, t.prototype.activate = function () {
					this.$detailAdjustBtns.on("click", this._onClickAdjustBtn.bind(this)), this.$detailAdjustResetBtn.on("click", this._onClickAdjustResetBtn.bind(this)), this._adjustSlider.activate(), this._adjustSlider.on("slideStart", this._onAdjustSlideStart.bind(this)), this._adjustSlider.on("slide", this._onAdjustSlide.bind(this)), this._adjustSlider.on("slideEnd", this._onAdjustSlideEnd.bind(this)), this._controller.on("checkAdjustModified", this._onCheckAdjustModified.bind(this)), this._controller.on("changeAdjust", this._onChangeAdjust.bind(this)), this._controller.on("changeAutoAdjust", this._onChangeAutoAdjust.bind(this)), this._controller.on("initControlValues", this._onInitControlValues.bind(this))
				}, t.prototype.deactivate = function () {
					this.$detailAdjustBtns.off("click"), this.$detailAdjustResetBtn.off("click")
				}, t.prototype._render = function (t, e) {
					_["default"].render(t, e)
				}, t.prototype._onInitControlValues = function (t) {
					this._onChangeAutoAdjust(t.adjust.autolevel), this._setAdjustControlValue(h["default"].CONTROL.ADJUST.BRIGHTNESS, t.adjust[h["default"].CONTROL.ADJUST.BRIGHTNESS]), this._setAdjustControlValue(h["default"].CONTROL.ADJUST.SATURATION, t.adjust[h["default"].CONTROL.ADJUST.SATURATION]), this._setAdjustControlValue(h["default"].CONTROL.ADJUST.SHARPEN, t.adjust[h["default"].CONTROL.ADJUST.SHARPEN]), this._setAdjustControlValue(h["default"].CONTROL.ADJUST.KELVIN, t.adjust[h["default"].CONTROL.ADJUST.KELVIN]), this._setAdjustControlValue(h["default"].CONTROL.ADJUST.CONTRAST, t.adjust[h["default"].CONTROL.ADJUST.CONTRAST])
				}, t.prototype._startRangeMoving = function (t) {
					this._controller.setEditorPreview(!0), this._rangeStartPoint = t.value
				}, t.prototype._endRangeMoving = function (t) {
					this._controller.setEditorPreview(!1), this._controller.pushHistory(), this._rangeMoved = t.value - this._rangeStartPoint, 0 !== this._rangeMoved && (0, C["default"])(t).trigger("input")
				}, t.prototype._showAdjustSlides = function (t) {
					var e = this.$adjustSlides, i = e.filter(function () {
						return (0, C["default"])(this).data("adjust") === t
					});
					e.removeClass(p["default"].ACTIVE_TOGGLE_CLASS), i.addClass(p["default"].ACTIVE_TOGGLE_CLASS), this._adjustSlider.setTarget(i[0], {
						base: Number(i.data("base")),
						min: Number(i.attr("min")),
						max: Number(i.attr("max")),
						baseData: Number(i.data("basedata")),
						minData: Number(i.data("mindata")),
						maxData: Number(i.data("maxdata"))
					})
				}, t.prototype._onClickAdjustBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, C["default"])(e), n = i.data("adjust");
					return n === h["default"].CONTROL.ADJUST.AUTO ? void this._onClickAutoAdjustBtn(t) : (this._controller.changeAdjust(n), void T["default"].log("PTE_R_" + n.toUpperCase(), e, t))
				}, t.prototype._onClickAutoAdjustBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, C["default"])(e), n = i.hasClass(p["default"].ACTIVE_TOGGLE_CLASS);
					this._controller.setEditorAutoAdjust(!n), T["default"].log("PTE_R_AUTO", e, t)
				}, t.prototype._onChangeAutoAdjust = function (t) {
					var e = this.$detailAdjustBtns.filter("[data-adjust='" + h["default"].CONTROL.ADJUST.AUTO + "']");
					t ? e.addClass(p["default"].ACTIVE_TOGGLE_CLASS) : e.removeClass(p["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onChangeAdjust = function (t) {
					var e = this.$detailAdjustBtns.filter("[data-adjust='" + t + "']");
					e.addClass(p["default"].ACTIVE_TOGGLE_CLASS).siblings("[data-adjust!='" + h["default"].CONTROL.ADJUST.AUTO + "']").removeClass(p["default"].ACTIVE_TOGGLE_CLASS), this._showAdjustSlides(t)
				}, t.prototype._onClickAdjustResetBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, C["default"])(e);
					i.hasClass(p["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setEditorAdjustReset(), this._controller.pushHistory(), this._onChangeAutoAdjust(!1), this._resetAdjustControlAndValues(), T["default"].log("PTE_R_RESET", e, t))
				}, t.prototype._resetAdjustControlAndValues = function () {
					var t = this;
					this._onChangeAdjust(h["default"].CONTROL.ADJUST.BRIGHTNESS), this.$adjustSlides.each(function () {
						var e = (0, C["default"])(this).data("adjust"), i = (0, C["default"])(this).data("init");
						t._setAdjustControlValue(e, i)
					})
				}, t.prototype._onAdjustSlide = function (t) {
					var e = t.currentTarget, i = (0, C["default"])(e).data("adjust");
					this._controller.setEditorAdjust(i, t.dataValue), this._controller.checkAdjustModified()
				}, t.prototype._onAdjustSlideStart = function (t) {
					var e = t.currentTarget;
					this._startRangeMoving(e)
				}, t.prototype._onAdjustSlideEnd = function (t) {
					var e = t.currentTarget;
					this._endRangeMoving(e)
				}, t.prototype._setAdjustControlValue = function (t, e) {
					this.$adjustSlides.filter("[data-adjust='" + t + "']").get(0);
					this._showAdjustSlides(t), this._adjustSlider.setValueByData(e)
				}, t.prototype._onCheckAdjustModified = function (t) {
					var e = this.$detailAdjustResetBtn;
					t ? e.removeClass(p["default"].DISABLE_TOGGLE_CLASS) : e.addClass(p["default"].DISABLE_TOGGLE_CLASS)
				}, t
			}();
			e["default"] = S
		}, 271: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = (n(s), i(108)), l = (n(r), i(257)), _ = n(l), d = i(122), u = n(d),
				p = i(124), c = n(p), h = i(114), f = n(h), T = i(125), g = n(T), m = i(113), E = n(m);
			c["default"].MOSAIC = {
				DETAIL_MOSAIC_RESET_BTN: ".npe_control_mosaic .npe_btn_reset",
				DETAIL_MOSAIC_BTN: ".npe_btn_detail_mosaic"
			};
			var C = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$editorWrapper = (0, E["default"])(c["default"].PHOTOEDITOR_WRAP);
					this.$controlWrap = t.find(c["default"].CONTROL_WRAP), this.$controlDetails = t.find(c["default"].CONTROL_DETAIL), this.$detailMosaicResetBtn = t.find(c["default"].MOSAIC.DETAIL_MOSAIC_RESET_BTN), this.$detailMosaicBtns = t.find(c["default"].MOSAIC.DETAIL_MOSAIC_BTN)
				}, t.prototype.activate = function () {
					this.$detailMosaicBtns.on("click", this._onClickMosaicBtn.bind(this)), this.$detailMosaicResetBtn.on("click", this._onClickMosaicResetBtn.bind(this)), (0, E["default"])(window).on("mouseup.pe", this._onMouseUpWindow.bind(this)), this._controller.on("changeMosaic", this._onChangeMosaic.bind(this)), this._controller.on("changeHistory", this._onChangeHistory.bind(this))
				}, t.prototype.deactivate = function () {
					this.$detailMosaicBtns.off("click"), this.$detailMosaicResetBtn.off("click"), (0, E["default"])(window).off("mouseup.pe")
				}, t.prototype._render = function (t, e) {
					_["default"].render(t, e)
				}, t.prototype._onClickMosaicBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, E["default"])(e).data("mosaic"), n = (0, E["default"])(e);
					n.hasClass(c["default"].ACTIVE_TOGGLE_CLASS) || n.hasClass(c["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setEditorMosaic(i), g["default"].log("PTE_M_TYPE", e, t))
				}, t.prototype._onChangeMosaic = function (t) {
					var e = this.$detailMosaicBtns.filter("[data-mosaic='" + t + "']");
					e.hasClass(c["default"].ACTIVE_TOGGLE_CLASS) || e.addClass(c["default"].ACTIVE_TOGGLE_CLASS).siblings().removeClass(c["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onClickMosaicResetBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = this.$detailMosaicResetBtn;
					i.hasClass(c["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setEditorMosaicReset(), g["default"].log("PTE_M_RESET", e, t))
				}, t.prototype._onMouseUpWindow = function (t) {
					var e = this._controller.currentControl;
					e === f["default"].CONTROLS.MOSAIC && this._controller.checkModified()
				}, t.prototype._onChangeHistory = function (t) {
					var e = this._controller.currentControl;
					e === f["default"].CONTROLS.MOSAIC && this._controller.showTooltipOnce("compare", u["default"].getMessage("txt_notice_compare"))
				}, t
			}();
			e["default"] = C
		}, 272: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = n(s), l = i(108), _ = n(l), d = i(257), u = n(d), p = i(122),
				c = n(p), h = i(124), f = n(h), T = i(114), g = n(T), m = i(125), E = n(m), C = i(273), S = n(C),
				I = i(113), L = n(I);
			f["default"].SIGNATURE = {
				DETAIL_SIGNATURE_BTN: ".npe_control_sign .npe_btn_icon[data-signature]",
				DETAIL_SIGNATURE_APPLY_ALL_BTN: ".npe_control_sign .npe_btn_apply_all",
				DETAIL_SIGNATURE_APPLY_SELECT_BTN: ".npe_control_sign .npe_btn_apply_select",
				DETAIL_SIGNATURE_WRAP: ".npe_detail_option[data-signature]",
				IMAGE_UPLOAD_INPUT: ".npe_sign_image_file",
				IMAGE_UPLOAD_FILENAME: ".npe_sign_image_data",
				TEXT_INPUT: ".npe_sign_text_input",
				TEXT_TOOL: ".npe_control_sign .npe_text_tool_area",
				SIGNATURE_COORD_W: ".npe_sign_coord_w",
				SIGNATURE_COORD_H: ".npe_sign_coord_h",
				SIGNATURE_COORD_NUM: ".npe_sign_coord_num",
				SLIDE_THUMB: ".npe_slide_background_thumb"
			};
			var A = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this._photoinfraRequest = e._photoinfraRequest, this._storage = e._storage, this.init()
				}

				return t.prototype.init = function () {
					var t = this._controller.options;
					this._defaultTextInfo = {
						bgColor: "#000000",
						textColor: "#ffffff",
						text: void 0,
						bold: void 0,
						italic: void 0,
						fontSize: void 0,
						font: void 0,
						bgAlpha: .5,
						textAlpha: 1,
						containerPosition: {x: 10, y: 10},
						align: "BR",
						textPadding: {left: 10, top: 5, right: 10, bottom: 5}
					}, this._textInfo = L["default"].extend(!0, {}, this._defaultTextInfo), this._currentSignatureType = g["default"].CONTROL.SIGNATURE.NONE;
					var e = this.$editorWrapper = (0, L["default"])(f["default"].PHOTOEDITOR_WRAP);
					this.$canvas = this.$editorWrapper.find(f["default"].CANVAS), this.$detailSignatureBtns = e.find(f["default"].SIGNATURE.DETAIL_SIGNATURE_BTN), this.$detailSignatureApplyAllBtn = e.find(f["default"].SIGNATURE.DETAIL_SIGNATURE_APPLY_ALL_BTN), this.$detailSignatureApplySelectBtn = e.find(f["default"].SIGNATURE.DETAIL_SIGNATURE_APPLY_SELECT_BTN), this.$detailSignatureWraps = e.find(f["default"].SIGNATURE.DETAIL_SIGNATURE_WRAP), this.$imageUploadInput = e.find(f["default"].SIGNATURE.IMAGE_UPLOAD_INPUT), this.$imageUploadFilename = e.find(f["default"].SIGNATURE.IMAGE_UPLOAD_FILENAME), this.$textInput = e.find(f["default"].SIGNATURE.TEXT_INPUT), this.$signatureCoordWidth = e.find(f["default"].SIGNATURE.SIGNATURE_COORD_W), this.$signatureCoordHeight = e.find(f["default"].SIGNATURE.SIGNATURE_COORD_H), this.$fitToScreenToggleCheckbox = e.find(f["default"].FITTOSCREEN_TOGGLE_CHECKBOX), this._textToolbar = new S["default"](e.find(f["default"].SIGNATURE.TEXT_TOOL), this._storage, {
						defaultTextColor: this._defaultTextInfo.textColor,
						defaultBgColor: this._defaultTextInfo.bgColor,
						defaultTextAlpha: this._defaultTextInfo.textAlpha,
						defaultBgAlpha: this._defaultTextInfo.bgAlpha
					}), this.$imageUploadInput.attr("accept", t.allowedImageExtensions.map(function (t) {
						return "." + t
					}).join(", ").toLowerCase())
				}, t.prototype.activate = function () {
					this.$detailSignatureBtns.on("click", this._onClickSignatureBtn.bind(this)), this.$imageUploadInput.on("change", this._onChangeSignatureUploadInput.bind(this)), this.$textInput.on("mousedown", this._onMousedownTextInput.bind(this)), this.$textInput.on("blur", this._onBlurTextInput.bind(this)), this.$textInput.on("input change", this._onChangeTextInput.bind(this)), this.$detailSignatureApplyAllBtn.on("click", this._onClickSignatureApplyAllBtn.bind(this)), this.$detailSignatureApplySelectBtn.on("click", this._onClickSignatureApplySelectBtn.bind(this)), this._textToolbar.on("update", this._onUpdateTextToolbar.bind(this)), this._textToolbar.activate(), this._controller.on("changeTabToEdit", this._onChangeTabToEdit.bind(this)), this._controller.on("close", this._onClose.bind(this)), this._controller.on("updatePhotos", this._onUpdatePhotos.bind(this)), this._controller.on("changeCurrentPhoto", this._onChangeCurrentPhoto.bind(this)), this._controller.on("changeControl", this._onChangeControl.bind(this)), this._controller.on("changeSignature", this._onChangeSignature.bind(this)), this._controller.on("initControlValues", this._onInitControlValues.bind(this)), this._controller.on("updateSignatureWidthTooltip", this._onUpdateSignatureWidthTooltip.bind(this)), this._controller.on("addSignatureWidthTooltip", this._onAddSignatureWidthTooltip.bind(this)), this._controller.on("removeSignatureWidthTooltip", this._onRemoveSignatureWidthTooltip.bind(this)), this._controller.on("updateSignatureHeightTooltip", this._onUpdateSignatureHeightTooltip.bind(this)), this._controller.on("addSignatureHeightTooltip", this._onAddSignatureHeightTooltip.bind(this)), this._controller.on("removeSignatureHeightTooltip", this._onRemoveSignatureHeightTooltip.bind(this)), this._controller.on("exitSignature", this._onExitSignature.bind(this)), this._controller.on("imageSignReady", this._onImageSignReady.bind(this))
				}, t.prototype.deactivate = function () {
					this.$detailSignatureBtns.off("click"), this.$imageUploadInput.off("change"), this.$textInput.off("mousedown"), this.$textInput.off("blur"), this.$textInput.off("input change"), this.$detailSignatureApplyAllBtn.off("click"), this.$detailSignatureApplySelectBtn.off("click"), this._textToolbar.deactivate()
				}, t.prototype._render = function (t, e) {
					u["default"].render(t, e)
				}, t.prototype._onChangeTabToEdit = function () {
					this._loadTextInfoFromLocalStorage(), this._updateUIFromTextinfo(), this._textToolbar.loadGoogleWebfonts()
				}, t.prototype._loadTextInfoFromLocalStorage = function () {
					var t = this._controller.options.signature;
					this._textInfo.text = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT) || _["default"].byteCut(t.defaultText, t.byteLimit), this._textInfo.font = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_FAMILY), this._textInfo.fontSize = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_SIZE), this._textInfo.bold = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_BOLD) || this._defaultTextInfo.bold, this._textInfo.italic = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_ITALIC) || this._defaultTextInfo.italic, this._textInfo.textColor = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_COLOR) || this._defaultTextInfo.textColor, this._textInfo.textAlpha = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_ALPHA), this._textInfo.bgColor = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_BG_COLOR) || this._defaultTextInfo.bgColor, this._textInfo.bgAlpha = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_BG_ALPHA), "string" == typeof this._textInfo.bold && (this._textInfo.bold = "true" === this._textInfo.bold), "string" == typeof this._textInfo.italic && (this._textInfo.italic = "true" === this._textInfo.italic), "undefined" != typeof this._textInfo.textAlpha && null !== this._textInfo.textAlpha || (this._textInfo.textAlpha = this._defaultTextInfo.textAlpha), "undefined" != typeof this._textInfo.bgAlpha && null !== this._textInfo.bgAlpha || (this._textInfo.bgAlpha = this._defaultTextInfo.bgAlpha)
				}, t.prototype._updateUIFromTextinfo = function () {
					this._textToolbar.setFont(this._textInfo.font), this._textToolbar.setFontSize(this._textInfo.fontSize), this._textToolbar.setBold(this._textInfo.bold), this._textToolbar.setItalic(this._textInfo.italic), this._textToolbar.setFontColor(this._textInfo.textColor, this._textInfo.textAlpha), this._textToolbar.setBackColor(this._textInfo.bgColor, this._textInfo.bgAlpha), this.$textInput.val(this._textInfo.text), this.$textInput.attr("maxlength", this._controller.options.signature.byteLimit)
				}, t.prototype._setDefaultFontSize = function () {
					var t = this._controller.getCurrentPhoto(), e = t.width > 1e3 ? 34 : 16;
					this._textToolbar.setDefaultFontSize(e)
				}, t.prototype._onClose = function () {
					this._controller.setEditorSignatureReset(), this.$fitToScreenToggleCheckbox.removeAttr("checked")
				}, t.prototype._onUpdatePhotos = function () {
					this._checkApplyAllBtnState()
				}, t.prototype._checkApplyAllBtnState = function () {
					var t = this, e = this.$detailSignatureApplyAllBtn, i = this.$detailSignatureApplySelectBtn,
						n = this._controller.photos, o = !1;
					return n.length <= 1 ? (e.addClass(f["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0), void i.addClass(f["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0)) : this._currentSignatureType !== g["default"].CONTROL.SIGNATURE.NONE || (n.forEach(function (e) {
						t._isPhotoAppliedSignature(e) && (o = !0)
					}), o) ? (e.removeClass(f["default"].DISABLE_TOGGLE_CLASS).removeAttr("disabled"), void i.removeClass(f["default"].DISABLE_TOGGLE_CLASS).removeAttr("disabled")) : (e.addClass(f["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0), void i.addClass(f["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0))
				}, t.prototype._isPhotoAppliedSignature = function (t) {
					var e = t.snapshot, i = t.batchOptions, n = !1;
					return i.signature && i.signature.type === g["default"].CONTROL.SIGNATURE.NONE || (e && e.signature && e.signature.signature || i.signature && i.signature.type !== g["default"].CONTROL.SIGNATURE.NONE) && (n = !0), n
				}, t.prototype._onChangeCurrentPhoto = function () {
					this._setDefaultFontSize(), this._onRemoveSignatureWidthTooltip(), this._onRemoveSignatureHeightTooltip()
				}, t.prototype._onChangeControl = function (t) {
					var e = this._controller.getCurrentPhoto(), i = void 0;
					if (e) {
						if (i = e.getSnapshotFromBatchOption() || {}, t === g["default"].CONTROLS.SIGNATURE || this._currentSignatureType !== g["default"].CONTROL.SIGNATURE.TEXT || this._textInfo.text.length || this._controller.setEditorSignatureReset(), t !== g["default"].CONTROLS.SIGNATURE || this._currentSignatureType !== g["default"].CONTROL.SIGNATURE.TEXT || this._textInfo.text.length || (this._updateTextinfoFromUI(), this._controller.setEditorSignatureText(this._textInfo)), t === g["default"].CONTROLS.SIGNATURE && this._currentSignatureType === g["default"].CONTROL.SIGNATURE.NONE && !e.signatureTypeChanged && !i.signature) {
							var n = this._storage.getItem(g["default"].COOKIES.SIGNATURE_TYPE_LASTEST) || g["default"].CONTROL.SIGNATURE.IMAGE;
							this._controller.changeSignature(n)
						}
						this._controller.checkModified()
					}
				}, t.prototype._onInitControlValues = function (t) {
					this._renderSignatureBtnUI(t.signature)
				}, t.prototype._onClickSignatureBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, L["default"])(e), n = i.data("signature");
					i.hasClass(f["default"].ACTIVE_TOGGLE_CLASS) || i.hasClass(f["default"].DISABLE_TOGGLE_CLASS) || this._controller.isWaitingAsyncResponseEvent() || (this._controller.changeSignature(n), n === g["default"].CONTROL.SIGNATURE.NONE && this._controller.pushHistory(), E["default"].log("PTE_G_" + n.toUpperCase(), e, t))
				}, t.prototype._onChangeSignatureUploadInput = function (t) {
					var e = this, i = this._controller.options, n = t.currentTarget, o = n.files, a = o[0];
					if (o && a) {
						var s = a.name, l = s.toLowerCase().match(".(" + i.allowedImageExtensions.join("|") + ")$"),
							_ = l ? l[1] : null, d = i.allowedImageTypes.join(", ").toUpperCase();
						if (!_) return void this._controller.alert(c["default"].getMessage("txt_notice_file_type_error"), c["default"].getMessage("txt_notice_signature_image_type_error", d));
						if (a.size > r["default"].signatureImageSize) return void this._controller.alert(c["default"].getMessage("txt_notice_signature_image_size"));
						this._asyncCheckSignatureImageValid(a).done(function (t) {
							e.$imageUploadFilename.text(a.name), e._photoinfraRequest.uploadSignatureImage(t, a.type), e._controller.setEditorSignatureImage(t), e._controller.checkModified()
						}).fail(function (t) {
							e._controller.alert(t)
						}).always(function () {
							(0, L["default"])(n).val("").blur()
						}), E["default"].log("PTE_G_ATTACH", n, t)
					}
				}, t.prototype._onImageSignReady = function () {
					this._controller.checkModified()
				}, t.prototype._asyncCheckSignatureImageValid = function (t) {
					var e = L["default"].Deferred(), i = new FileReader;
					return i.onload = function (t) {
						var i = t.target.result, n = new Image;
						n.onload = function () {
							return this.width > r["default"].signatureImageWidth || this.height > r["default"].signatureImageHeight ? void e.reject(c["default"].getMessage("txt_notice_signature_image_size")) : void e.resolve(i)
						}, n.onerror = function () {
							e.reject(c["default"].getMessage("txt_alert_error"))
						}, n.src = i
					}, i.onerror = function () {
						e.reject(c["default"].getMessage("txt_alert_error"))
					}, i.readAsDataURL(t), e
				}, t.prototype._onChangeSignature = function (t) {
					var e = this;
					this._renderSignatureBtnUI(t), t === g["default"].CONTROL.SIGNATURE.IMAGE && (this._controller.waitAsyncResponseEvent("signatureImageUpload"), this._photoinfraRequest.asyncGetSignatureImageURL().done(function (t) {
						e._controller.setEditorSignatureImage(t)
					}).fail(function () {
						e._controller.setEditorSignatureReset()
					}).always(function () {
						e._controller.removeAsyncReponseEvent("signatureImageUpload")
					})), t === g["default"].CONTROL.SIGNATURE.TEXT && (this._updateTextinfoFromUI(), this._controller.setEditorSignatureText(this._textInfo)), this._controller.checkModified()
				}, t.prototype._renderSignatureBtnUI = function (t) {
					var e = this.$detailSignatureBtns.filter("[data-signature='" + t + "']"),
						i = this.$detailSignatureWraps;
					this._currentSignatureType = t, e.addClass(f["default"].ACTIVE_TOGGLE_CLASS).siblings().removeClass(f["default"].ACTIVE_TOGGLE_CLASS), i.removeClass(f["default"].ACTIVE_TOGGLE_CLASS).filter("[data-signature='" + t + "']").addClass(f["default"].ACTIVE_TOGGLE_CLASS), this._checkApplyAllBtnState(), this._controller.resizeViewport()
				}, t.prototype._onClickSignatureApplyAllBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, L["default"])(e),
						n = this.$detailSignatureBtns.filter("." + f["default"].ACTIVE_TOGGLE_CLASS + "[data-signature]").data("signature");
					i.hasClass(f["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setBatchSignatureApply(n), this._checkApplyAllBtnState(), E["default"].log("PTE_G_APPLYALL", e, t))
				}, t.prototype._onClickSignatureApplySelectBtn = function (t) {
					var e = this;
					t.preventDefault();
					var i = t.currentTarget, n = (0, L["default"])(i),
						o = this.$detailSignatureBtns.filter("." + f["default"].ACTIVE_TOGGLE_CLASS + "[data-signature]").data("signature");
					n.hasClass(f["default"].DISABLE_TOGGLE_CLASS) || (this._controller.asyncMultiSelectPhotos().then(function (t) {
						t && t.length && (e._controller.setBatchSignatureApply(o, t), e._checkApplyAllBtnState())
					}), E["default"].log("PTE_G_PORTION", i, t))
				}, t.prototype._onUpdateTextToolbar = function () {
					this._controller.currentControl === g["default"].CONTROLS.SIGNATURE && (this._updateTextinfoFromUI(), this._controller.setEditorSignatureText(this._textInfo))
				}, t.prototype._updateTextinfoFromUI = function () {
					var t = this._textToolbar.getData();
					this._textInfo.font = t.font, this._textInfo.fontSize = t.fontSize, this._textInfo.bold = t.bold, this._textInfo.italic = t.italic, this._textInfo.textColor = t.textColor, this._textInfo.textAlpha = t.textAlpha, this._textInfo.bgColor = t.bgColor, this._textInfo.bgAlpha = t.bgAlpha, this._saveTextInfoToLocalStorage()
				}, t.prototype._saveTextInfoToLocalStorage = function () {
					this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT, this._textInfo.text), this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_FAMILY, this._textInfo.font), this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_SIZE, this._textInfo.fontSize), this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_BOLD, this._textInfo.bold), this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_ITALIC, this._textInfo.italic), this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_COLOR, this._textInfo.textColor), this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_ALPHA, this._textInfo.textAlpha), this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_BG_COLOR, this._textInfo.bgColor), this._storage.setItem(g["default"].COOKIES.SIGNATURE_TEXT_FONT_BG_ALPHA, this._textInfo.bgAlpha)
				}, t.prototype._onMousedownTextInput = function (t) {
					this.$textInput.prop("readonly", !1).focus()
				}, t.prototype._onBlurTextInput = function (t) {
					this.$textInput.prop("readonly", "readonly")
				}, t.prototype._onChangeTextInput = function (t) {
					var e = this;
					if (this._controller.currentControl === g["default"].CONTROLS.SIGNATURE) {
						var i = t.type, n = this.$textInput.val().trim(),
							o = this._controller.options.signature.byteLimit, a = _["default"].getIEVersion();
						10 === a ? _["default"].getBytes(n) >= o ? (n = _["default"].byteCut(n, o), this.$textInput.prop("maxlength", n.length)) : this.$textInput.prop("maxlength", o) : _["default"].getBytes(n) >= o && (n = _["default"].byteCut(n, o), this.$textInput.val(n)), this._textInfo.text = n, "change" === i ? this._applySignatureText() : "input" === i && (this._timer && clearTimeout(this._timer), this._timer = setTimeout(function () {
							e._applySignatureText()
						}, 200))
					}
				}, t.prototype._applySignatureText = function () {
					this._timer && clearTimeout(this._timer), this._updateTextinfoFromUI(), this._controller.currentControl === g["default"].CONTROLS.SIGNATURE && this._currentSignatureType === g["default"].CONTROL.SIGNATURE.TEXT && this._controller.setEditorSignatureText(this._textInfo);
				}, t.prototype._onExitSignature = function (t) {
					this.$detailSignatureBtns.filter("[data-signature='" + g["default"].CONTROL.SIGNATURE.NONE + "']").focus(), this._controller.changeSignature(g["default"].CONTROL.SIGNATURE.NONE), this._controller.resizeViewport(!0)
				}, t.prototype._onUpdateSignatureWidthTooltip = function (t) {
					this.$signatureCoordWidth.find(f["default"].SIGNATURE.SIGNATURE_COORD_NUM).text(Math.floor(t.value));
					var e = this.$signatureCoordWidth.outerWidth(), i = this.$signatureCoordWidth.outerHeight(),
						n = Math.max(0, t.x - e / 2), o = Math.max(0, t.y - i - 5);
					n = Math.min(n, this.$canvas.width() - e), o = Math.min(o, this.$canvas.height() - i), this.$signatureCoordWidth.css({
						left: n,
						top: o
					})
				}, t.prototype._onAddSignatureWidthTooltip = function (t) {
					this.$signatureCoordWidth.addClass(f["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onRemoveSignatureWidthTooltip = function (t) {
					this.$signatureCoordWidth.removeClass(f["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onUpdateSignatureHeightTooltip = function (t) {
					this.$signatureCoordHeight.find(f["default"].SIGNATURE.SIGNATURE_COORD_NUM).text(Math.floor(t.value));
					var e = this.$signatureCoordHeight.outerWidth(), i = this.$signatureCoordHeight.outerHeight(),
						n = Math.max(0, t.x - e - 4), o = Math.max(0, t.y - i / 2);
					this.$signatureCoordHeight.css({left: n, top: o})
				}, t.prototype._onAddSignatureHeightTooltip = function (t) {
					this.$signatureCoordHeight.addClass(f["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onRemoveSignatureHeightTooltip = function (t) {
					this.$signatureCoordHeight.removeClass(f["default"].ACTIVE_TOGGLE_CLASS)
				}, t
			}();
			e["default"] = A
		}, 273: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(96), r = n(s), l = i(97), _ = n(l), d = i(105), u = n(d), p = i(107),
				c = n(p), h = i(108), f = n(h), T = i(257), g = n(T), m = i(124), E = n(m), C = i(114), S = n(C),
				I = i(267), L = n(I), A = i(113), b = n(A), y = i(274), v = n(y), O = i(125), x = n(O),
				R = [200, 160, 120, 80, 40, 34, 28, 19, 16, 14, 11, 10],
				P = [["Abel", "sans-serif"], ["Arvo", "serif"], ["Bungee Shade", "cursive"], ["Cookie", "cursive"], ["Crimson Text", "serif"], ["Dancing Script", "cursive"], ["Dosis", "sans-serif"], ["Duru Sans", "sans-serif"], ["Inconsolata", "monospace"], ["Kreon", "serif"], ["Lancelot", "cursive"], ["Lobster", "cursive"], ["Mandali", "sans-serif"], ["Noto Sans", "sans-serif"], ["Noto Serif", "serif"], ["Podkova", "serif"], ["Quicksand", "sans-serif"], ["Rasa", "serif"], ["Sanchez", "serif "]];
			E["default"].TEXT_TOOL = {
				TEXT_TOOL_BTN: ".npe_text_tool",
				TEXT_TOOL_BTN_TITLE: ".npe_tool_title",
				TEXT_TOOL_BTN_SUBLIST: ".npe_tool_list",
				TEXT_TOOL_BTN_SUBLIST_ITEM: ".npe_tool_item",
				TEXT_TOOL_FONT_BTN: ".npe_text_font_family",
				TEXT_TOOL_FONT_LIST: ".npe_text_font_family_list",
				TEXT_TOOL_FONT_LIST_ITEM: ".npe_tool_item",
				TEXT_TOOL_SIZE_BTN: ".npe_text_font_size",
				TEXT_TOOL_SIZE_LIST: ".npe_text_font_size_list",
				TEXT_TOOL_SIZE_LIST_ITEM: ".npe_tool_item",
				TEXT_TOOL_BOLD_BTN: ".npe_text_font_bold",
				TEXT_TOOL_ITALIC_BTN: ".npe_text_font_italic",
				TEXT_TOOL_FONT_COLOR_BTN: ".npe_text_font_color",
				TEXT_TOOL_BACK_COLOR_BTN: ".npe_text_back_color",
				TEXT_TOOL_COLOR_PREVIEW: ".npe_text_color_preview",
				TEXT_TOOL_COLOR_LAYER: ".npe_color_select_area",
				TEXT_TOOL_COLOR_TABLE: ".npe_color_select_table",
				TEXT_TOOL_COLOR_RECENT: ".npe_color_select_recent",
				TEXT_TOOL_COLOR_ITEM: ".npe_color_select_item",
				TEXT_TOOL_COLOR_CODE_PREVIEW: ".npe_color_select_preview",
				TEXT_TOOL_COLOR_CODE_INPUT: ".npe_color_select_code_input",
				TEXT_TOOL_COLOR_ALPHA_INPUT: ".npe_color_select_opacity_num",
				TEXT_TOOL_COLOR_ALPHA_UP_BTN: ".npe_color_select_opacity_num_control .npe_num_up",
				TEXT_TOOL_COLOR_ALPHA_DOWN_BTN: ".npe_color_select_opacity_num_control .npe_num_down",
				TEXT_TOOL_COLOR_SLIDE_INPUT: ".npe_color_select_opacity_slide .npe_slide"
			};
			var k = function (t) {
				function e(i, n, o) {
					(0, a["default"])(this, e);
					var s = (0, r["default"])(this, t.call(this));
					return s._storage = n, s._$wrapper = (0, b["default"])(E["default"].PHOTOEDITOR_WRAP), s._$textToolWrapper = (0, b["default"])(i), s._$textInput = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_INPUT), s._$textToolBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_BTN), s._$textToolSublist = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_BTN_SUBLIST), s._$textToolFontList = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_FONT_LIST), s._$textToolSizeList = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_SIZE_LIST), s._$textToolFontBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_FONT_BTN), s._$textToolSizeBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_SIZE_BTN), s._$textToolBoldBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_BOLD_BTN), s._$textToolItalicBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_ITALIC_BTN), s._$textToolFontColorBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_FONT_COLOR_BTN), s._$textToolFontColorPreview = s._$textToolFontColorBtn.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_PREVIEW), s._$textToolBackColorBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_BACK_COLOR_BTN), s._$textToolBackColorPreview = s._$textToolBackColorBtn.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_PREVIEW), s._$textToolColorLayer = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_LAYER), s._$textToolColorTable = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_TABLE), s._$textToolColorRecent = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_RECENT), s._$textToolColorCodePreview = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_CODE_PREVIEW), s._$textToolColorCodeInput = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_CODE_INPUT), s._$textToolColorAlphaInput = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_ALPHA_INPUT), s._$textToolColorAlphaUpBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_ALPHA_UP_BTN), s._$textToolColorAlphaDownBtn = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_ALPHA_DOWN_BTN), s._$textToolColorAlphaSlide = s._$textToolWrapper.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_SLIDE_INPUT), s._opacitySlider = new L["default"], s._colorLayerStorage = {}, s._fontsData = [{
						type: "default",
						title: "기본서체",
						fontFamily: "'malgun gothic','맑은 고딕','Helvetica Neue',helvetica,AppleSDGothicNeo-Regular,sans-serif,simhei",
						"default": !0
					}, {
						type: "nanumgothic",
						title: "나눔고딕",
						fontFamily: "'나눔고딕',nanumgothic,se_NanumGothic,AppleSDGothicNeo-Regular,sans-serif,simhei"
					}, {
						type: "nanummyeongjo",
						title: "나눔명조",
						fontFamily: "'나눔명조',nanummyeongjo,se_NanumMyeongjo,serif,simsun"
					}, {
						type: "nanumbarungothic",
						title: "바른고딕",
						fontFamily: "'나눔바른고딕',nanumbarungothic,se_NanumBarunGothic,AppleSDGothicNeo-Regular,sans-serif,simhei"
					}], s._makeFontsData(), s._setOptions(o), s._renderTextTools(), s
				}

				return (0, _["default"])(e, t), e.prototype._makeFontsData = function () {
					var t = f["default"].getFontsDetected(), e = this._fontsData;
					P.forEach(function (t) {
						e.push({type: t[0], title: t[0], fontFamily: "'" + t.join("','") + "'"})
					}), t.forEach(function (t) {
						e.push({type: t, title: t, fontFamily: "'" + t + "',sans-serif,simhei"})
					})
				}, e.prototype._setOptions = function (t) {
					this._options = b["default"].extend({
						callback: function () {
						}
					}, t)
				}, e.prototype.activate = function () {
					this._$textToolBtn.on("click.textToolbar", this._onClickTextToolBtn.bind(this)), this._$textToolBtn.on("change.textToolbar", this._onChangeTextToolBtn.bind(this)), this._$textToolSublist.on("click.textToolbar", E["default"].TEXT_TOOL.TEXT_TOOL_BTN_SUBLIST_ITEM, this._onClickTextToolSublistItem.bind(this)), this._$textToolColorLayer.on("click.textToolbar", E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_ITEM, this._onClickTextToolColorItem.bind(this)), this._$textToolColorAlphaInput.on("input.textToolbar", this._onChangeTextToolColorAlphaInput.bind(this)), this._$textToolColorCodeInput.on("keydown.textToolbar", this._onKeydownTextToolColorCodeInput.bind(this)), this._$textToolColorCodeInput.on("input.textToolbar change.textToolbar", this._onChangeTextToolColorCodeInput.bind(this)), this._$textToolColorAlphaUpBtn.on("click.textToolbar", this._onClickTextToolColorAlphaUpBtn.bind(this)), this._$textToolColorAlphaDownBtn.on("click.textToolbar", this._onClickTextToolColorAlphaDownBtn.bind(this)), this._opacitySlider.activate(), this._opacitySlider.on("slide", this._onOpacitySlide.bind(this))
				}, e.prototype.deactivate = function () {
					this._$textToolBtn.off("click.textToolbar"), this._$textToolBtn.off("change.textToolbar"), this._$textToolSublist.off("click.textToolbar"), this._$textToolColorLayer.off("click.textToolbar"), this._$textToolColorAlphaInput.off("input.textToolbar"), this._$textToolColorCodeInput.off("keydown.textToolbar"), this._$textToolColorCodeInput.off("input.textToolbar change.textToolbar"), this._$textToolColorAlphaUpBtn.off("click.textToolbar"), this._$textToolColorAlphaDownBtn.off("click.textToolbar"), this._opacitySlider.deactivate(), this.removeAllListeners()
				}, e.prototype._renderTextTools = function () {
					this._render(this._$textToolFontList, {fonts: this._fontsData}), this._$textToolFontListItems = this._$textToolFontList.find(E["default"].TEXT_TOOL.TEXT_TOOL_FONT_LIST_ITEM), this._render(this._$textToolSizeList, {sizes: R}), this._$textToolSizeListItems = this._$textToolSizeList.find(E["default"].TEXT_TOOL.TEXT_TOOL_SIZE_LIST_ITEM), this._render(this._$textToolColorTable, {colors: c["default"].colors}), this._$textToolFontColorPreview.css("background-color", "#ffffff"), this._$textToolBackColorPreview.css("background-color", "#000000"), this._$textToolFontColorBtn.data({
						color: "#ffffff",
						alpha: 1
					}), this._$textToolBackColorBtn.data({color: "#000000", alpha: .5})
				}, e.prototype._render = function (t, e) {
					g["default"].render(t, e)
				}, e.prototype.loadGoogleWebfonts = function () {
					if (!e._loadedGoogleWebfonts) {
						var t = {
							active: function () {
								sessionStorage.fonts = !0
							}, google: {families: []}
						};
						e._loadedGoogleWebfonts = !0, P.forEach(function (e) {
							t.google.families.push(e[0])
						}), v["default"].load(t)
					}
				}, e.prototype._getFontFamilyByFontType = function (t) {
					var e = null;
					return this._fontsData.forEach(function (i) {
						t === i.type && (e = i.fontFamily)
					}), e
				}, e.prototype.setFont = function (t) {
					var e = this, i = this._$textToolFontListItems.filter(function () {
						return e._getFontFamilyByFontType((0, b["default"])(this).data("type")) === t
					});
					i.length ? i.trigger("click") : this._$textToolFontListItems.filter("[data-default]").trigger("click")
				}, e.prototype.setDefaultFontSize = function (t) {
					this._$textToolSizeListItems.filter("[data-default]").attr("data-type") || this.setFontSize(t)
				}, e.prototype.setFontSize = function (t) {
					t ? this._$textToolSizeListItems.filter("[data-type='" + t + "']").attr("data-default", !0).trigger("click") : this._$textToolSizeListItems.filter("[data-default]").removeAttr("data-default")
				}, e.prototype.setBold = function (t) {
					t ? this._$textToolBoldBtn.addClass(E["default"].ACTIVE_TOGGLE_CLASS).trigger("change") : this._$textToolBoldBtn.removeClass(E["default"].ACTIVE_TOGGLE_CLASS).trigger("change")
				}, e.prototype.setItalic = function (t) {
					t ? this._$textToolItalicBtn.addClass(E["default"].ACTIVE_TOGGLE_CLASS).trigger("change") : this._$textToolItalicBtn.removeClass(E["default"].ACTIVE_TOGGLE_CLASS).trigger("change")
				}, e.prototype.setFontColor = function (t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
					this._changeColorWithType(t, S["default"].COOKIES.SIGNATURE_TEXT_FONT_COLORS), this._changeAlphaWithType(e, S["default"].COOKIES.SIGNATURE_TEXT_FONT_COLORS), this._callbackFontColorSelect(t, e)
				}, e.prototype.setBackColor = function (t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] ? arguments[1] : 1;
					this._changeColorWithType(t, S["default"].COOKIES.SIGNATURE_TEXT_BACK_COLORS), this._changeAlphaWithType(e, S["default"].COOKIES.SIGNATURE_TEXT_BACK_COLORS), this._callbackBackColorSelect(t, e)
				}, e.prototype._onClickTextToolBtn = function (t) {
					var e = t.currentTarget, i = (0, b["default"])(e), n = i.data("clickcode");
					if (!(0, b["default"])(t.target).is(E["default"].TEXT_TOOL.TEXT_TOOL_BTN_SUBLIST_ITEM)) return n && x["default"].log(n, e, t), this._hasTextToolSublist(i) ? void this._toggleTextToolSublist(i) : i.is(this._$textToolFontColorBtn) ? void this._toggleTextToolColorLayer(i, {
						type: S["default"].COOKIES.SIGNATURE_TEXT_FONT_COLORS,
						callback: this._callbackFontColorSelect.bind(this),
						defaultColor: this._options.defaultTextColor,
						defaultAlpha: this._options.defaultTextAlpha
					}) : i.is(this._$textToolBackColorBtn) ? void this._toggleTextToolColorLayer(i, {
						type: S["default"].COOKIES.SIGNATURE_TEXT_BACK_COLORS,
						callback: this._callbackBackColorSelect.bind(this),
						defaultColor: this._options.defaultBgColor,
						defaultAlpha: this._options.defaultBgAlpha
					}) : void i.toggleClass(E["default"].ACTIVE_TOGGLE_CLASS).trigger("change")
				}, e.prototype._callbackFontColorSelect = function (t, e) {
					var i = this._$textToolFontColorBtn;
					i.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_PREVIEW).css({"background-color": t}), i.data({
						color: t,
						alpha: e
					}).trigger("change")
				}, e.prototype._callbackBackColorSelect = function (t, e) {
					var i = this._$textToolBackColorBtn, n = i.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_PREVIEW),
						o = i.find(E["default"].TEXT_TOOL.TEXT_TOOL_BTN_TITLE), a = 0;
					t.match(/[a-f0-9]{2}/gi).forEach(function (t) {
						a += parseInt(t, 16)
					}), a / 3 > 128 ? o.addClass("black") : o.removeClass("black"), n.css({"background-color": t}), i.data({
						color: t,
						alpha: e
					}).trigger("change")
				}, e.prototype.enableEmit = function () {
					this._disableEmit = !1
				}, e.prototype.disableEmit = function () {
					this._disableEmit = !0
				}, e.prototype._onChangeTextToolBtn = function () {
					this._disableEmit || this.emit("update")
				}, e.prototype.getData = function () {
					var t = {}, e = this._$textToolFontBtn.attr("data-type"), i = this._fontsData.filter(function (t) {
						return t.type === e
					}), n = i[0];
					return this._$textToolFontBtn.css("font-family", n.fontFamily), t.font = n.fontFamily, t.fontSize = this._$textToolSizeBtn.attr("data-type"), t.bold = this._$textToolBoldBtn.hasClass(E["default"].ACTIVE_TOGGLE_CLASS), t.italic = this._$textToolItalicBtn.hasClass(E["default"].ACTIVE_TOGGLE_CLASS), t.textColor = this._$textToolFontColorBtn.data("color"), t.textAlpha = this._$textToolFontColorBtn.data("alpha"), t.bgColor = this._$textToolBackColorBtn.data("color"), t.bgAlpha = this._$textToolBackColorBtn.data("alpha"), t
				}, e.prototype._hasTextToolSublist = function (t) {
					var e = t.find(E["default"].TEXT_TOOL.TEXT_TOOL_BTN_SUBLIST);
					return !!e.length
				}, e.prototype._toggleTextToolSublist = function (t) {
					var e = this, i = t.find(E["default"].TEXT_TOOL.TEXT_TOOL_BTN_SUBLIST),
						n = "click." + f["default"].getUniqueId();
					i.hasClass(E["default"].ACTIVE_TOGGLE_CLASS) || (i.addClass(E["default"].ACTIVE_TOGGLE_CLASS), i.scrollTop(i.data("scrollTop") || i.scrollTop() + i.children("." + E["default"].ACTIVE_TOGGLE_CLASS).position().top), setTimeout(function () {
						e._$wrapper.off(n).on(n, function (t) {
							i.data("scrollTop", i.scrollTop()), i.removeClass(E["default"].ACTIVE_TOGGLE_CLASS), e._$wrapper.off(n)
						})
					}, 10))
				}, e.prototype._toggleTextToolColorLayer = function (t, e) {
					var i = this._$textToolColorLayer, n = !!t.find(i).length;
					i.data("options", e), n && !i.is(":visible") ? this._showTextToolColorLayer(t) : n || (t.append(i), this._$wrapper.off("click.textToolbar"), this._showTextToolColorLayer(t))
				}, e.prototype._showTextToolColorLayer = function (t) {
					var e = this, i = this._$textToolColorLayer, n = i.data("options"), o = n.type,
						a = this._colorLayerStorage[o] || {}, s = a.selectedColor || n.defaultColor,
						r = "undefined" == typeof a.selectedAlpha ? n.defaultAlpha : a.selectedAlpha;
					this._opacitySlider.setTarget(this._$textToolColorAlphaSlide, {
						base: 0,
						min: 0,
						max: 100,
						baseData: o === S["default"].COOKIES.SIGNATURE_TEXT_FONT_COLORS ? .1 : 0,
						minData: o === S["default"].COOKIES.SIGNATURE_TEXT_FONT_COLORS ? .1 : 0,
						maxData: 1
					}), this._changeColor(s), this._changeAlpha(r), this._renderRecentColors(o), i.find("input").removeAttr("disabled"), i.addClass(E["default"].ACTIVE_TOGGLE_CLASS), setTimeout(function () {
						e._$wrapper.off("click.textToolbar").on("click.textToolbar", function (t) {
							0 === (0, b["default"])(t.target).closest(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_LAYER).length && (i.removeClass(E["default"].ACTIVE_TOGGLE_CLASS), i.find("input").attr("disabled", !0), e._$wrapper.off("click.textToolbar"))
						})
					}, 10)
				}, e.prototype._onClickTextToolSublistItem = function (t) {
					var e = (0, b["default"])(t.currentTarget), i = e.closest(E["default"].TEXT_TOOL.TEXT_TOOL_BTN),
						n = i.find(E["default"].TEXT_TOOL.TEXT_TOOL_BTN_TITLE),
						o = i.find(E["default"].TEXT_TOOL.TEXT_TOOL_BTN_SUBLIST), a = e.data("type"),
						s = e.data("title");
					e.hasClass(E["default"].DISABLE_TOGGLE_CLASS) || (e.addClass(E["default"].ACTIVE_TOGGLE_CLASS).siblings().removeClass(E["default"].ACTIVE_TOGGLE_CLASS), n.css("font-family", e.css("font-family")).text(s), o.data("scrollTop", o.scrollTop() + e.position().top), i.attr("data-type", a).trigger("change"))
				}, e.prototype._onClickTextToolColorItem = function (t) {
					var e = (0, b["default"])(t.currentTarget), i = e.data("item");
					this._changeColor(i), this._returnSelectedColorAndAlpha()
				}, e.prototype._onChangeTextToolColorAlphaInput = function (t) {
					var e = (0, b["default"])(t.currentTarget), i = parseInt(e.val(), 10) || 0;
					i > 100 && (i = 100), this._opacitySlider.setValue(i), this._changeAlpha(this._opacitySlider.getDataValue()), this._returnSelectedColorAndAlpha()
				}, e.prototype._onKeydownTextToolColorCodeInput = function (t) {
					var e = t.keyCode, i = t.shiftKey, n = t.ctrlKey;
					b["default"].inArray(e, [46, 8, 9, 116]) !== -1 || 65 === e && n === !0 || 67 === e && n === !0 || 88 === e && n === !0 || e >= 35 && e <= 39 || (i || e < 48 || e > 57) && (e < 96 || e > 105) && (e < 65 || e > 90) && t.preventDefault()
				}, e.prototype._onChangeTextToolColorCodeInput = function (t) {
					var e = (0, b["default"])(t.currentTarget), i = e.val().toLowerCase(), n = /[^0-9a-z]/gi;
					n.test(i) && (i = i.replace(n, ""), e.val(i.toUpperCase())), 6 === i.length && (this._changeColor("#" + i), this._returnSelectedColorAndAlpha())
				}, e.prototype._changeColor = function (t) {
					var e = this._$textToolColorLayer, i = e.data("options"), n = i.type;
					/^#[0-9a-z]{6}$/.test(t) || (t = i.defaultColor), this._changeColorWithType(t, n)
				}, e.prototype._changeColorWithType = function (t, e) {
					var i = this._$textToolColorTable.find(E["default"].TEXT_TOOL.TEXT_TOOL_COLOR_ITEM);
					i.removeClass(E["default"].ACTIVE_TOGGLE_CLASS).filter("[data-item='" + t + "']").addClass(E["default"].ACTIVE_TOGGLE_CLASS), this._$textToolColorCodePreview.css({"background-color": t}), this._$textToolColorCodeInput.val(t.replace("#", "")), this._colorLayerStorage[e] = this._colorLayerStorage[e] || {}, this._colorLayerStorage[e].selectedColor = t, this._addColorUsedHistory(e, t), this._renderRecentColors(e)
				}, e.prototype._addColorUsedHistory = function (t, e) {
					var i = 20, n = this._storage.getItem(t) || [];
					if (n && "string" == typeof n && (n = n.split(",")), 7 === e.length) {
						var o = n.indexOf(e);
						o !== -1 && n.splice(o, 1), n.push(e), n.length >= i && (n.reverse(), n = n.splice(0, i).reverse()), this._storage.setItem(t, n)
					}
				}, e.prototype._renderRecentColors = function (t) {
					var e = this, i = this._storage.getItem(t) || [];
					i && "string" == typeof i && (i = i.split(",")), i.reverse(), setTimeout(function () {
						e._render(e._$textToolColorRecent, {recentColors: i})
					}, 20)
				}, e.prototype._changeAlpha = function (t) {
					var e = this._$textToolColorLayer, i = e.data("options"), n = i.type;
					this._changeAlphaWithType(t, n)
				}, e.prototype._changeAlphaWithType = function (t, e) {
					this._opacitySlider.setValueByData(t), this._colorLayerStorage[e] = this._colorLayerStorage[e] || {}, this._colorLayerStorage[e].selectedAlpha = t, this._$textToolColorAlphaInput.val(this._opacitySlider.getValue())
				}, e.prototype._returnSelectedColorAndAlpha = function () {
					var t = this._$textToolColorLayer, e = t.data("options"), i = e.type, n = e.callback,
						o = this._colorLayerStorage[i].selectedColor, a = this._colorLayerStorage[i].selectedAlpha;
					n(o, a)
				}, e.prototype._onClickTextToolColorAlphaUpBtn = function (t) {
					var e = parseInt(this._$textToolColorAlphaInput.val(), 10) || 0;
					e = e < 100 ? e + 1 : e, this._$textToolColorAlphaInput.val(e).trigger("input")
				}, e.prototype._onClickTextToolColorAlphaDownBtn = function (t) {
					var e = parseInt(this._$textToolColorAlphaInput.val(), 10) || 0;
					e = e > 0 ? e - 1 : e, this._$textToolColorAlphaInput.val(e).trigger("input")
				}, e.prototype._onOpacitySlide = function (t) {
					this._$textToolColorAlphaInput.val(t.value).trigger("input")
				}, e
			}(u["default"]);
			e["default"] = k
		}, 275: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(76), a = n(o), s = i(79), r = n(s), l = i(70), _ = n(l), d = i(107), u = n(d), p = i(108),
				c = (n(p), i(257)), h = n(c), f = i(122), T = (n(f), i(124)), g = n(T), m = i(114), E = n(m),
				C = i(125), S = n(C), I = i(113), L = n(I);
			g["default"].STICKER = {
				AREA: ".npe_sticker_area",
				PACK_LIST: ".npe_sticker_list",
				PACK_LIST_ITEM: ".npe_sticker_item[data-packcode]",
				PACK_LIST_ITEM_BTN: ".npe_btn_detail_sticker",
				PACK_LIST_ITEM_IMG: ".npe_sticker_img",
				STICKER_MARKET_BTN: ".npe_sticker_area ._grafolioMarketBtn",
				STICKER_LIST: ".npe_sticker_detail_list",
				STICKER_LIST_ITEM: ".npe_sticker_item_detail",
				ACTIVED_STICKER_DETAIL_WRAP: ".npe_sticker_item.on .npe_sticker_detail_wrap"
			};
			var A = function () {
				function t(e) {
					(0, _["default"])(this, t), this._controller = e, this._grafolio = e._grafolio, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$editorWrapper = (0, L["default"])(g["default"].PHOTOEDITOR_WRAP);
					this._selected = !1, this._packs = [], this._stickers = {}, this.$stickerArea = t.find(g["default"].STICKER.AREA), this.$stickerPackList = t.find(g["default"].STICKER.PACK_LIST), this.$stickerMarketBtn = t.find(g["default"].STICKER.STICKER_MARKET_BTN), this._renderUIByOptions()
				}, t.prototype._renderUIByOptions = function () {
					this._controller.options
				}, t.prototype.activate = function () {
					this.$stickerArea.on("click.sticker", g["default"].STICKER.PACK_LIST_ITEM_BTN, this._onClickStickerPackItemBtn.bind(this)), this.$stickerArea.on("click.sticker", g["default"].STICKER.STICKER_LIST_ITEM, this._onClickStickerItem.bind(this)), this.$editorWrapper.on("click.sticker", this._onClickWrapper.bind(this)), this.$stickerMarketBtn.on("click.sticker", this._onClickMarketBtn.bind(this)), (0, L["default"])(window).on("keydown.peSticker", this._onKeydown.bind(this)), this._controller.on("changeTabToEdit", this._onChangeTabToEdit.bind(this)), this._controller.on("deleteSticker", this._onDeleteSticker.bind(this)), this._controller.on("selectSticker", this._onSelectSticker.bind(this)), this._controller.on("deselectSticker", this._onDeselectSticker.bind(this))
				}, t.prototype.deactivate = function () {
					this.$stickerArea.off("click.sticker"), this.$editorWrapper.off("click.sticker"), this.$stickerMarketBtn.off("click.sticker"), (0, L["default"])(window).off("keydown.peSticker")
				}, t.prototype._render = function (t, e) {
					h["default"].render(t, e)
				}, t.prototype._onChangeTabToEdit = function () {
					this._renderStickerPacks()
				}, t.prototype._renderStickerPacks = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, r["default"])(a["default"].mark(function i() {
						return a["default"].wrap(function (t) {
							for (; ;) switch (t.prev = t.next) {
								case 0:
									if (!this._renderStickerPacksDone) {
										t.next = 2;
										break
									}
									return t.abrupt("return");
								case 2:
									return this._renderStickerPacksDone = !0, this._packs = this._getDefaultStickerPacks(), t.prev = 4, t.t0 = this._packs, t.next = 8, this._getGrafolioStickerPacks();
								case 8:
									t.t1 = t.sent, this._packs = t.t0.concat.call(t.t0, t.t1), t.next = 14;
									break;
								case 12:
									t.prev = 12, t.t2 = t["catch"](4);
								case 14:
									this._render(this.$stickerArea, {stickerPacks: this._packs});
								case 15:
								case"end":
									return t.stop()
							}
						}, i, this, [[4, 12]])
					}));
					return t
				}(), t.prototype._renderStickers = function () {
					function t(t, i) {
						return e.apply(this, arguments)
					}

					var e = (0, r["default"])(a["default"].mark(function i(t, e) {
						var n, o;
						return a["default"].wrap(function (i) {
							for (; ;) switch (i.prev = i.next) {
								case 0:
									if (n = this.$stickerArea.find(g["default"].STICKER.STICKER_LIST).filter("[data-packCode='" + e + "']"), o = {
											"default": "npe_sticker_default",
											grafolio: "npe_sticker_grafolio"
										}, this._stickers[e]) {
										i.next = 13;
										break
									}
									if ("default" === t && (this._stickers[e] = this._getDefaultStickers(e)), "grafolio" !== t) {
										i.next = 13;
										break
									}
									return i.prev = 5, i.next = 8, this._getGrafolioStickers(e);
								case 8:
									this._stickers[e] = i.sent, i.next = 13;
									break;
								case 11:
									i.prev = 11, i.t0 = i["catch"](5);
								case 13:
									n.removeClass("npe_sticker_default").removeClass("npe_sticker_grafolio").addClass(o[t]), this._render(n, {stickers: this._stickers[e]});
								case 15:
								case"end":
									return i.stop()
							}
						}, i, this, [[5, 11]])
					}));
					return t
				}(), t.prototype._getDefaultStickers = function (t) {
					var e = [], i = u["default"].stickerPreview["default"], n = this._controller.options.filterPath,
						o = void 0, a = void 0;
					return u["default"].stickers[t].list.forEach(function (s, r) {
						u["default"].stickers[t].previewImg ? (o = n + u["default"].stickers[t].previewImg, a = [r % i.cols * i.width * -1, Math.floor(r / i.cols) * i.height * -1]) : (o = n + s.thumbnail, a = [0, 0]), e.push({
							type: "default",
							original: n + s.original,
							thumbnail: o,
							backgroundPosition: a.map(function (t) {
								return t + "px"
							}).join(" ")
						})
					}), e
				}, t.prototype._getDefaultStickerPacks = function () {
					var t = [], e = this._controller.options.filterPath;
					for (var i in u["default"].stickers) t.push({
						type: "default",
						packCode: i,
						tabOnImg: e + u["default"].stickers[i].tabOnImg,
						tabOffImg: e + u["default"].stickers[i].tabOffImg
					});
					return t
				}, t.prototype._getGrafolioStickers = function () {
					function t(t) {
						return e.apply(this, arguments)
					}

					var e = (0, r["default"])(a["default"].mark(function i(t) {
						return a["default"].wrap(function (e) {
							for (; ;) switch (e.prev = e.next) {
								case 0:
									return e.next = 2, this._grafolio.getStickers(t);
								case 2:
									return e.abrupt("return", e.sent);
								case 3:
								case"end":
									return e.stop()
							}
						}, i, this)
					}));
					return t
				}(), t.prototype._getGrafolioStickerPacks = function () {
					function t() {
						return e.apply(this, arguments)
					}

					var e = (0, r["default"])(a["default"].mark(function i() {
						return a["default"].wrap(function (t) {
							for (; ;) switch (t.prev = t.next) {
								case 0:
									return t.next = 2, this._grafolio.getStickerPacks();
								case 2:
									return t.abrupt("return", t.sent);
								case 3:
								case"end":
									return t.stop()
							}
						}, i, this)
					}));
					return t
				}(), t.prototype._onClickWrapper = function (t) {
					var e = (0, L["default"])(t.target);
					e.closest(g["default"].STICKER.PACK_LIST_ITEM).length || this._deactivateStickerPackBtns()
				}, t.prototype._onClickMarketBtn = function (t) {
					var e = this._controller.options;
					window.open(e.grafolioMarketUrl), S["default"].log("PTE_H_MARKET", t.currentTarget, t)
				}, t.prototype._onClickStickerPackItemBtn = function (t) {
					var e = t.currentTarget, i = (0, L["default"])(e),
						n = i.closest(g["default"].STICKER.PACK_LIST_ITEM), o = n.data("type");
					this._toggleStickerPackBtn(e), "default" === o ? S["default"].log("PTE_H_DEFAULT", t.currentTarget, t) : S["default"].log("PTE_H_ADDED", t.currentTarget, t)
				}, t.prototype._onClickStickerItem = function (t) {
					var e = (0, L["default"])(t.currentTarget), i = e.data("original"), n = e.data("code");
					this._controller.setEditorSticker(i, n), this._deactivateStickerPackBtns()
				}, t.prototype._toggleStickerPackBtn = function (t) {
					var e = (0, L["default"])(t), i = e.closest(g["default"].STICKER.PACK_LIST_ITEM),
						n = i.data("type"), o = i.data("packcode");
					i.hasClass(g["default"].ACTIVE_TOGGLE_CLASS) || this._renderStickers(n, o), i.siblings().removeClass(g["default"].ACTIVE_TOGGLE_CLASS), i.toggleClass(g["default"].ACTIVE_TOGGLE_CLASS), this.$stickerArea.find(g["default"].STICKER.ACTIVED_STICKER_DETAIL_WRAP).css("margin-top", this.$stickerArea.scrollTop() * -1)
				}, t.prototype._deactivateStickerPackBtns = function () {
					var t = this.$stickerPackList.find(g["default"].STICKER.PACK_LIST_ITEM).filter("." + g["default"].ACTIVE_TOGGLE_CLASS);
					t.removeClass(g["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onDeleteSticker = function () {
					this._controller.checkModified()
				}, t.prototype._onSelectSticker = function (t) {
					this._selected = !0
				}, t.prototype._onDeselectSticker = function (t) {
					this._selected = !1
				}, t.prototype._onKeydown = function (t) {
					if (this._controller.currentControl === E["default"].CONTROLS.STICKER) {
						var e = t.keyCode;
						this._selected && e === E["default"].KEYCODES.DEL && this._controller.setEditorDeleteSticker()
					}
				}, t
			}();
			e["default"] = A
		}, 276: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(241), a = n(o), s = i(116), r = n(s), l = i(70), _ = n(l), d = i(107), u = (n(d), i(108)),
				p = n(u), c = i(257), h = n(c), f = i(122), T = (n(f), i(124)), g = n(T), m = i(114), E = n(m),
				C = i(125), S = n(C), I = i(273), L = n(I), A = i(113), b = n(A);
			g["default"].TEXT = {
				ADD_BTN: ".npe_btn_text_add",
				TEXT_TOOL: ".npe_control_text  .npe_text_tool_area",
				TEXT_INPUT_WRAP: ".npe_text_wrap",
				TEXT_HIDDEN_VIEW: ".npe_text_hidden"
			};
			var y = function () {
				function t(e) {
					(0, _["default"])(this, t), this._controller = e, this._storage = e._storage, this._selectedTextId = null, this._actived = !1, this._activedTextScale = null, this._activedTextPosition = null, this.init()
				}

				return t.prototype.init = function () {
					this._selected = !1, this._defaultTextInfo = {
						text: "내용을 입력하세요.",
						bgColor: "#000000",
						textColor: "#ffffff",
						bold: void 0,
						italic: void 0,
						fontSize: void 0,
						font: void 0,
						bgAlpha: .5,
						textAlpha: 1
					}, this._textInfo = b["default"].extend(!0, {}, this._defaultTextInfo);
					var t = this.$editorWrapper = (0, b["default"])(g["default"].PHOTOEDITOR_WRAP);
					this.$addTextBtn = t.find(g["default"].TEXT.ADD_BTN), this.$textInputWrap = t.find(g["default"].TEXT.TEXT_INPUT_WRAP), this.$textHiddenView = t.find(g["default"].TEXT.TEXT_HIDDEN_VIEW), this._textToolbar = new L["default"](t.find(g["default"].TEXT.TEXT_TOOL), this._storage, {
						defaultTextColor: this._defaultTextInfo.textColor,
						defaultBgColor: this._defaultTextInfo.bgColor,
						defaultTextAlpha: this._defaultTextInfo.textAlpha,
						defaultBgAlpha: this._defaultTextInfo.bgAlpha
					})
				}, t.prototype.activate = function () {
					this.$addTextBtn.on("click", this._onClickAddTextBtn.bind(this)), this.$textInputWrap.on("keydown keyup change input", this._onChangeTextInput.bind(this)), this.$textInputWrap.on("focusout", this._onFocusoutInput.bind(this)), (0, b["default"])(window).on("keydown.peText", this._onKeydown.bind(this)), this._textToolbar.on("update", this._onUpdateTextToolData.bind(this)), this._textToolbar.activate(), this._controller.on("changeTabToEdit", this._onChangeTabToEdit.bind(this)), this._controller.on("changeCurrentPhoto", this._onChangeCurrentPhoto.bind(this)), this._controller.on("selectText", this._onSelectText.bind(this)), this._controller.on("deselectText", this._onDeselectText.bind(this)), this._controller.on("activeInput", this._onActiveInput.bind(this)), this._controller.on("deleteText", this._onDeleteText.bind(this))
				}, t.prototype.deactivate = function () {
					this.$addTextBtn.off("click"), this.$textInputWrap.off("keydown keyup change input"), this.$textInputWrap.off("focusout"), (0, b["default"])(window).off("keydown.peText"), this._textToolbar.deactivate()
				}, t.prototype._render = function (t, e) {
					h["default"].render(t, e)
				}, t.prototype._onChangeTabToEdit = function () {
					this._loadTextInfoFromLocalStorage(), this._updateTextToolbar(), this._textToolbar.loadGoogleWebfonts()
				}, t.prototype._loadTextInfoFromLocalStorage = function () {
					this._textInfo.font = this._storage.getItem(E["default"].COOKIES.TEXT_FONT_FAMILY), this._textInfo.fontSize = this._storage.getItem(E["default"].COOKIES.TEXT_FONT_SIZE), this._textInfo.bold = this._storage.getItem(E["default"].COOKIES.TEXT_FONT_BOLD) || this._defaultTextInfo.bold, this._textInfo.italic = this._storage.getItem(E["default"].COOKIES.TEXT_FONT_ITALIC) || this._defaultTextInfo.italic, this._textInfo.textColor = this._storage.getItem(E["default"].COOKIES.TEXT_FONT_COLOR) || this._defaultTextInfo.textColor, this._textInfo.textAlpha = this._storage.getItem(E["default"].COOKIES.TEXT_FONT_ALPHA), this._textInfo.bgColor = this._storage.getItem(E["default"].COOKIES.TEXT_FONT_BG_COLOR) || this._defaultTextInfo.bgColor, this._textInfo.bgAlpha = this._storage.getItem(E["default"].COOKIES.TEXT_FONT_BG_ALPHA), "string" == typeof this._textInfo.bold && (this._textInfo.bold = "true" === this._textInfo.bold), "string" == typeof this._textInfo.italic && (this._textInfo.italic = "true" === this._textInfo.italic), "undefined" != typeof this._textInfo.textAlpha && null !== this._textInfo.textAlpha || (this._textInfo.textAlpha = this._defaultTextInfo.textAlpha), "undefined" != typeof this._textInfo.bgAlpha && null !== this._textInfo.bgAlpha || (this._textInfo.bgAlpha = this._defaultTextInfo.bgAlpha)
				}, t.prototype._onChangeCurrentPhoto = function () {
					this._setDefaultFontSize()
				}, t.prototype._setDefaultFontSize = function () {
					var t = this._controller.getCurrentPhoto(), e = t.width > 1e3 ? 34 : 16;
					this._textToolbar.setDefaultFontSize(e)
				}, t.prototype._updateTextToolbar = function () {
					var t = (0, r["default"])({}, this._textInfo);
					this._textToolbar.disableEmit(), this._textToolbar.setFont(t.font), this._textToolbar.setFontSize(t.fontSize), this._textToolbar.setBold(t.bold), this._textToolbar.setItalic(t.italic), this._textToolbar.setFontColor(t.textColor, t.textAlpha), this._textToolbar.setBackColor(t.bgColor, t.bgAlpha), this._textToolbar.enableEmit()
				}, t.prototype._onUpdateTextToolData = function () {
					var t = this._textToolbar.getData();
					this._textInfo.font = t.font, this._textInfo.fontSize = t.fontSize, this._textInfo.bold = t.bold, this._textInfo.italic = t.italic, this._textInfo.textColor = t.textColor, this._textInfo.textAlpha = t.textAlpha, this._textInfo.bgColor = t.bgColor, this._textInfo.bgAlpha = t.bgAlpha, this._saveTextInfoToLocalStorage(), null !== this._selectedTextId && this._controller.setEditorUpdateText(this._selectedTextId, (0, r["default"])({}, this._textInfo));
				}, t.prototype._saveTextInfoToLocalStorage = function () {
					this._storage.setItem(E["default"].COOKIES.TEXT_FONT_FAMILY, this._textInfo.font), this._storage.setItem(E["default"].COOKIES.TEXT_FONT_SIZE, this._textInfo.fontSize), this._storage.setItem(E["default"].COOKIES.TEXT_FONT_BOLD, this._textInfo.bold), this._storage.setItem(E["default"].COOKIES.TEXT_FONT_ITALIC, this._textInfo.italic), this._storage.setItem(E["default"].COOKIES.TEXT_FONT_COLOR, this._textInfo.textColor), this._storage.setItem(E["default"].COOKIES.TEXT_FONT_ALPHA, this._textInfo.textAlpha), this._storage.setItem(E["default"].COOKIES.TEXT_FONT_BG_COLOR, this._textInfo.bgColor), this._storage.setItem(E["default"].COOKIES.TEXT_FONT_BG_ALPHA, this._textInfo.bgAlpha)
				}, t.prototype._onClickAddTextBtn = function (t) {
					t.preventDefault();
					var e = (0, r["default"])({}, this._textInfo);
					e.text = this._defaultTextInfo.text, this._controller.setEditorAddText(e), S["default"].log("PTE_T_NEWADD", t.currentTarget, t)
				}, t.prototype._onChangeTextInput = function () {
					this.resizeTextInputWrap()
				}, t.prototype._onSelectText = function (t) {
					this._selected = !0, this._selectedTextId = t.id, (0, a["default"])(this._textInfo) !== (0, a["default"])(t.option) && (this._textInfo = (0, r["default"])({}, t.option), this._updateTextToolbar())
				}, t.prototype._onDeselectText = function (t) {
					this._selected = !1, this._selectedTextId = null, this._actived = !1
				}, t.prototype._onActiveInput = function (t) {
					var e = this, i = this.$textInputWrap, n = t.option.italic ? Math.ceil(.2 * t.option.fontSize) : 0;
					this._actived = !0, this._activedTextScale = t.scale, this._activedTextPosition = t.position, i.css({
						left: t.position.x,
						top: t.position.y,
						"font-weight": t.option.bold ? "bold" : "normal",
						"font-style": t.option.italic ? "italic" : "normal",
						"font-size": t.option.fontSize + "px",
						"font-family": t.option.font,
						color: p["default"].convertHexToRGBA(t.option.textColor, t.option.textAlpha),
						"background-color": p["default"].convertHexToRGBA(t.option.bgColor, t.option.bgAlpha),
						"transform-origin": "left top",
						transform: "scale(" + t.scale.x + ", " + t.scale.y + ") matrix(" + t.transform.a + ", " + t.transform.b + ", " + t.transform.c + ", " + t.transform.d + ", 0, 0)",
						"padding-right": n + "px"
					}).val(t.option.text), this.resizeTextInputWrap(), i.show(), i.focus().scrollLeft(0).select(), this.resizeTextInputWrap(), setTimeout(function () {
						e.$editorWrapper.on("mousedown.activeTextInput", function (t) {
							(0, b["default"])(t.target).is(e.$textInputWrap) || (e._onFocusoutInput(t), e.$editorWrapper.off("mousedown.activeTextInput"))
						})
					}, 10)
				}, t.prototype._onDeleteText = function () {
					this._controller.checkModified()
				}, t.prototype.resizeTextInputWrap = function () {
					var t = this._controller._state.viewport, e = this.$textInputWrap, i = this.$textHiddenView,
						n = e.val(), o = this._activedTextScale, a = this._activedTextPosition,
						s = parseInt(e.css("padding-right"), 10) || 0, r = p["default"].getIEVersion(),
						l = e.css("font-size"), _ = void 0;
					n = n.replace(/</g, "&lt;"), n = n.replace(/>/g, "&gt;"), n = n.replace(/\n/g, "<br>"), n = n.replace(/\s/g, "&nbsp;"), n += "<br>", i.html(n).css({
						"font-weight": e.css("font-weight"),
						"font-style": e.css("font-style"),
						"font-size": l,
						"font-family": e.css("font-family"),
						"line-height": e.css("line-height"),
						padding: e.css("padding"),
						"letter-spacing": e.css("letter-spacing")
					}), _ = i.width(), r && (_ += 1.1 * parseInt(l, 10)), e.css({
						"max-height": (t.height - a.y) / o.y + t.top,
						"max-width": (t.width - a.x) / o.x + t.left - s,
						width: _,
						height: i.height()
					}), 10 === r && e.scrollLeft() && e.width() === _ && e.scrollLeft(0)
				}, t.prototype._onFocusoutInput = function (t) {
					if (this._actived) {
						var e = (0, r["default"])({}, this._textInfo);
						e.text = this.$textInputWrap.val(), this.$textInputWrap.hide(), this._controller.setEditorUpdateText(this._selectedTextId, e), this._onDeselectText()
					}
				}, t.prototype._onKeydown = function (t) {
					if (this._controller.currentControl === E["default"].CONTROLS.TEXT) {
						var e = t.keyCode;
						this._selected && e === E["default"].KEYCODES.DEL && this._controller.setEditorDeleteText()
					}
				}, t
			}();
			e["default"] = y
		}, 277: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = n(s), l = i(108), _ = (n(l), i(257)), d = n(_), u = i(122),
				p = (n(u), i(124)), c = n(p), h = i(114), f = (n(h), i(125)), T = n(f), g = i(113), m = n(g);
			c["default"].FRAME = {
				DETAIL_FRAME_BTN: ".npe_btn_detail_frame",
				DETAIL_FRAME_APPLY_ALL_BTN: ".npe_control_frame .npe_btn_apply_all",
				DETAIL_FRAME_APPLY_SELECT_BTN: ".npe_control_frame .npe_btn_apply_select"
			};
			var E = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this._currentFrameIndex = 0, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$editorWrapper = (0, m["default"])(c["default"].PHOTOEDITOR_WRAP);
					this.$controlDetails = t.find(c["default"].CONTROL_DETAIL), this.$detailFrameApplyAllBtn = t.find(c["default"].FRAME.DETAIL_FRAME_APPLY_ALL_BTN), this.$detailFrameApplySelectBtn = t.find(c["default"].FRAME.DETAIL_FRAME_APPLY_SELECT_BTN), this._renderFrameBtns()
				}, t.prototype._renderFrameBtns = function () {
					var t = this;
					this._render(this.$controlDetails, {
						frames: r["default"].frames.map(function (e) {
							return e.src = e.path ? t._controller._options.filterPath + e.path : null, e
						})
					}), this.$detailFrameBtns = this.$editorWrapper.find(c["default"].FRAME.DETAIL_FRAME_BTN)
				}, t.prototype.activate = function () {
					this.$controlDetails.on("click", c["default"].FRAME.DETAIL_FRAME_BTN, this._onClickFrameBtn.bind(this)), this.$detailFrameApplyAllBtn.on("click", this._onClickFrameApplyAllBtn.bind(this)), this.$detailFrameApplySelectBtn.on("click", this._onClickFrameApplySelectBtn.bind(this)), this._controller.on("changeFrame", this._onChangeFrame.bind(this)), this._controller.on("updatePhotos", this._onUpdatePhotos.bind(this)), this._controller.on("initControlValues", this._onInitControlValues.bind(this))
				}, t.prototype.deactivate = function () {
					this.$controlDetails.off("click"), this.$detailFrameApplyAllBtn.off("click"), this.$detailFrameApplySelectBtn.off("click")
				}, t.prototype._render = function (t, e) {
					d["default"].render(t, e)
				}, t.prototype._onClickFrameBtn = function (t) {
					var e = t.currentTarget, i = (0, m["default"])(e), n = parseInt(i.data("frame"), 10);
					0 === n ? T["default"].log("PTE_FRAME_NONE", e, t) : T["default"].log("PTE_FRAME_APPLY", e, t), this._controller.setEditorFrame(n)
				}, t.prototype._onClickFrameApplyAllBtn = function (t) {
					t.preventDefault();
					var e = t.currentTarget, i = (0, m["default"])(e);
					i.hasClass(c["default"].DISABLE_TOGGLE_CLASS) || (this._controller.setBatchFrameApply(), this._checkApplyAllBtnState())
				}, t.prototype._onClickFrameApplySelectBtn = function (t) {
					var e = this;
					t.preventDefault();
					var i = t.currentTarget, n = (0, m["default"])(i);
					n.hasClass(c["default"].DISABLE_TOGGLE_CLASS) || (this._controller.asyncMultiSelectPhotos().then(function (t) {
						t && t.length && e._controller.setBatchFrameApply(t)
					}), this._checkApplyAllBtnState())
				}, t.prototype._onChangeFrame = function (t) {
					var e = this.$detailFrameBtns.filter("[data-frame='" + t + "']");
					this._currentFrameIndex = t, e.hasClass(c["default"].ACTIVE_TOGGLE_CLASS) || e.addClass(c["default"].ACTIVE_TOGGLE_CLASS).siblings().removeClass(c["default"].ACTIVE_TOGGLE_CLASS), this._checkApplyAllBtnState()
				}, t.prototype._onInitControlValues = function () {
					this._checkApplyAllBtnState()
				}, t.prototype._onUpdatePhotos = function () {
					this._checkApplyAllBtnState()
				}, t.prototype._checkApplyAllBtnState = function () {
					var t = this, e = this.$detailFrameApplyAllBtn, i = this.$detailFrameApplySelectBtn,
						n = this._controller.photos, o = !1;
					return n.length <= 1 ? (e.addClass(c["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0), void i.addClass(c["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0)) : 0 !== this._currentFrameIndex || (n.forEach(function (e) {
						t._isPhotoAppliedFrame(e) && (o = !0)
					}), o) ? (e.removeClass(c["default"].DISABLE_TOGGLE_CLASS).removeAttr("disabled"), void i.removeClass(c["default"].DISABLE_TOGGLE_CLASS).removeAttr("disabled")) : (e.addClass(c["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0), void i.addClass(c["default"].DISABLE_TOGGLE_CLASS).attr("disabled", !0))
				}, t.prototype._isPhotoAppliedFrame = function (t) {
					var e = t.snapshot, i = t.batchOptions, n = !1;
					return i.frame && 0 === i.frame || (e && e.photoFrame && "number" == typeof e.photoFrame.index || i.frame && "number" == typeof i.frame) && (n = !0), n
				}, t
			}();
			e["default"] = E
		}, 278: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(108), r = n(s), l = i(107), _ = n(l), d = i(257), u = n(d), p = i(122),
				c = n(p), h = i(124), f = n(h), T = i(114), g = n(T), m = i(125), E = n(m), C = i(123), S = n(C),
				I = i(140), L = n(I), A = i(113), b = n(A);
			f["default"].UPLOADER = {
				UPLOAD_BTN: ".npu_btn_submit",
				PC_IMAGE_FILE_BTN: ".npe_pc_image_file",
				PC_IMAGE_BTN: ".npu_btn_mypc",
				CLOUD_BTN: ".npu_btn_cloud",
				SNS_BTN: ".npu_btn_sns",
				SNS_POPUP_BTN: ".npe_btn_sns",
				GAP_CHECK_BTN: ".npu_photo_gap_check",
				GAP_CHECK_BTN_UI: ".npu_btn_photo_gap",
				BATCH_RESIZE_SELECT: ".npu_size_select",
				BATCH_RESIZE_SELECT_TEXT: ".npu_size_text",
				BATCH_RESIZE_SELECT_LIST: ".npu_size_list",
				BATCH_RESIZE_SELECT_ITEM: ".npu_size_item",
				BATCH_RESIZE_CUSTOM: ".npu_size_direct",
				BATCH_RESIZE_CUSTOM_INPUT_WRAP: ".npu_size_direct_input_wrap",
				BATCH_RESIZE_CUSTOM_INPUT: ".npu_size_direct_input",
				BATCH_RESIZE_CUSTOM_CONFIRM_BTN: ".npu_size_direct_input_confirm",
				TOAST_WRAP: ".npu_notice_toast",
				TOAST_MSG: ".npu_notice_toast_text",
				OLD_VERSION_LINK_BTN: ".npu_btn_prev_version"
			};
			var y = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					var t = this.$uploaderWrapper = (0, b["default"])(f["default"].PHOTOUPLOADER_WRAP);
					this.$uploadBtn = t.find(f["default"].UPLOADER.UPLOAD_BTN), this.$pcImageUploadBtn = t.find(f["default"].UPLOADER.PC_IMAGE_FILE_BTN), this.$pcImageUploadBtnUI = t.find(f["default"].UPLOADER.PC_IMAGE_BTN), this.$snsBtn = t.find(f["default"].UPLOADER.SNS_BTN), this.$snsPopupBtn = (0, b["default"])(f["default"].UPLOADER.SNS_POPUP_BTN), this.$cloudImageBtn = t.find(f["default"].UPLOADER.CLOUD_BTN), this.$gapCheckBtn = t.find(f["default"].UPLOADER.GAP_CHECK_BTN), this.$gapCheckBtnUI = t.find(f["default"].UPLOADER.GAP_CHECK_BTN_UI), this.$batchResizeSelect = t.find(f["default"].UPLOADER.BATCH_RESIZE_SELECT), this.$batchResizeSelectText = t.find(f["default"].UPLOADER.BATCH_RESIZE_SELECT_TEXT), this.$batchResizeSelectList = t.find(f["default"].UPLOADER.BATCH_RESIZE_SELECT_LIST), this.$batchResizeCustomInputWrap = t.find(f["default"].UPLOADER.BATCH_RESIZE_CUSTOM_INPUT_WRAP), this.$batchResizeCustomInput = t.find(f["default"].UPLOADER.BATCH_RESIZE_CUSTOM_INPUT), this.$batchResizeCustomConfirmBtn = t.find(f["default"].UPLOADER.BATCH_RESIZE_CUSTOM_CONFIRM_BTN), this.$toastWrap = t.find(f["default"].UPLOADER.TOAST_WRAP), this.$toastMsg = this.$toastWrap.find(f["default"].UPLOADER.TOAST_MSG), this.$oldVersionLinkBtn = t.find(f["default"].UPLOADER.OLD_VERSION_LINK_BTN), this._modal = new S["default"](this._controller._storage), this._renderUIByOptions()
				}, t.prototype._renderUIByOptions = function () {
					var t = this._controller.options;
					this.$gapCheckBtn.toggle(t.useGap && !t.useSingleImageFitScreen), this.$gapCheckBtnUI.toggle(t.useGap && !t.useSingleImageFitScreen), this.$pcImageUploadBtnUI.toggle(t.addType.indexOf("Local") !== -1), this.$cloudImageBtn.toggle(t.addType.indexOf("NPhoto") !== -1), this.$snsBtn.toggle(t.snsPhotoEnabled), this.$pcImageUploadBtn.attr("accept", t.allowedImageExtensions.map(function (t) {
						return "." + t
					}).join(", ").toLowerCase()), this.$oldVersionLinkBtn.toggle(t.flashSupport), t.ndriveNewCnt && this._render(this.$cloudImageBtn, {newCnt: t.ndriveNewCnt}), t.snsNewCnt && this._render(this.$snsBtn, {newCnt: t.snsNewCnt}), this._render(this.$batchResizeSelect, {
						resizePreset: t.resizePreset,
						useResizeCustom: t.resizePreset
					})
				}, t.prototype.activate = function () {
					this.$uploadBtn.on("click", this._onClickUploadBtn.bind(this)), this.$pcImageUploadBtn.on("click", this._onClickPcImageUploadBtn.bind(this)), this.$pcImageUploadBtn.on("change", this._onChangePcImageUploadBtn.bind(this)), this.$snsBtn.on("click", this._onClickSNSBtn.bind(this)), this.$snsPopupBtn.on("click", this._onClickSNSPopupBtn.bind(this)), this.$cloudImageBtn.on("click", this._onClickCloudImageBtn.bind(this)), this.$gapCheckBtn.on("change", this._onChangeGapCheckBtn.bind(this)), this.$batchResizeSelect.on("click", this._onClickBatchResizeSelect.bind(this)), this.$batchResizeSelectList.on("click", f["default"].UPLOADER.BATCH_RESIZE_SELECT_ITEM, this._onClickBatchResizeSelectItem.bind(this)), this.$batchResizeCustomInput.on("focusin", this._onFocusinBatchResizeCustomInput.bind(this)), this.$batchResizeCustomInput.on("focusout", this._onFocusoutBatchResizeCustomInput.bind(this)), this.$batchResizeCustomInput.on("keydown", this._onKeydownBatchResizeCustomInput.bind(this)), this.$batchResizeCustomInput.on("input keyup change", this._onChangeBatchResizeCustom.bind(this)), this.$batchResizeCustomConfirmBtn.on("mousedown", this._onClickBatchResizeCustomConfirmBtn.bind(this)), this.$oldVersionLinkBtn.on("click", this._onClickOldVersionLinkBtn.bind(this)), this._controller.on("changeTab", this._onChangeTab.bind(this)), this._controller.on("changeBatchResize", this._onChangeBatchResize.bind(this)), this._controller.on("updatePhotos", this._onUpdatePhotos.bind(this)), this._controller.on("deleteAllPhotos", this._onDeleteAllPhotos.bind(this)), this._controller.on("deletePhoto", this._onDeletePhoto.bind(this)), this._controller.on("showToastMessage", this._onShowToastMessage.bind(this)), this._controller.on("hideToastMessage", this._onHideToastMessage.bind(this)), this.$gapCheckBtn.trigger("change")
				}, t.prototype.deactivate = function () {
					this.$uploadBtn.off(), this.$pcImageUploadBtn.off(), this.$snsBtn.off(), this.$snsPopupBtn.off(), this.$cloudImageBtn.off(), this.$gapCheckBtn.off(), this.$batchResizeSelect.off(), this.$batchResizeSelectList.off(), this.$batchResizeCustomInput.off(), this.$batchResizeCustomConfirmBtn.off(), this.$oldVersionLinkBtn.off()
				}, t.prototype._render = function (t, e) {
					u["default"].render(t, e)
				}, t.prototype._isDisabledOrHolded = function (t) {
					var e = this._controller.isHolded(), i = (0, b["default"])(t);
					return e || i.hasClass(f["default"].DISABLE_TOGGLE_CLASS)
				}, t.prototype._onChangeTab = function (t) {
					t === g["default"].TAB_LIST.BASE ? this.$uploaderWrapper.addClass(f["default"].ACTIVE_TOGGLE_CLASS) : this.$uploaderWrapper.removeClass(f["default"].ACTIVE_TOGGLE_CLASS)
				}, t.prototype._onClickUploadBtn = function (t) {
					this._isDisabledOrHolded(t.currentTarget) || (this._controller.finishUploader(), E["default"].log("PTE_U_FINISH", t.currentTarget, t), t.preventDefault())
				}, t.prototype._onClickPcImageUploadBtn = function (t) {
					var e = t.currentTarget;
					r["default"].resetInputFileElement(e), E["default"].log("PTE_U_PC_UPLOAD", t.currentTarget, t)
				}, t.prototype._onChangePcImageUploadBtn = function (t) {
					var e = t.currentTarget;
					if (!this._isDisabledOrHolded(e)) {
						var i = e.files;
						i && this._controller.addPhotos("file", i)
					}
				}, t.prototype._onClickSNSBtn = function (t) {
					this._isDisabledOrHolded(t.currentTarget) || (this._modal.snsImagePopup({title: c["default"].getMessage("txt_notice_sns_image_load_title")}), E["default"].log("PTE_U_SNS", t.currentTarget, t))
				}, t.prototype._onClickSNSPopupBtn = function (t) {
					var e = t.currentTarget, i = (0, b["default"])(e).data("sns");
					L["default"].openSNSPhotoAlbumPopup(i), this._modal.close(), E["default"].log("PTE_U_" + i.toUpperCase() + "_UPLOAD", t.currentTarget, t)
				}, t.prototype._onClickCloudImageBtn = function (t) {
					this._isDisabledOrHolded(t.currentTarget) || (L["default"].openNphotoAlbumPopup(), E["default"].log("PTE_U_CLOUD_UPLOAD", t.currentTarget, t))
				}, t.prototype._onChangeGapCheckBtn = function (t) {
					var e = (0, b["default"])(t.currentTarget);
					this._controller._state.isCheckedPhotoGap = e.is(":checked"), E["default"].log("PTE_U_GAP", t.currentTarget, t)
				}, t.prototype._onClickBatchResizeSelect = function (t) {
					var e = this, i = this.$batchResizeSelect, n = "click." + r["default"].getUniqueId();
					i.hasClass(f["default"].ACTIVE_TOGGLE_CLASS) || (i.addClass(f["default"].ACTIVE_TOGGLE_CLASS), setTimeout(function () {
						e.$uploaderWrapper.off(n).on(n, function (t) {
							0 === (0, b["default"])(t.target).closest(f["default"].UPLOADER.BATCH_RESIZE_CUSTOM_INPUT).length && (i.removeClass(f["default"].ACTIVE_TOGGLE_CLASS), e.$uploaderWrapper.off(n))
						})
					}, 10), E["default"].log("PTE_U_RESIZE", t.currentTarget, t))
				}, t.prototype._onClickBatchResizeSelectItem = function (t) {
					var e = (0, b["default"])(t.currentTarget), i = e.data("resize");
					i !== g["default"].CONTROL.RESIZE.CUSTOM && (this._setBatchResizeApply(i), E["default"].log("PTE_U_RESIZE_SIZE", t.currentTarget, t))
				}, t.prototype._onChangeBatchResize = function (t) {
					var e = void 0;
					e = t && t !== g["default"].CONTROL.RESIZE.ORIGINAL ? t + "px" : c["default"].getMessage("txt_original_size"), this.$batchResizeSelectText.text(e)
				}, t.prototype._onUpdatePhotos = function () {
					this._setBatchResizeCustomMax()
				}, t.prototype._onDeleteAllPhotos = function () {
					this._setBatchResizeCustomMax()
				}, t.prototype._onDeletePhoto = function () {
					this._setBatchResizeCustomMax()
				}, t.prototype._onShowToastMessage = function (t) {
					this._showToastMessage(t.message)
				}, t.prototype._onHideToastMessage = function () {
					this._hideToastMessage()
				}, t.prototype._onFocusinBatchResizeCustomInput = function () {
					var t = this.$batchResizeCustomInput, e = Number(t.val()) || "";
					this.$batchResizeCustomInputWrap.addClass(f["default"].FOCUS_TOGGLE_CLASS), this._setBatchResizeCustomInputValue(e, !0)
				}, t.prototype._onFocusoutBatchResizeCustomInput = function (t) {
					t.preventDefault(), this._setBatchResizeCustomInputValue(""), this.$batchResizeCustomInputWrap.removeClass(f["default"].FOCUS_TOGGLE_CLASS)
				}, t.prototype._onKeydownBatchResizeCustomInput = function (t) {
					var e = t.keyCode, i = t.shiftKey, n = t.ctrlKey, o = g["default"].KEYCODES;
					return e === o.ENTER ? (t.preventDefault(), this._setConfirmBatchResizeCustom(t), !1) : void(b["default"].inArray(e, [46, 8, 9, 116]) !== -1 || 65 === e && n === !0 || 67 === e && n === !0 || 88 === e && n === !0 || e >= 35 && e <= 39 || (i || e < 48 || e > 57) && (e < 96 || e > 105) && t.preventDefault())
				}, t.prototype._onChangeBatchResizeCustom = function () {
					var t = this.$batchResizeCustomInput, e = t.val(), i = Number(e), n = Number(t.attr("max"));
					if (i > n) {
						var o = c["default"].getMessage("txt_notice_resize", c["default"].getMessage("txt_max"), n);
						this._showToastMessage(o), this._setBatchResizeCustomInputValue(n)
					}
					/^0[0-9]+/.test(e) && this._setBatchResizeCustomInputValue(e.replace(/^0/, ""))
				}, t.prototype._setBatchResizeCustomInputValue = function (t) {
					var e = arguments.length > 1 && void 0 !== arguments[1] && arguments[1],
						i = this.$batchResizeCustomInput, n = i.data("placeholder");
					e || t || (t = n), i.val(t)
				}, t.prototype._onClickBatchResizeCustomConfirmBtn = function (t) {
					t.preventDefault(), this._setConfirmBatchResizeCustom(t)
				}, t.prototype._onClickOldVersionLinkBtn = function (t) {
					L["default"].redirectToFlashUploader(), E["default"].log("PTE_U_OLDVERSION", t.currentTarget, t)
				}, t.prototype._setConfirmBatchResizeCustom = function (t) {
					var e = this.$batchResizeCustomInput, i = e.val(), n = Number(i), o = Number(e.attr("min"));
					n < o && (n = o), n && this._setBatchResizeApply(n), this.$batchResizeCustomInput.trigger("blur"), this.$batchResizeSelect.trigger("click"), E["default"].log("PTE_U_RESIZE_INPUT", t.currentTarget, t)
				}, t.prototype._setBatchResizeApply = function (t) {
					this._controller.setBatchResizeApply(t)
				}, t.prototype._showToastMessage = function (t) {
					var e = this, i = this.$toastWrap, n = this.$toastMsg;
					i.timer && clearTimeout(i.timer), n.html(t), i.stop(!0, !0).show(), i.timer = setTimeout(function () {
						e._hideToastMessage()
					}, 5e3), (0, b["default"])(window).off("mousedown.uploaderToastMessage").one("mousedown.uploaderToastMessage", function () {
						i.hide()
					})
				}, t.prototype._hideToastMessage = function () {
					this.$toastWrap.hide(), (0, b["default"])(window).off("mousedown.uploaderToastMessage")
				}, t.prototype._setBatchResizeCustomMax = function () {
					var t = this._controller.getPhotosArray(), e = 0;
					t.forEach(function (t) {
						e < t.width && (e = t.width)
					}), this.$batchResizeCustomInput.attr({max: Math.min(_["default"].maxImageSize, e)})
				}, t
			}();
			e["default"] = y
		}, 279: function (t, e, i) {
			"use strict";

			function n(t) {
				return t && t.__esModule ? t : {"default": t}
			}

			e.__esModule = !0;
			var o = i(70), a = n(o), s = i(107), r = (n(s), i(108)), l = n(r), _ = i(257), d = n(_), u = i(122),
				p = n(u), c = i(124), h = n(c), f = i(114), T = (n(f), i(123)), g = n(T), m = i(113), E = n(m);
			h["default"].PROGRESS = {
				PROGRESS_AREA: ".npe_alert_uploading_area",
				PROGRESS_ERROR_AREA: ".npe_alert_uploading_error",
				PROGRESS_ERROR_DETAIL_AREA: ".npe_alert_detail_area",
				PROGRESS_ERROR_DETAIL_TOGGLE_BTN: ".npe_btn_alert_toggle",
				PROGRESS_TOTAL_AREA: ".npe_alert_uploading_total",
				PROGRESS_PART_AREA: ".npe_alert_uploading_part",
				PROGRESS_PART_BAR: ".npe_alert_uploading_part .npe_alert_progress_bar",
				PROGRESS_PART_PERCENT: ".npe_alert_uploading_part .npe_alert_num_perent",
				PROGRESS_CANCEL_BTN: ".npe_alert_btn_cancel",
				PROGRESS_OK_BTN: ".npe_alert_btn_ok"
			};
			var C = {
				upload: p["default"].getMessage("txt_notice_uploading_tit"),
				modifyAll: p["default"].getMessage("txt_notice_modify_all_tit"),
				update: p["default"].getMessage("txt_notice_updating_tit"),
				save: p["default"].getMessage("txt_notice_saving_tit")
			}, S = function () {
				function t(e) {
					(0, a["default"])(this, t), this._controller = e, this.init()
				}

				return t.prototype.init = function () {
					this.$editorWrapper = (0, E["default"])(h["default"].PHOTOEDITOR_WRAP);
					this.$progressArea = (0, E["default"])(h["default"].PROGRESS.PROGRESS_AREA), this.$progressErrorArea = this.$progressArea.find(h["default"].PROGRESS.PROGRESS_ERROR_AREA), this.$progressErrorDetailBtn = this.$progressArea.find(h["default"].PROGRESS.PROGRESS_ERROR_DETAIL_TOGGLE_BTN), this.$progressErrorDetailArea = this.$progressArea.find(h["default"].PROGRESS.PROGRESS_ERROR_DETAIL_AREA), this.$progressTotalArea = this.$progressArea.find(h["default"].PROGRESS.PROGRESS_TOTAL_AREA), this.$progressPartArea = this.$progressArea.find(h["default"].PROGRESS.PROGRESS_PART_AREA), this.$progressPartBar = this.$progressArea.find(h["default"].PROGRESS.PROGRESS_PART_BAR), this.$progressPartPercent = this.$progressArea.find(h["default"].PROGRESS.PROGRESS_PART_PERCENT), this.$progressCancelBtn = (0, E["default"])(h["default"].PROGRESS.PROGRESS_CANCEL_BTN), this.$progressOkBtn = (0, E["default"])(h["default"].PROGRESS.PROGRESS_OK_BTN), this._modal = new g["default"](this._controller._storage)
				}, t.prototype.activate = function () {
					this.$progressCancelBtn.on("click.ProgressDialog", this._onClickCancelBtn.bind(this)), this.$progressOkBtn.on("click.ProgressDialog", this._onClickOkBtn.bind(this)), this.$progressErrorDetailBtn.on("click.ProgressDialog", this._onClickErrorDetailBtn.bind(this)), this._controller.on("startUpload", this._onStartUpload.bind(this)), this._controller.on("uploadSuccess", this._onSuccessUpload.bind(this)), this._controller.on("uploadProgress", this._onProgressUpload.bind(this)), this._controller.on("uploadFail", this._onFailUpload.bind(this)), this._controller.on("finishUpload", this._onFinishUpload.bind(this)), this._controller.on("finishUploadByError", this._onFinishUploadByError.bind(this))
				}, t.prototype.deactivate = function () {
					this.$progressCancelBtn.off(".ProgressDialog"), this.$progressOkBtn.off(".ProgressDialog"), this.$progressErrorDetailBtn.off(".ProgressDialog")
				}, t.prototype._clear = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
					t.list = t.list || [], this._state = {
						mode: t.mode || "upload",
						list: t.list,
						title: t.title || "",
						currentIdx: 0,
						uploadCnt: 0,
						listCnt: t.listCnt || 0,
						totalPercent: 0,
						percent: 0,
						currentFileName: "",
						errorCnt: 0,
						errorLogs: [],
						errorResultMessage: ""
					}, "modifyAll" !== t.mode && (this._state.currentFileName = this._getFileName(0)), this._timer && clearInterval(this._timer)
				}, t.prototype._getFileName = function (t) {
					return this._state.list && this._state.list[t] ? this._state.list[t].name || this._state.list[t].originalFileName || "" : ""
				}, t.prototype._onStartUpload = function () {
					var t = arguments.length > 0 && void 0 !== arguments[0] ? arguments[0] : {};
					this._clear({
						mode: t.mode,
						list: t.list,
						title: C[t.mode],
						listCnt: t.list.length
					}), this._render(this.$progressArea, this._state), this._open();
					var e = "modifyAll" !== t.mode,
						i = Boolean("upload" === t.mode && this._state.currentFileName) || "modifyAll" === t.mode;
					this.$progressTotalArea.toggle(e), this.$progressPartArea.toggle(i), this.$progressCancelBtn.toggle("upload" === t.mode), this.$progressOkBtn.hide(), this._toggleErrorDetailBtn(!1)
				}, t.prototype._onFinishUpload = function () {
					if (this._modal.isOpened && this._state) {
						if (this.$progressCancelBtn.hide(), 0 === this._state.errorCnt) return this._close(), void this._clear();
						this._state.errorCnt && (this._state.errorResultMessage = p["default"].getMessage("txt_notice_uploading_err_result").replace("%s", this._state.listCnt).replace("%s", this._state.errorCnt), this._modal._setTitle(p["default"].getMessage("txt_notice_uploading_err_tit")), this.$progressOkBtn.show()), this._render(this.$progressArea, this._state), this._clear()
					}
				}, t.prototype._onFinishUploadByError = function () {
					this._modal.isOpened && this._state && (this._state.errorResultMessage = p["default"].getMessage("txt_notice_uploading_err"), this.$progressCancelBtn.hide(), this.$progressOkBtn.show(), this._render(this.$progressArea, this._state), this._clear())
				}, t.prototype._onSuccessUpload = function () {
					this._modal.isOpened && this._state && (this._state.uploadCnt++, this._next())
				}, t.prototype._onProgressUpload = function (t) {
					var e = this;
					if (this._modal.isOpened && this._state) {
						if (this._timer && clearInterval(this._timer), t.duration) {
							var i = t.duration / 1e3 / 3;
							this.$progressPartBar.stop(!0, !0).animate({width: t.percent + "%"}, {duration: i}), this._timer = setInterval(function () {
								e._render(e.$progressPartPercent, {percent: parseInt(e.$progressPartBar[0].style.width, 10)})
							}, 50)
						} else this.$progressPartBar.stop(!0, !0).css({width: t.percent + "%"});
						var n = "modifyAll" !== this._state.mode,
							o = Boolean("upload" === this._state.mode && this._state.currentFileName) || "modifyAll" === this._state.mode;
						this.$progressTotalArea.toggle(n), this.$progressPartArea.toggle(o)
					}
				}, t.prototype._onFailUpload = function (t) {
					if (this._modal.isOpened && this._state) {
						var e = l["default"].parseFileName(t.fileName || ""), i = e.name, n = e.extension;
						this._state.errorCnt++, t.message && this._state.errorLogs.push({
							fileName: i || "",
							fileExt: n ? "." + n : "",
							message: t.message
						}), this._next()
					}
				}, t.prototype._onClickCancelBtn = function () {
					this.$progressArea.is(":visible") && (this._controller.abort(), this._close())
				}, t.prototype._onClickOkBtn = function () {
					this.$progressArea.is(":visible") && this._close()
				}, t.prototype._onClickErrorDetailBtn = function () {
					this._toggleErrorDetailBtn()
				}, t.prototype._toggleErrorDetailBtn = function (t) {
					this.$progressErrorDetailArea.toggle(t), this.$progressErrorDetailArea.is(":visible") ? (this.$progressErrorDetailBtn.removeClass("open").addClass("close"), this._render(this.$progressErrorDetailBtn, {btnTxt: "닫기"})) : (this.$progressErrorDetailBtn.removeClass("close").addClass("open"), this._render(this.$progressErrorDetailBtn, {btnTxt: "열기"}))
				}, t.prototype._next = function () {
					var t = this._state;
					t.currentIdx >= t.listCnt - 1 || (t.currentIdx++, t.totalPercent = Math.ceil(t.uploadCnt / t.listCnt * 100), t.percent = 0, t.currentFileName = this._getFileName(t.currentIdx), this._render(this.$progressArea, t))
				}, t.prototype._open = function () {
					this._modal.uploadingPopup({title: this._state.title})
				}, t.prototype._close = function () {
					this._modal.close()
				}, t.prototype._hasError = function () {
					return !!this._state.errorCnt
				}, t.prototype._render = function (t, e) {
					d["default"].render(t, e)
				}, t
			}();
			e["default"] = S
		}
	}), new PhotoEditorApp
};